!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AVABufferSinkParams	include/libavfilter/buffersink.h	/^} AVABufferSinkParams;$/;"	t	typeref:struct:__anon2
AVActiveFormatDescription	include/libavutil/frame.h	/^enum AVActiveFormatDescription {$/;"	g
AVAppToDevMessageType	include/libavdevice/avdevice.h	/^enum AVAppToDevMessageType {$/;"	g
AVAudioFifo	include/libavutil/audio_fifo.h	/^typedef struct AVAudioFifo AVAudioFifo;$/;"	t	typeref:struct:AVAudioFifo
AVAudioResampleContext	include/libavresample/avresample.h	/^typedef struct AVAudioResampleContext AVAudioResampleContext;$/;"	t	typeref:struct:AVAudioResampleContext
AVAudioServiceType	include/libavcodec/avcodec.h	/^enum AVAudioServiceType {$/;"	g
AVBitStreamFilter	include/libavcodec/avcodec.h	/^typedef struct AVBitStreamFilter {$/;"	s
AVBitStreamFilter	include/libavcodec/avcodec.h	/^} AVBitStreamFilter;$/;"	t	typeref:struct:AVBitStreamFilter
AVBitStreamFilterContext	include/libavcodec/avcodec.h	/^typedef struct AVBitStreamFilterContext {$/;"	s
AVBitStreamFilterContext	include/libavcodec/avcodec.h	/^} AVBitStreamFilterContext;$/;"	t	typeref:struct:AVBitStreamFilterContext
AVBlowfish	include/libavutil/blowfish.h	/^typedef struct AVBlowfish {$/;"	s
AVBlowfish	include/libavutil/blowfish.h	/^} AVBlowfish;$/;"	t	typeref:struct:AVBlowfish
AVBuffer	include/libavutil/buffer.h	/^typedef struct AVBuffer AVBuffer;$/;"	t	typeref:struct:AVBuffer
AVBufferPool	include/libavutil/buffer.h	/^typedef struct AVBufferPool AVBufferPool;$/;"	t	typeref:struct:AVBufferPool
AVBufferRef	include/libavutil/buffer.h	/^typedef struct AVBufferRef {$/;"	s
AVBufferRef	include/libavutil/buffer.h	/^} AVBufferRef;$/;"	t	typeref:struct:AVBufferRef
AVBufferSinkParams	include/libavfilter/buffersink.h	/^} AVBufferSinkParams;$/;"	t	typeref:struct:__anon1
AVCHROMA_LOC_BOTTOM	include/libavutil/pixfmt.h	/^    AVCHROMA_LOC_BOTTOM      = 6,$/;"	e	enum:AVChromaLocation
AVCHROMA_LOC_BOTTOMLEFT	include/libavutil/pixfmt.h	/^    AVCHROMA_LOC_BOTTOMLEFT  = 5,$/;"	e	enum:AVChromaLocation
AVCHROMA_LOC_CENTER	include/libavutil/pixfmt.h	/^    AVCHROMA_LOC_CENTER      = 2, \/\/\/< mpeg1, jpeg, h263$/;"	e	enum:AVChromaLocation
AVCHROMA_LOC_LEFT	include/libavutil/pixfmt.h	/^    AVCHROMA_LOC_LEFT        = 1, \/\/\/< mpeg2\/4, h264 default$/;"	e	enum:AVChromaLocation
AVCHROMA_LOC_NB	include/libavutil/pixfmt.h	/^    AVCHROMA_LOC_NB,              \/\/\/< Not part of ABI$/;"	e	enum:AVChromaLocation
AVCHROMA_LOC_TOP	include/libavutil/pixfmt.h	/^    AVCHROMA_LOC_TOP         = 4,$/;"	e	enum:AVChromaLocation
AVCHROMA_LOC_TOPLEFT	include/libavutil/pixfmt.h	/^    AVCHROMA_LOC_TOPLEFT     = 3, \/\/\/< DV$/;"	e	enum:AVChromaLocation
AVCHROMA_LOC_UNSPECIFIED	include/libavutil/pixfmt.h	/^    AVCHROMA_LOC_UNSPECIFIED = 0,$/;"	e	enum:AVChromaLocation
AVCODEC_AVCODEC_H	include/libavcodec/avcodec.h	22;"	d
AVCODEC_AVFFT_H	include/libavcodec/avfft.h	20;"	d
AVCODEC_DV_PROFILE_H	include/libavcodec/dv_profile.h	20;"	d
AVCODEC_DXVA_H	include/libavcodec/dxva2.h	24;"	d
AVCODEC_OLD_CODEC_IDS_H	include/libavcodec/old_codec_ids.h	20;"	d
AVCODEC_VAAPI_H	include/libavcodec/vaapi.h	25;"	d
AVCODEC_VDA_H	include/libavcodec/vda.h	24;"	d
AVCODEC_VDPAU_H	include/libavcodec/vdpau.h	25;"	d
AVCODEC_VERSION_H	include/libavcodec/version.h	21;"	d
AVCODEC_VORBIS_PARSE_H	include/libavcodec/vorbis_parser.h	28;"	d
AVCODEC_XVMC_H	include/libavcodec/xvmc.h	22;"	d
AVCOL_PRI_BT2020	include/libavutil/pixfmt.h	/^    AVCOL_PRI_BT2020      = 9, \/\/\/< ITU-R BT2020$/;"	e	enum:AVColorPrimaries
AVCOL_PRI_BT470BG	include/libavutil/pixfmt.h	/^    AVCOL_PRI_BT470BG     = 5, \/\/\/< also ITU-R BT601-6 625 \/ ITU-R BT1358 625 \/ ITU-R BT1700 625 PAL & SECAM$/;"	e	enum:AVColorPrimaries
AVCOL_PRI_BT470M	include/libavutil/pixfmt.h	/^    AVCOL_PRI_BT470M      = 4, \/\/\/< also FCC Title 47 Code of Federal Regulations 73.682 (a)(20)$/;"	e	enum:AVColorPrimaries
AVCOL_PRI_BT709	include/libavutil/pixfmt.h	/^    AVCOL_PRI_BT709       = 1, \/\/\/< also ITU-R BT1361 \/ IEC 61966-2-4 \/ SMPTE RP177 Annex B$/;"	e	enum:AVColorPrimaries
AVCOL_PRI_FILM	include/libavutil/pixfmt.h	/^    AVCOL_PRI_FILM        = 8, \/\/\/< colour filters using Illuminant C$/;"	e	enum:AVColorPrimaries
AVCOL_PRI_NB	include/libavutil/pixfmt.h	/^    AVCOL_PRI_NB,              \/\/\/< Not part of ABI$/;"	e	enum:AVColorPrimaries
AVCOL_PRI_RESERVED	include/libavutil/pixfmt.h	/^    AVCOL_PRI_RESERVED    = 3,$/;"	e	enum:AVColorPrimaries
AVCOL_PRI_RESERVED0	include/libavutil/pixfmt.h	/^    AVCOL_PRI_RESERVED0   = 0,$/;"	e	enum:AVColorPrimaries
AVCOL_PRI_SMPTE170M	include/libavutil/pixfmt.h	/^    AVCOL_PRI_SMPTE170M   = 6, \/\/\/< also ITU-R BT601-6 525 \/ ITU-R BT1358 525 \/ ITU-R BT1700 NTSC$/;"	e	enum:AVColorPrimaries
AVCOL_PRI_SMPTE240M	include/libavutil/pixfmt.h	/^    AVCOL_PRI_SMPTE240M   = 7, \/\/\/< functionally identical to above$/;"	e	enum:AVColorPrimaries
AVCOL_PRI_UNSPECIFIED	include/libavutil/pixfmt.h	/^    AVCOL_PRI_UNSPECIFIED = 2,$/;"	e	enum:AVColorPrimaries
AVCOL_RANGE_JPEG	include/libavutil/pixfmt.h	/^    AVCOL_RANGE_JPEG        = 2, \/\/\/< the normal     2^n-1   "JPEG" YUV ranges$/;"	e	enum:AVColorRange
AVCOL_RANGE_MPEG	include/libavutil/pixfmt.h	/^    AVCOL_RANGE_MPEG        = 1, \/\/\/< the normal 219*2^(n-8) "MPEG" YUV ranges$/;"	e	enum:AVColorRange
AVCOL_RANGE_NB	include/libavutil/pixfmt.h	/^    AVCOL_RANGE_NB,              \/\/\/< Not part of ABI$/;"	e	enum:AVColorRange
AVCOL_RANGE_UNSPECIFIED	include/libavutil/pixfmt.h	/^    AVCOL_RANGE_UNSPECIFIED = 0,$/;"	e	enum:AVColorRange
AVCOL_SPC_BT2020_CL	include/libavutil/pixfmt.h	/^    AVCOL_SPC_BT2020_CL   = 10, \/\/\/< ITU-R BT2020 constant luminance system$/;"	e	enum:AVColorSpace
AVCOL_SPC_BT2020_NCL	include/libavutil/pixfmt.h	/^    AVCOL_SPC_BT2020_NCL  = 9,  \/\/\/< ITU-R BT2020 non-constant luminance system$/;"	e	enum:AVColorSpace
AVCOL_SPC_BT470BG	include/libavutil/pixfmt.h	/^    AVCOL_SPC_BT470BG     = 5,  \/\/\/< also ITU-R BT601-6 625 \/ ITU-R BT1358 625 \/ ITU-R BT1700 625 PAL & SECAM \/ IEC 61966-2-4 xvYCC601$/;"	e	enum:AVColorSpace
AVCOL_SPC_BT709	include/libavutil/pixfmt.h	/^    AVCOL_SPC_BT709       = 1,  \/\/\/< also ITU-R BT1361 \/ IEC 61966-2-4 xvYCC709 \/ SMPTE RP177 Annex B$/;"	e	enum:AVColorSpace
AVCOL_SPC_FCC	include/libavutil/pixfmt.h	/^    AVCOL_SPC_FCC         = 4,  \/\/\/< FCC Title 47 Code of Federal Regulations 73.682 (a)(20)$/;"	e	enum:AVColorSpace
AVCOL_SPC_NB	include/libavutil/pixfmt.h	/^    AVCOL_SPC_NB,               \/\/\/< Not part of ABI$/;"	e	enum:AVColorSpace
AVCOL_SPC_RESERVED	include/libavutil/pixfmt.h	/^    AVCOL_SPC_RESERVED    = 3,$/;"	e	enum:AVColorSpace
AVCOL_SPC_RGB	include/libavutil/pixfmt.h	/^    AVCOL_SPC_RGB         = 0,  \/\/\/< order of coefficients is actually GBR, also IEC 61966-2-1 (sRGB)$/;"	e	enum:AVColorSpace
AVCOL_SPC_SMPTE170M	include/libavutil/pixfmt.h	/^    AVCOL_SPC_SMPTE170M   = 6,  \/\/\/< also ITU-R BT601-6 525 \/ ITU-R BT1358 525 \/ ITU-R BT1700 NTSC \/ functionally identical to above$/;"	e	enum:AVColorSpace
AVCOL_SPC_SMPTE240M	include/libavutil/pixfmt.h	/^    AVCOL_SPC_SMPTE240M   = 7,$/;"	e	enum:AVColorSpace
AVCOL_SPC_UNSPECIFIED	include/libavutil/pixfmt.h	/^    AVCOL_SPC_UNSPECIFIED = 2,$/;"	e	enum:AVColorSpace
AVCOL_SPC_YCGCO	include/libavutil/pixfmt.h	490;"	d
AVCOL_SPC_YCOCG	include/libavutil/pixfmt.h	/^    AVCOL_SPC_YCOCG       = 8,  \/\/\/< Used by Dirac \/ VC-2 and H.264 FRext, see ITU-T SG16$/;"	e	enum:AVColorSpace
AVCOL_TRC_BT1361_ECG	include/libavutil/pixfmt.h	/^    AVCOL_TRC_BT1361_ECG   = 12, \/\/\/< ITU-R BT1361 Extended Colour Gamut$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_BT2020_10	include/libavutil/pixfmt.h	/^    AVCOL_TRC_BT2020_10    = 14, \/\/\/< ITU-R BT2020 for 10 bit system$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_BT2020_12	include/libavutil/pixfmt.h	/^    AVCOL_TRC_BT2020_12    = 15, \/\/\/< ITU-R BT2020 for 12 bit system$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_BT709	include/libavutil/pixfmt.h	/^    AVCOL_TRC_BT709        = 1,  \/\/\/< also ITU-R BT1361$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_GAMMA22	include/libavutil/pixfmt.h	/^    AVCOL_TRC_GAMMA22      = 4,  \/\/\/< also ITU-R BT470M \/ ITU-R BT1700 625 PAL & SECAM$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_GAMMA28	include/libavutil/pixfmt.h	/^    AVCOL_TRC_GAMMA28      = 5,  \/\/\/< also ITU-R BT470BG$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_IEC61966_2_1	include/libavutil/pixfmt.h	/^    AVCOL_TRC_IEC61966_2_1 = 13, \/\/\/< IEC 61966-2-1 (sRGB or sYCC)$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_IEC61966_2_4	include/libavutil/pixfmt.h	/^    AVCOL_TRC_IEC61966_2_4 = 11, \/\/\/< IEC 61966-2-4$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_LINEAR	include/libavutil/pixfmt.h	/^    AVCOL_TRC_LINEAR       = 8,  \/\/\/< "Linear transfer characteristics"$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_LOG	include/libavutil/pixfmt.h	/^    AVCOL_TRC_LOG          = 9,  \/\/\/< "Logarithmic transfer characteristic (100:1 range)"$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_LOG_SQRT	include/libavutil/pixfmt.h	/^    AVCOL_TRC_LOG_SQRT     = 10, \/\/\/< "Logarithmic transfer characteristic (100 * Sqrt(10) : 1 range)"$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_NB	include/libavutil/pixfmt.h	/^    AVCOL_TRC_NB,                \/\/\/< Not part of ABI$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_RESERVED	include/libavutil/pixfmt.h	/^    AVCOL_TRC_RESERVED     = 3,$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_RESERVED0	include/libavutil/pixfmt.h	/^    AVCOL_TRC_RESERVED0    = 0,$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_SMPTE170M	include/libavutil/pixfmt.h	/^    AVCOL_TRC_SMPTE170M    = 6,  \/\/\/< also ITU-R BT601-6 525 or 625 \/ ITU-R BT1358 525 or 625 \/ ITU-R BT1700 NTSC$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_SMPTE240M	include/libavutil/pixfmt.h	/^    AVCOL_TRC_SMPTE240M    = 7,$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_UNSPECIFIED	include/libavutil/pixfmt.h	/^    AVCOL_TRC_UNSPECIFIED  = 2,$/;"	e	enum:AVColorTransferCharacteristic
AVCRC	include/libavutil/crc.h	/^typedef uint32_t AVCRC;$/;"	t
AVCRCId	include/libavutil/crc.h	/^}AVCRCId;$/;"	t	typeref:enum:__anon13
AVChapter	include/libavformat/avformat.h	/^typedef struct AVChapter {$/;"	s
AVChapter	include/libavformat/avformat.h	/^} AVChapter;$/;"	t	typeref:struct:AVChapter
AVChromaLocation	include/libavutil/pixfmt.h	/^enum AVChromaLocation {$/;"	g
AVClass	include/libavutil/log.h	/^typedef struct AVClass {$/;"	s
AVClass	include/libavutil/log.h	/^} AVClass;$/;"	t	typeref:struct:AVClass
AVClassCategory	include/libavutil/log.h	/^}AVClassCategory;$/;"	t	typeref:enum:__anon9
AVCodec	include/libavcodec/avcodec.h	/^typedef struct AVCodec {$/;"	s
AVCodec	include/libavcodec/avcodec.h	/^} AVCodec;$/;"	t	typeref:struct:AVCodec
AVCodecContext	include/libavcodec/avcodec.h	/^typedef struct AVCodecContext {$/;"	s
AVCodecContext	include/libavcodec/avcodec.h	/^} AVCodecContext;$/;"	t	typeref:struct:AVCodecContext
AVCodecDefault	include/libavcodec/avcodec.h	/^typedef struct AVCodecDefault AVCodecDefault;$/;"	t	typeref:struct:AVCodecDefault
AVCodecDescriptor	include/libavcodec/avcodec.h	/^typedef struct AVCodecDescriptor {$/;"	s
AVCodecDescriptor	include/libavcodec/avcodec.h	/^} AVCodecDescriptor;$/;"	t	typeref:struct:AVCodecDescriptor
AVCodecID	include/libavcodec/avcodec.h	/^enum AVCodecID {$/;"	g
AVCodecParser	include/libavcodec/avcodec.h	/^typedef struct AVCodecParser {$/;"	s
AVCodecParser	include/libavcodec/avcodec.h	/^} AVCodecParser;$/;"	t	typeref:struct:AVCodecParser
AVCodecParserContext	include/libavcodec/avcodec.h	/^typedef struct AVCodecParserContext {$/;"	s
AVCodecParserContext	include/libavcodec/avcodec.h	/^} AVCodecParserContext;$/;"	t	typeref:struct:AVCodecParserContext
AVColorPrimaries	include/libavutil/pixfmt.h	/^enum AVColorPrimaries {$/;"	g
AVColorRange	include/libavutil/pixfmt.h	/^enum AVColorRange {$/;"	g
AVColorSpace	include/libavutil/pixfmt.h	/^enum AVColorSpace {$/;"	g
AVColorTransferCharacteristic	include/libavutil/pixfmt.h	/^enum AVColorTransferCharacteristic {$/;"	g
AVComponentDescriptor	include/libavutil/pixdesc.h	/^typedef struct AVComponentDescriptor {$/;"	s
AVComponentDescriptor	include/libavutil/pixdesc.h	/^} AVComponentDescriptor;$/;"	t	typeref:struct:AVComponentDescriptor
AVDEVICE_AVDEVICE_H	include/libavdevice/avdevice.h	20;"	d
AVDEVICE_VERSION_H	include/libavdevice/version.h	20;"	d
AVDISCARD_ALL	include/libavcodec/avcodec.h	/^    AVDISCARD_ALL     = 48, \/\/\/< discard all$/;"	e	enum:AVDiscard
AVDISCARD_BIDIR	include/libavcodec/avcodec.h	/^    AVDISCARD_BIDIR   = 16, \/\/\/< discard all bidirectional frames$/;"	e	enum:AVDiscard
AVDISCARD_DEFAULT	include/libavcodec/avcodec.h	/^    AVDISCARD_DEFAULT =  0, \/\/\/< discard useless packets like 0 size packets in avi$/;"	e	enum:AVDiscard
AVDISCARD_NONE	include/libavcodec/avcodec.h	/^    AVDISCARD_NONE    =-16, \/\/\/< discard nothing$/;"	e	enum:AVDiscard
AVDISCARD_NONINTRA	include/libavcodec/avcodec.h	/^    AVDISCARD_NONINTRA= 24, \/\/\/< discard all non intra frames$/;"	e	enum:AVDiscard
AVDISCARD_NONKEY	include/libavcodec/avcodec.h	/^    AVDISCARD_NONKEY  = 32, \/\/\/< discard all frames except keyframes$/;"	e	enum:AVDiscard
AVDISCARD_NONREF	include/libavcodec/avcodec.h	/^    AVDISCARD_NONREF  =  8, \/\/\/< discard all non reference$/;"	e	enum:AVDiscard
AVDVProfile	include/libavcodec/dv_profile.h	/^typedef struct AVDVProfile {$/;"	s
AVDVProfile	include/libavcodec/dv_profile.h	/^} AVDVProfile;$/;"	t	typeref:struct:AVDVProfile
AVDevToAppMessageType	include/libavdevice/avdevice.h	/^enum AVDevToAppMessageType {$/;"	g
AVDeviceCapabilitiesQuery	include/libavdevice/avdevice.h	/^typedef struct AVDeviceCapabilitiesQuery {$/;"	s
AVDeviceCapabilitiesQuery	include/libavdevice/avdevice.h	/^} AVDeviceCapabilitiesQuery;$/;"	t	typeref:struct:AVDeviceCapabilitiesQuery
AVDeviceInfo	include/libavdevice/avdevice.h	/^typedef struct AVDeviceInfo {$/;"	s
AVDeviceInfo	include/libavdevice/avdevice.h	/^} AVDeviceInfo;$/;"	t	typeref:struct:AVDeviceInfo
AVDeviceInfoList	include/libavdevice/avdevice.h	/^typedef struct AVDeviceInfoList {$/;"	s
AVDeviceInfoList	include/libavdevice/avdevice.h	/^} AVDeviceInfoList;$/;"	t	typeref:struct:AVDeviceInfoList
AVDeviceRect	include/libavdevice/avdevice.h	/^typedef struct AVDeviceRect {$/;"	s
AVDeviceRect	include/libavdevice/avdevice.h	/^} AVDeviceRect;$/;"	t	typeref:struct:AVDeviceRect
AVDictionary	include/libavutil/dict.h	/^typedef struct AVDictionary AVDictionary;$/;"	t	typeref:struct:AVDictionary
AVDictionaryEntry	include/libavutil/dict.h	/^typedef struct AVDictionaryEntry {$/;"	s
AVDictionaryEntry	include/libavutil/dict.h	/^} AVDictionaryEntry;$/;"	t	typeref:struct:AVDictionaryEntry
AVDiscard	include/libavcodec/avcodec.h	/^enum AVDiscard{$/;"	g
AVDownmixInfo	include/libavutil/downmix_info.h	/^typedef struct AVDownmixInfo {$/;"	s
AVDownmixInfo	include/libavutil/downmix_info.h	/^} AVDownmixInfo;$/;"	t	typeref:struct:AVDownmixInfo
AVDownmixType	include/libavutil/downmix_info.h	/^enum AVDownmixType {$/;"	g
AVDurationEstimationMethod	include/libavformat/avformat.h	/^enum AVDurationEstimationMethod {$/;"	g
AVERROR	include/libavutil/error.h	39;"	d
AVERROR	include/libavutil/error.h	43;"	d
AVERROR_BSF_NOT_FOUND	include/libavutil/error.h	49;"	d
AVERROR_BUFFER_TOO_SMALL	include/libavutil/error.h	51;"	d
AVERROR_BUG	include/libavutil/error.h	50;"	d
AVERROR_BUG2	include/libavutil/error.h	70;"	d
AVERROR_DECODER_NOT_FOUND	include/libavutil/error.h	52;"	d
AVERROR_DEMUXER_NOT_FOUND	include/libavutil/error.h	53;"	d
AVERROR_ENCODER_NOT_FOUND	include/libavutil/error.h	54;"	d
AVERROR_EOF	include/libavutil/error.h	55;"	d
AVERROR_EXIT	include/libavutil/error.h	56;"	d
AVERROR_EXPERIMENTAL	include/libavutil/error.h	72;"	d
AVERROR_EXTERNAL	include/libavutil/error.h	57;"	d
AVERROR_FILTER_NOT_FOUND	include/libavutil/error.h	58;"	d
AVERROR_HTTP_BAD_REQUEST	include/libavutil/error.h	76;"	d
AVERROR_HTTP_FORBIDDEN	include/libavutil/error.h	78;"	d
AVERROR_HTTP_NOT_FOUND	include/libavutil/error.h	79;"	d
AVERROR_HTTP_OTHER_4XX	include/libavutil/error.h	80;"	d
AVERROR_HTTP_SERVER_ERROR	include/libavutil/error.h	81;"	d
AVERROR_HTTP_UNAUTHORIZED	include/libavutil/error.h	77;"	d
AVERROR_INPUT_CHANGED	include/libavutil/error.h	73;"	d
AVERROR_INVALIDDATA	include/libavutil/error.h	59;"	d
AVERROR_MUXER_NOT_FOUND	include/libavutil/error.h	60;"	d
AVERROR_OPTION_NOT_FOUND	include/libavutil/error.h	61;"	d
AVERROR_OUTPUT_CHANGED	include/libavutil/error.h	74;"	d
AVERROR_PATCHWELCOME	include/libavutil/error.h	62;"	d
AVERROR_PROTOCOL_NOT_FOUND	include/libavutil/error.h	63;"	d
AVERROR_STREAM_NOT_FOUND	include/libavutil/error.h	65;"	d
AVERROR_UNKNOWN	include/libavutil/error.h	71;"	d
AVEscapeMode	include/libavutil/avstring.h	/^enum AVEscapeMode {$/;"	g
AVExpr	include/libavutil/eval.h	/^typedef struct AVExpr AVExpr;$/;"	t	typeref:struct:AVExpr
AVFILTER_ALIGN	include/libavfilter/avfilter.h	118;"	d
AVFILTER_ASRC_ABUFFER_H	include/libavfilter/asrc_abuffer.h	20;"	d
AVFILTER_AUTO_CONVERT_ALL	include/libavfilter/avfilter.h	/^    AVFILTER_AUTO_CONVERT_ALL  =  0, \/**< all automatic conversions enabled *\/$/;"	e	enum:__anon4
AVFILTER_AUTO_CONVERT_NONE	include/libavfilter/avfilter.h	/^    AVFILTER_AUTO_CONVERT_NONE = -1, \/**< all automatic conversions disabled *\/$/;"	e	enum:__anon4
AVFILTER_AVCODEC_H	include/libavfilter/avcodec.h	20;"	d
AVFILTER_AVFILTERGRAPH_H	include/libavfilter/avfiltergraph.h	23;"	d
AVFILTER_AVFILTER_H	include/libavfilter/avfilter.h	23;"	d
AVFILTER_BUFFERSINK_H	include/libavfilter/buffersink.h	20;"	d
AVFILTER_BUFFERSRC_H	include/libavfilter/buffersrc.h	21;"	d
AVFILTER_CMD_FLAG_FAST	include/libavfilter/avfilter.h	964;"	d
AVFILTER_CMD_FLAG_ONE	include/libavfilter/avfilter.h	963;"	d
AVFILTER_FLAG_DYNAMIC_INPUTS	include/libavfilter/avfilter.h	431;"	d
AVFILTER_FLAG_DYNAMIC_OUTPUTS	include/libavfilter/avfilter.h	437;"	d
AVFILTER_FLAG_SLICE_THREADS	include/libavfilter/avfilter.h	442;"	d
AVFILTER_FLAG_SUPPORT_TIMELINE	include/libavfilter/avfilter.h	464;"	d
AVFILTER_FLAG_SUPPORT_TIMELINE_GENERIC	include/libavfilter/avfilter.h	451;"	d
AVFILTER_FLAG_SUPPORT_TIMELINE_INTERNAL	include/libavfilter/avfilter.h	459;"	d
AVFILTER_THREAD_SLICE	include/libavfilter/avfilter.h	628;"	d
AVFILTER_VERSION_H	include/libavfilter/version.h	22;"	d
AVFMTCTX_NOHEADER	include/libavformat/avformat.h	1162;"	d
AVFMT_ALLOW_FLUSH	include/libavformat/avformat.h	429;"	d
AVFMT_AVOID_NEG_TS_AUTO	include/libavformat/avformat.h	1501;"	d
AVFMT_AVOID_NEG_TS_MAKE_NON_NEGATIVE	include/libavformat/avformat.h	1502;"	d
AVFMT_AVOID_NEG_TS_MAKE_ZERO	include/libavformat/avformat.h	1503;"	d
AVFMT_DURATION_FROM_BITRATE	include/libavformat/avformat.h	/^    AVFMT_DURATION_FROM_BITRATE \/\/\/< Duration estimated from bitrate (less accurate)$/;"	e	enum:AVDurationEstimationMethod
AVFMT_DURATION_FROM_PTS	include/libavformat/avformat.h	/^    AVFMT_DURATION_FROM_PTS,    \/\/\/< Duration accurately estimated from PTSes$/;"	e	enum:AVDurationEstimationMethod
AVFMT_DURATION_FROM_STREAM	include/libavformat/avformat.h	/^    AVFMT_DURATION_FROM_STREAM, \/\/\/< Duration estimated from a stream with a known duration$/;"	e	enum:AVDurationEstimationMethod
AVFMT_EVENT_FLAG_METADATA_UPDATED	include/libavformat/avformat.h	1485;"	d
AVFMT_FLAG_BITEXACT	include/libavformat/avformat.h	1328;"	d
AVFMT_FLAG_CUSTOM_IO	include/libavformat/avformat.h	1319;"	d
AVFMT_FLAG_DISCARD_CORRUPT	include/libavformat/avformat.h	1320;"	d
AVFMT_FLAG_FLUSH_PACKETS	include/libavformat/avformat.h	1321;"	d
AVFMT_FLAG_GENPTS	include/libavformat/avformat.h	1312;"	d
AVFMT_FLAG_IGNDTS	include/libavformat/avformat.h	1315;"	d
AVFMT_FLAG_IGNIDX	include/libavformat/avformat.h	1313;"	d
AVFMT_FLAG_KEEP_SIDE_DATA	include/libavformat/avformat.h	1332;"	d
AVFMT_FLAG_MP4A_LATM	include/libavformat/avformat.h	1329;"	d
AVFMT_FLAG_NOBUFFER	include/libavformat/avformat.h	1318;"	d
AVFMT_FLAG_NOFILLIN	include/libavformat/avformat.h	1316;"	d
AVFMT_FLAG_NONBLOCK	include/libavformat/avformat.h	1314;"	d
AVFMT_FLAG_NOPARSE	include/libavformat/avformat.h	1317;"	d
AVFMT_FLAG_PRIV_OPT	include/libavformat/avformat.h	1331;"	d
AVFMT_FLAG_SORT_DTS	include/libavformat/avformat.h	1330;"	d
AVFMT_GENERIC_INDEX	include/libavformat/avformat.h	421;"	d
AVFMT_GLOBALHEADER	include/libavformat/avformat.h	419;"	d
AVFMT_NEEDNUMBER	include/libavformat/avformat.h	415;"	d
AVFMT_NOBINSEARCH	include/libavformat/avformat.h	426;"	d
AVFMT_NODIMENSIONS	include/libavformat/avformat.h	424;"	d
AVFMT_NOFILE	include/libavformat/avformat.h	414;"	d
AVFMT_NOGENSEARCH	include/libavformat/avformat.h	427;"	d
AVFMT_NOSTREAMS	include/libavformat/avformat.h	425;"	d
AVFMT_NOTIMESTAMPS	include/libavformat/avformat.h	420;"	d
AVFMT_NO_BYTE_SEEK	include/libavformat/avformat.h	428;"	d
AVFMT_RAWPICTURE	include/libavformat/avformat.h	417;"	d
AVFMT_SEEK_TO_PTS	include/libavformat/avformat.h	447;"	d
AVFMT_SHOW_IDS	include/libavformat/avformat.h	416;"	d
AVFMT_TS_DISCONT	include/libavformat/avformat.h	422;"	d
AVFMT_TS_NEGATIVE	include/libavformat/avformat.h	438;"	d
AVFMT_TS_NONSTRICT	include/libavformat/avformat.h	431;"	d
AVFMT_TS_NONSTRICT	include/libavformat/avformat.h	433;"	d
AVFMT_VARIABLE_FPS	include/libavformat/avformat.h	423;"	d
AVFORMAT_AVFORMAT_H	include/libavformat/avformat.h	22;"	d
AVFORMAT_AVIO_H	include/libavformat/avio.h	21;"	d
AVFORMAT_VERSION_H	include/libavformat/version.h	22;"	d
AVFieldOrder	include/libavcodec/avcodec.h	/^enum AVFieldOrder {$/;"	g
AVFifoBuffer	include/libavutil/fifo.h	/^typedef struct AVFifoBuffer {$/;"	s
AVFifoBuffer	include/libavutil/fifo.h	/^} AVFifoBuffer;$/;"	t	typeref:struct:AVFifoBuffer
AVFilter	include/libavfilter/avfilter.h	/^typedef struct AVFilter {$/;"	s
AVFilter	include/libavfilter/avfilter.h	/^} AVFilter;$/;"	t	typeref:struct:AVFilter
AVFilterBuffer	include/libavfilter/avfilter.h	/^typedef struct AVFilterBuffer {$/;"	s
AVFilterBuffer	include/libavfilter/avfilter.h	/^} AVFilterBuffer;$/;"	t	typeref:struct:AVFilterBuffer
AVFilterBufferRef	include/libavfilter/avfilter.h	/^typedef struct AVFilterBufferRef {$/;"	s
AVFilterBufferRef	include/libavfilter/avfilter.h	/^} AVFilterBufferRef;$/;"	t	typeref:struct:AVFilterBufferRef
AVFilterBufferRefAudioProps	include/libavfilter/avfilter.h	/^typedef struct AVFilterBufferRefAudioProps {$/;"	s
AVFilterBufferRefAudioProps	include/libavfilter/avfilter.h	/^} AVFilterBufferRefAudioProps;$/;"	t	typeref:struct:AVFilterBufferRefAudioProps
AVFilterBufferRefVideoProps	include/libavfilter/avfilter.h	/^typedef struct AVFilterBufferRefVideoProps {$/;"	s
AVFilterBufferRefVideoProps	include/libavfilter/avfilter.h	/^} AVFilterBufferRefVideoProps;$/;"	t	typeref:struct:AVFilterBufferRefVideoProps
AVFilterContext	include/libavfilter/avfilter.h	/^struct AVFilterContext {$/;"	s
AVFilterContext	include/libavfilter/avfilter.h	/^typedef struct AVFilterContext AVFilterContext;$/;"	t	typeref:struct:AVFilterContext
AVFilterFormats	include/libavfilter/avfilter.h	/^typedef struct AVFilterFormats AVFilterFormats;$/;"	t	typeref:struct:AVFilterFormats
AVFilterGraph	include/libavfilter/avfilter.h	/^typedef struct AVFilterGraph {$/;"	s
AVFilterGraph	include/libavfilter/avfilter.h	/^} AVFilterGraph;$/;"	t	typeref:struct:AVFilterGraph
AVFilterGraphInternal	include/libavfilter/avfilter.h	/^typedef struct AVFilterGraphInternal AVFilterGraphInternal;$/;"	t	typeref:struct:AVFilterGraphInternal
AVFilterInOut	include/libavfilter/avfilter.h	/^typedef struct AVFilterInOut {$/;"	s
AVFilterInOut	include/libavfilter/avfilter.h	/^} AVFilterInOut;$/;"	t	typeref:struct:AVFilterInOut
AVFilterInternal	include/libavfilter/avfilter.h	/^typedef struct AVFilterInternal AVFilterInternal;$/;"	t	typeref:struct:AVFilterInternal
AVFilterLink	include/libavfilter/avfilter.h	/^struct AVFilterLink {$/;"	s
AVFilterLink	include/libavfilter/avfilter.h	/^typedef struct AVFilterLink    AVFilterLink;$/;"	t	typeref:struct:AVFilterLink
AVFilterPad	include/libavfilter/avfilter.h	/^struct AVFilterPad {$/;"	s
AVFilterPad	include/libavfilter/avfilter.h	/^typedef struct AVFilterPad     AVFilterPad;$/;"	t	typeref:struct:AVFilterPad
AVFormatContext	include/libavformat/avformat.h	/^typedef struct AVFormatContext {$/;"	s
AVFormatContext	include/libavformat/avformat.h	/^} AVFormatContext;$/;"	t	typeref:struct:AVFormatContext
AVFormatInternal	include/libavformat/avformat.h	/^typedef struct AVFormatInternal AVFormatInternal;$/;"	t	typeref:struct:AVFormatInternal
AVFrac	include/libavformat/avformat.h	/^typedef struct AVFrac {$/;"	s
AVFrac	include/libavformat/avformat.h	/^} AVFrac;$/;"	t	typeref:struct:AVFrac
AVFrame	include/libavutil/frame.h	/^typedef struct AVFrame {$/;"	s
AVFrame	include/libavutil/frame.h	/^} AVFrame;$/;"	t	typeref:struct:AVFrame
AVFrameSideData	include/libavutil/frame.h	/^typedef struct AVFrameSideData {$/;"	s
AVFrameSideData	include/libavutil/frame.h	/^} AVFrameSideData;$/;"	t	typeref:struct:AVFrameSideData
AVFrameSideDataType	include/libavutil/frame.h	/^enum AVFrameSideDataType {$/;"	g
AVHMAC	include/libavutil/hmac.h	/^typedef struct AVHMAC AVHMAC;$/;"	t	typeref:struct:AVHMAC
AVHMACType	include/libavutil/hmac.h	/^enum AVHMACType {$/;"	g
AVHWAccel	include/libavcodec/avcodec.h	/^typedef struct AVHWAccel {$/;"	s
AVHWAccel	include/libavcodec/avcodec.h	/^} AVHWAccel;$/;"	t	typeref:struct:AVHWAccel
AVINDEX_KEYFRAME	include/libavformat/avformat.h	731;"	d
AVIOContext	include/libavformat/avio.h	/^typedef struct AVIOContext {$/;"	s
AVIOContext	include/libavformat/avio.h	/^} AVIOContext;$/;"	t	typeref:struct:AVIOContext
AVIOInterruptCB	include/libavformat/avio.h	/^typedef struct AVIOInterruptCB {$/;"	s
AVIOInterruptCB	include/libavformat/avio.h	/^} AVIOInterruptCB;$/;"	t	typeref:struct:AVIOInterruptCB
AVIO_FLAG_DIRECT	include/libavformat/avio.h	389;"	d
AVIO_FLAG_NONBLOCK	include/libavformat/avio.h	381;"	d
AVIO_FLAG_READ	include/libavformat/avio.h	362;"	d
AVIO_FLAG_READ_WRITE	include/libavformat/avio.h	364;"	d
AVIO_FLAG_WRITE	include/libavformat/avio.h	363;"	d
AVIO_SEEKABLE_NORMAL	include/libavformat/avio.h	38;"	d
AVIndexEntry	include/libavformat/avformat.h	/^typedef struct AVIndexEntry {$/;"	s
AVIndexEntry	include/libavformat/avformat.h	/^} AVIndexEntry;$/;"	t	typeref:struct:AVIndexEntry
AVInputFormat	include/libavformat/avformat.h	/^typedef struct AVInputFormat {$/;"	s
AVInputFormat	include/libavformat/avformat.h	/^} AVInputFormat;$/;"	t	typeref:struct:AVInputFormat
AVLFG	include/libavutil/lfg.h	/^typedef struct AVLFG {$/;"	s
AVLFG	include/libavutil/lfg.h	/^} AVLFG;$/;"	t	typeref:struct:AVLFG
AVLINK_INIT	include/libavfilter/avfilter.h	/^        AVLINK_INIT             \/\/\/< complete$/;"	e	enum:AVFilterLink::__anon3
AVLINK_STARTINIT	include/libavfilter/avfilter.h	/^        AVLINK_STARTINIT,       \/\/\/< started, but incomplete$/;"	e	enum:AVFilterLink::__anon3
AVLINK_UNINIT	include/libavfilter/avfilter.h	/^        AVLINK_UNINIT = 0,      \/\/\/< not started$/;"	e	enum:AVFilterLink::__anon3
AVLockOp	include/libavcodec/avcodec.h	/^enum AVLockOp {$/;"	g
AVMEDIA_TYPE_ATTACHMENT	include/libavutil/avutil.h	/^    AVMEDIA_TYPE_ATTACHMENT,    \/\/\/< Opaque data information usually sparse$/;"	e	enum:AVMediaType
AVMEDIA_TYPE_AUDIO	include/libavutil/avutil.h	/^    AVMEDIA_TYPE_AUDIO,$/;"	e	enum:AVMediaType
AVMEDIA_TYPE_DATA	include/libavutil/avutil.h	/^    AVMEDIA_TYPE_DATA,          \/\/\/< Opaque data information usually continuous$/;"	e	enum:AVMediaType
AVMEDIA_TYPE_NB	include/libavutil/avutil.h	/^    AVMEDIA_TYPE_NB$/;"	e	enum:AVMediaType
AVMEDIA_TYPE_SUBTITLE	include/libavutil/avutil.h	/^    AVMEDIA_TYPE_SUBTITLE,$/;"	e	enum:AVMediaType
AVMEDIA_TYPE_UNKNOWN	include/libavutil/avutil.h	/^    AVMEDIA_TYPE_UNKNOWN = -1,  \/\/\/< Usually treated as AVMEDIA_TYPE_DATA$/;"	e	enum:AVMediaType
AVMEDIA_TYPE_VIDEO	include/libavutil/avutil.h	/^    AVMEDIA_TYPE_VIDEO,$/;"	e	enum:AVMediaType
AVMatrixEncoding	include/libavutil/channel_layout.h	/^enum AVMatrixEncoding {$/;"	g
AVMediaType	include/libavutil/avutil.h	/^enum AVMediaType {$/;"	g
AVMixCoeffType	include/libavresample/avresample.h	/^enum AVMixCoeffType {$/;"	g
AVMotionVector	include/libavutil/motion_vector.h	/^typedef struct AVMotionVector {$/;"	s
AVMotionVector	include/libavutil/motion_vector.h	/^} AVMotionVector;$/;"	t	typeref:struct:AVMotionVector
AVOption	include/libavutil/opt.h	/^typedef struct AVOption {$/;"	s
AVOption	include/libavutil/opt.h	/^} AVOption;$/;"	t	typeref:struct:AVOption
AVOptionRange	include/libavutil/opt.h	/^typedef struct AVOptionRange {$/;"	s
AVOptionRange	include/libavutil/opt.h	/^} AVOptionRange;$/;"	t	typeref:struct:AVOptionRange
AVOptionRanges	include/libavutil/opt.h	/^typedef struct AVOptionRanges {$/;"	s
AVOptionRanges	include/libavutil/opt.h	/^} AVOptionRanges;$/;"	t	typeref:struct:AVOptionRanges
AVOptionType	include/libavutil/opt.h	/^enum AVOptionType{$/;"	g
AVOutputFormat	include/libavformat/avformat.h	/^typedef struct AVOutputFormat {$/;"	s
AVOutputFormat	include/libavformat/avformat.h	/^} AVOutputFormat;$/;"	t	typeref:struct:AVOutputFormat
AVPALETTE_COUNT	include/libavutil/pixfmt.h	34;"	d
AVPALETTE_SIZE	include/libavutil/pixfmt.h	33;"	d
AVPROBE_PADDING_SIZE	include/libavformat/avformat.h	411;"	d
AVPROBE_SCORE_EXTENSION	include/libavformat/avformat.h	407;"	d
AVPROBE_SCORE_MAX	include/libavformat/avformat.h	409;"	d
AVPROBE_SCORE_MIME	include/libavformat/avformat.h	408;"	d
AVPROBE_SCORE_RETRY	include/libavformat/avformat.h	404;"	d
AVPROBE_SCORE_STREAM_RETRY	include/libavformat/avformat.h	405;"	d
AVPacket	include/libavcodec/avcodec.h	/^typedef struct AVPacket {$/;"	s
AVPacket	include/libavcodec/avcodec.h	/^} AVPacket;$/;"	t	typeref:struct:AVPacket
AVPacketList	include/libavformat/avformat.h	/^typedef struct AVPacketList {$/;"	s
AVPacketList	include/libavformat/avformat.h	/^} AVPacketList;$/;"	t	typeref:struct:AVPacketList
AVPacketSideData	include/libavcodec/avcodec.h	/^typedef struct AVPacketSideData {$/;"	s
AVPacketSideData	include/libavcodec/avcodec.h	/^} AVPacketSideData;$/;"	t	typeref:struct:AVPacketSideData
AVPacketSideDataType	include/libavcodec/avcodec.h	/^enum AVPacketSideDataType {$/;"	g
AVPanScan	include/libavcodec/avcodec.h	/^typedef struct AVPanScan{$/;"	s
AVPanScan	include/libavcodec/avcodec.h	/^}AVPanScan;$/;"	t	typeref:struct:AVPanScan
AVPicture	include/libavcodec/avcodec.h	/^typedef struct AVPicture {$/;"	s
AVPicture	include/libavcodec/avcodec.h	/^} AVPicture;$/;"	t	typeref:struct:AVPicture
AVPictureStructure	include/libavcodec/avcodec.h	/^enum AVPictureStructure {$/;"	g
AVPictureType	include/libavutil/avutil.h	/^enum AVPictureType {$/;"	g
AVPixFmtDescriptor	include/libavutil/pixdesc.h	/^typedef struct AVPixFmtDescriptor {$/;"	s
AVPixFmtDescriptor	include/libavutil/pixdesc.h	/^} AVPixFmtDescriptor;$/;"	t	typeref:struct:AVPixFmtDescriptor
AVPixelFormat	include/libavutil/pixfmt.h	/^enum AVPixelFormat {$/;"	g
AVProbeData	include/libavformat/avformat.h	/^typedef struct AVProbeData {$/;"	s
AVProbeData	include/libavformat/avformat.h	/^} AVProbeData;$/;"	t	typeref:struct:AVProbeData
AVProfile	include/libavcodec/avcodec.h	/^typedef struct AVProfile {$/;"	s
AVProfile	include/libavcodec/avcodec.h	/^} AVProfile;$/;"	t	typeref:struct:AVProfile
AVProgram	include/libavformat/avformat.h	/^typedef struct AVProgram {$/;"	s
AVProgram	include/libavformat/avformat.h	/^} AVProgram;$/;"	t	typeref:struct:AVProgram
AVRESAMPLE_AVRESAMPLE_H	include/libavresample/avresample.h	22;"	d
AVRESAMPLE_MAX_CHANNELS	include/libavresample/avresample.h	104;"	d
AVRESAMPLE_VERSION_H	include/libavresample/version.h	20;"	d
AVRational	include/libavutil/rational.h	/^typedef struct AVRational{$/;"	s
AVRational	include/libavutil/rational.h	/^} AVRational;$/;"	t	typeref:struct:AVRational
AVReplayGain	include/libavutil/replaygain.h	/^typedef struct AVReplayGain {$/;"	s
AVReplayGain	include/libavutil/replaygain.h	/^} AVReplayGain;$/;"	t	typeref:struct:AVReplayGain
AVResampleDitherMethod	include/libavresample/avresample.h	/^enum AVResampleDitherMethod {$/;"	g
AVResampleFilterType	include/libavresample/avresample.h	/^enum AVResampleFilterType {$/;"	g
AVRounding	include/libavutil/mathematics.h	/^enum AVRounding {$/;"	g
AVSEEK_FLAG_ANY	include/libavformat/avformat.h	2193;"	d
AVSEEK_FLAG_BACKWARD	include/libavformat/avformat.h	2191;"	d
AVSEEK_FLAG_BYTE	include/libavformat/avformat.h	2192;"	d
AVSEEK_FLAG_FRAME	include/libavformat/avformat.h	2194;"	d
AVSEEK_FORCE	include/libavformat/avio.h	249;"	d
AVSEEK_SIZE	include/libavformat/avio.h	241;"	d
AVSTREAM_EVENT_FLAG_METADATA_UPDATED	include/libavformat/avformat.h	906;"	d
AVSTREAM_PARSE_FULL	include/libavformat/avformat.h	/^    AVSTREAM_PARSE_FULL,       \/**< full parsing and repack *\/$/;"	e	enum:AVStreamParseType
AVSTREAM_PARSE_FULL_ONCE	include/libavformat/avformat.h	/^    AVSTREAM_PARSE_FULL_ONCE,  \/**< full parsing and repack of the first frame only, only implemented for H.264 currently *\/$/;"	e	enum:AVStreamParseType
AVSTREAM_PARSE_FULL_RAW	include/libavformat/avformat.h	/^    AVSTREAM_PARSE_FULL_RAW=MKTAG(0,'R','A','W'),       \/**< full parsing and repack with timestamp and position generation by parser for raw$/;"	e	enum:AVStreamParseType
AVSTREAM_PARSE_HEADERS	include/libavformat/avformat.h	/^    AVSTREAM_PARSE_HEADERS,    \/**< Only parse headers, do not repack. *\/$/;"	e	enum:AVStreamParseType
AVSTREAM_PARSE_NONE	include/libavformat/avformat.h	/^    AVSTREAM_PARSE_NONE,$/;"	e	enum:AVStreamParseType
AVSTREAM_PARSE_TIMESTAMPS	include/libavformat/avformat.h	/^    AVSTREAM_PARSE_TIMESTAMPS, \/**< full parsing and interpolation of timestamps for frames not starting on a packet boundary *\/$/;"	e	enum:AVStreamParseType
AVSampleFormat	include/libavutil/samplefmt.h	/^enum AVSampleFormat {$/;"	g
AVSideDataParamChangeFlags	include/libavcodec/avcodec.h	/^enum AVSideDataParamChangeFlags {$/;"	g
AVStereo3D	include/libavutil/stereo3d.h	/^typedef struct AVStereo3D {$/;"	s
AVStereo3D	include/libavutil/stereo3d.h	/^} AVStereo3D;$/;"	t	typeref:struct:AVStereo3D
AVStereo3DType	include/libavutil/stereo3d.h	/^enum AVStereo3DType {$/;"	g
AVStream	include/libavformat/avformat.h	/^typedef struct AVStream {$/;"	s
AVStream	include/libavformat/avformat.h	/^} AVStream;$/;"	t	typeref:struct:AVStream
AVStreamParseType	include/libavformat/avformat.h	/^enum AVStreamParseType {$/;"	g
AVSubtitle	include/libavcodec/avcodec.h	/^typedef struct AVSubtitle {$/;"	s
AVSubtitle	include/libavcodec/avcodec.h	/^} AVSubtitle;$/;"	t	typeref:struct:AVSubtitle
AVSubtitleRect	include/libavcodec/avcodec.h	/^typedef struct AVSubtitleRect {$/;"	s
AVSubtitleRect	include/libavcodec/avcodec.h	/^} AVSubtitleRect;$/;"	t	typeref:struct:AVSubtitleRect
AVSubtitleType	include/libavcodec/avcodec.h	/^enum AVSubtitleType {$/;"	g
AVThreadMessageFlags	include/libavutil/threadmessage.h	/^typedef enum AVThreadMessageFlags {$/;"	g
AVThreadMessageFlags	include/libavutil/threadmessage.h	/^} AVThreadMessageFlags;$/;"	t	typeref:enum:AVThreadMessageFlags
AVThreadMessageQueue	include/libavutil/threadmessage.h	/^typedef struct AVThreadMessageQueue AVThreadMessageQueue;$/;"	t	typeref:struct:AVThreadMessageQueue
AVTimecode	include/libavutil/timecode.h	/^} AVTimecode;$/;"	t	typeref:struct:__anon10
AVTimecodeFlag	include/libavutil/timecode.h	/^enum AVTimecodeFlag {$/;"	g
AVUNERROR	include/libavutil/error.h	40;"	d
AVUNERROR	include/libavutil/error.h	44;"	d
AVUTIL_ADLER32_H	include/libavutil/adler32.h	22;"	d
AVUTIL_AES_H	include/libavutil/aes.h	22;"	d
AVUTIL_ATTRIBUTES_H	include/libavutil/attributes.h	27;"	d
AVUTIL_AUDIO_FIFO_H	include/libavutil/audio_fifo.h	28;"	d
AVUTIL_AVASSERT_H	include/libavutil/avassert.h	28;"	d
AVUTIL_AVCONFIG_H	include/libavutil/avconfig.h	3;"	d
AVUTIL_AVSTRING_H	include/libavutil/avstring.h	22;"	d
AVUTIL_AVUTIL_H	include/libavutil/avutil.h	22;"	d
AVUTIL_BASE64_H	include/libavutil/base64.h	22;"	d
AVUTIL_BLOWFISH_H	include/libavutil/blowfish.h	23;"	d
AVUTIL_BPRINT_H	include/libavutil/bprint.h	22;"	d
AVUTIL_BSWAP_H	include/libavutil/bswap.h	27;"	d
AVUTIL_BUFFER_H	include/libavutil/buffer.h	26;"	d
AVUTIL_CAST5_H	include/libavutil/cast5.h	23;"	d
AVUTIL_CHANNEL_LAYOUT_H	include/libavutil/channel_layout.h	23;"	d
AVUTIL_COMMON_H	include/libavutil/common.h	27;"	d
AVUTIL_CPU_H	include/libavutil/cpu.h	22;"	d
AVUTIL_CRC_H	include/libavutil/crc.h	22;"	d
AVUTIL_DICT_H	include/libavutil/dict.h	32;"	d
AVUTIL_DISPLAY_H	include/libavutil/display.h	22;"	d
AVUTIL_DOWNMIX_INFO_H	include/libavutil/downmix_info.h	22;"	d
AVUTIL_ERROR_H	include/libavutil/error.h	25;"	d
AVUTIL_EVAL_H	include/libavutil/eval.h	27;"	d
AVUTIL_FFVERSION_H	include/libavutil/ffversion.h	2;"	d
AVUTIL_FIFO_H	include/libavutil/fifo.h	25;"	d
AVUTIL_FILE_H	include/libavutil/file.h	20;"	d
AVUTIL_FRAME_H	include/libavutil/frame.h	27;"	d
AVUTIL_HASH_H	include/libavutil/hash.h	22;"	d
AVUTIL_HMAC_H	include/libavutil/hmac.h	22;"	d
AVUTIL_IMGUTILS_H	include/libavutil/imgutils.h	20;"	d
AVUTIL_INTFLOAT_H	include/libavutil/intfloat.h	22;"	d
AVUTIL_INTREADWRITE_H	include/libavutil/intreadwrite.h	20;"	d
AVUTIL_LFG_H	include/libavutil/lfg.h	23;"	d
AVUTIL_LOG_H	include/libavutil/log.h	22;"	d
AVUTIL_LZO_H	include/libavutil/lzo.h	23;"	d
AVUTIL_MACROS_H	include/libavutil/macros.h	26;"	d
AVUTIL_MATHEMATICS_H	include/libavutil/mathematics.h	22;"	d
AVUTIL_MD5_H	include/libavutil/md5.h	22;"	d
AVUTIL_MEM_H	include/libavutil/mem.h	27;"	d
AVUTIL_MOTION_VECTOR_H	include/libavutil/motion_vector.h	20;"	d
AVUTIL_MURMUR3_H	include/libavutil/murmur3.h	22;"	d
AVUTIL_OLD_PIX_FMTS_H	include/libavutil/old_pix_fmts.h	22;"	d
AVUTIL_OPT_H	include/libavutil/opt.h	23;"	d
AVUTIL_PARSEUTILS_H	include/libavutil/parseutils.h	20;"	d
AVUTIL_PIXDESC_H	include/libavutil/pixdesc.h	23;"	d
AVUTIL_PIXELUTILS_H	include/libavutil/pixelutils.h	20;"	d
AVUTIL_PIXFMT_H	include/libavutil/pixfmt.h	22;"	d
AVUTIL_RANDOM_SEED_H	include/libavutil/random_seed.h	22;"	d
AVUTIL_RATIONAL_H	include/libavutil/rational.h	29;"	d
AVUTIL_REPLAYGAIN_H	include/libavutil/replaygain.h	21;"	d
AVUTIL_RIPEMD_H	include/libavutil/ripemd.h	23;"	d
AVUTIL_SAMPLEFMT_H	include/libavutil/samplefmt.h	20;"	d
AVUTIL_SHA512_H	include/libavutil/sha512.h	23;"	d
AVUTIL_SHA_H	include/libavutil/sha.h	22;"	d
AVUTIL_STEREO3D_H	include/libavutil/stereo3d.h	22;"	d
AVUTIL_THREADMESSAGE_H	include/libavutil/threadmessage.h	20;"	d
AVUTIL_TIMECODE_H	include/libavutil/timecode.h	28;"	d
AVUTIL_TIMESTAMP_H	include/libavutil/timestamp.h	25;"	d
AVUTIL_TIME_H	include/libavutil/time.h	22;"	d
AVUTIL_VERSION_H	include/libavutil/version.h	22;"	d
AVUTIL_XTEA_H	include/libavutil/xtea.h	23;"	d
AVVDAContext	include/libavcodec/vda.h	/^typedef struct AVVDAContext {$/;"	s
AVVDAContext	include/libavcodec/vda.h	/^} AVVDAContext;$/;"	t	typeref:struct:AVVDAContext
AVVDPAUContext	include/libavcodec/vdpau.h	/^typedef struct AVVDPAUContext {$/;"	s
AVVDPAUContext	include/libavcodec/vdpau.h	/^} AVVDPAUContext;$/;"	t	typeref:struct:AVVDPAUContext
AVVDPAUPictureInfo	include/libavcodec/vdpau.h	/^union AVVDPAUPictureInfo {$/;"	u
AVVDPAU_Render2	include/libavcodec/vdpau.h	/^typedef int (*AVVDPAU_Render2)(struct AVCodecContext *, struct AVFrame *,$/;"	t
AVVorbisParseContext	include/libavcodec/vorbis_parser.h	/^typedef struct AVVorbisParseContext AVVorbisParseContext;$/;"	t	typeref:struct:AVVorbisParseContext
AVXTEA	include/libavutil/xtea.h	/^typedef struct AVXTEA {$/;"	s
AVXTEA	include/libavutil/xtea.h	/^} AVXTEA;$/;"	t	typeref:struct:AVXTEA
AV_AFD_14_9	include/libavutil/frame.h	/^    AV_AFD_14_9         = 11,$/;"	e	enum:AVActiveFormatDescription
AV_AFD_16_9	include/libavutil/frame.h	/^    AV_AFD_16_9         = 10,$/;"	e	enum:AVActiveFormatDescription
AV_AFD_16_9_SP_14_9	include/libavutil/frame.h	/^    AV_AFD_16_9_SP_14_9 = 14,$/;"	e	enum:AVActiveFormatDescription
AV_AFD_4_3	include/libavutil/frame.h	/^    AV_AFD_4_3          = 9,$/;"	e	enum:AVActiveFormatDescription
AV_AFD_4_3_SP_14_9	include/libavutil/frame.h	/^    AV_AFD_4_3_SP_14_9  = 13,$/;"	e	enum:AVActiveFormatDescription
AV_AFD_SAME	include/libavutil/frame.h	/^    AV_AFD_SAME         = 8,$/;"	e	enum:AVActiveFormatDescription
AV_AFD_SP_4_3	include/libavutil/frame.h	/^    AV_AFD_SP_4_3       = 15,$/;"	e	enum:AVActiveFormatDescription
AV_APP_TO_DEV_GET_MUTE	include/libavdevice/avdevice.h	/^    AV_APP_TO_DEV_GET_MUTE   = MKBETAG('G', 'M', 'U', 'T'),$/;"	e	enum:AVAppToDevMessageType
AV_APP_TO_DEV_GET_VOLUME	include/libavdevice/avdevice.h	/^    AV_APP_TO_DEV_GET_VOLUME = MKBETAG('G', 'V', 'O', 'L'),$/;"	e	enum:AVAppToDevMessageType
AV_APP_TO_DEV_MUTE	include/libavdevice/avdevice.h	/^    AV_APP_TO_DEV_MUTE        = MKBETAG(' ', 'M', 'U', 'T'),$/;"	e	enum:AVAppToDevMessageType
AV_APP_TO_DEV_NONE	include/libavdevice/avdevice.h	/^    AV_APP_TO_DEV_NONE = MKBETAG('N','O','N','E'),$/;"	e	enum:AVAppToDevMessageType
AV_APP_TO_DEV_PAUSE	include/libavdevice/avdevice.h	/^    AV_APP_TO_DEV_PAUSE        = MKBETAG('P', 'A', 'U', ' '),$/;"	e	enum:AVAppToDevMessageType
AV_APP_TO_DEV_PLAY	include/libavdevice/avdevice.h	/^    AV_APP_TO_DEV_PLAY         = MKBETAG('P', 'L', 'A', 'Y'),$/;"	e	enum:AVAppToDevMessageType
AV_APP_TO_DEV_SET_VOLUME	include/libavdevice/avdevice.h	/^    AV_APP_TO_DEV_SET_VOLUME = MKBETAG('S', 'V', 'O', 'L'),$/;"	e	enum:AVAppToDevMessageType
AV_APP_TO_DEV_TOGGLE_MUTE	include/libavdevice/avdevice.h	/^    AV_APP_TO_DEV_TOGGLE_MUTE = MKBETAG('T', 'M', 'U', 'T'),$/;"	e	enum:AVAppToDevMessageType
AV_APP_TO_DEV_TOGGLE_PAUSE	include/libavdevice/avdevice.h	/^    AV_APP_TO_DEV_TOGGLE_PAUSE = MKBETAG('P', 'A', 'U', 'T'),$/;"	e	enum:AVAppToDevMessageType
AV_APP_TO_DEV_UNMUTE	include/libavdevice/avdevice.h	/^    AV_APP_TO_DEV_UNMUTE      = MKBETAG('U', 'M', 'U', 'T'),$/;"	e	enum:AVAppToDevMessageType
AV_APP_TO_DEV_WINDOW_REPAINT	include/libavdevice/avdevice.h	/^    AV_APP_TO_DEV_WINDOW_REPAINT = MKBETAG('R','E','P','A'),$/;"	e	enum:AVAppToDevMessageType
AV_APP_TO_DEV_WINDOW_SIZE	include/libavdevice/avdevice.h	/^    AV_APP_TO_DEV_WINDOW_SIZE = MKBETAG('G','E','O','M'),$/;"	e	enum:AVAppToDevMessageType
AV_AUDIO_SERVICE_TYPE_COMMENTARY	include/libavcodec/avcodec.h	/^    AV_AUDIO_SERVICE_TYPE_COMMENTARY        = 5,$/;"	e	enum:AVAudioServiceType
AV_AUDIO_SERVICE_TYPE_DIALOGUE	include/libavcodec/avcodec.h	/^    AV_AUDIO_SERVICE_TYPE_DIALOGUE          = 4,$/;"	e	enum:AVAudioServiceType
AV_AUDIO_SERVICE_TYPE_EFFECTS	include/libavcodec/avcodec.h	/^    AV_AUDIO_SERVICE_TYPE_EFFECTS           = 1,$/;"	e	enum:AVAudioServiceType
AV_AUDIO_SERVICE_TYPE_EMERGENCY	include/libavcodec/avcodec.h	/^    AV_AUDIO_SERVICE_TYPE_EMERGENCY         = 6,$/;"	e	enum:AVAudioServiceType
AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED	include/libavcodec/avcodec.h	/^    AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED  = 3,$/;"	e	enum:AVAudioServiceType
AV_AUDIO_SERVICE_TYPE_KARAOKE	include/libavcodec/avcodec.h	/^    AV_AUDIO_SERVICE_TYPE_KARAOKE           = 8,$/;"	e	enum:AVAudioServiceType
AV_AUDIO_SERVICE_TYPE_MAIN	include/libavcodec/avcodec.h	/^    AV_AUDIO_SERVICE_TYPE_MAIN              = 0,$/;"	e	enum:AVAudioServiceType
AV_AUDIO_SERVICE_TYPE_NB	include/libavcodec/avcodec.h	/^    AV_AUDIO_SERVICE_TYPE_NB                   , \/\/\/< Not part of ABI$/;"	e	enum:AVAudioServiceType
AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED	include/libavcodec/avcodec.h	/^    AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED = 2,$/;"	e	enum:AVAudioServiceType
AV_AUDIO_SERVICE_TYPE_VOICE_OVER	include/libavcodec/avcodec.h	/^    AV_AUDIO_SERVICE_TYPE_VOICE_OVER        = 7,$/;"	e	enum:AVAudioServiceType
AV_BASE64_SIZE	include/libavutil/base64.h	61;"	d
AV_BE2NE16C	include/libavutil/bswap.h	102;"	d
AV_BE2NE32C	include/libavutil/bswap.h	103;"	d
AV_BE2NE64C	include/libavutil/bswap.h	104;"	d
AV_BE2NEC	include/libavutil/bswap.h	89;"	d
AV_BE2NEC	include/libavutil/bswap.h	98;"	d
AV_BF_ROUNDS	include/libavutil/blowfish.h	33;"	d
AV_BPRINT_SIZE_AUTOMATIC	include/libavutil/bprint.h	95;"	d
AV_BPRINT_SIZE_COUNT_ONLY	include/libavutil/bprint.h	96;"	d
AV_BPRINT_SIZE_UNLIMITED	include/libavutil/bprint.h	94;"	d
AV_BSWAP16C	include/libavutil/bswap.h	51;"	d
AV_BSWAP32C	include/libavutil/bswap.h	52;"	d
AV_BSWAP64C	include/libavutil/bswap.h	53;"	d
AV_BSWAPC	include/libavutil/bswap.h	55;"	d
AV_BUFFERSINK_FLAG_NO_REQUEST	include/libavfilter/buffersink.h	117;"	d
AV_BUFFERSINK_FLAG_PEEK	include/libavfilter/buffersink.h	110;"	d
AV_BUFFERSRC_FLAG_KEEP_REF	include/libavfilter/buffersrc.h	/^    AV_BUFFERSRC_FLAG_KEEP_REF = 8,$/;"	e	enum:__anon5
AV_BUFFERSRC_FLAG_NO_CHECK_FORMAT	include/libavfilter/buffersrc.h	/^    AV_BUFFERSRC_FLAG_NO_CHECK_FORMAT = 1,$/;"	e	enum:__anon5
AV_BUFFERSRC_FLAG_NO_COPY	include/libavfilter/buffersrc.h	/^    AV_BUFFERSRC_FLAG_NO_COPY = 2,$/;"	e	enum:__anon5
AV_BUFFERSRC_FLAG_PUSH	include/libavfilter/buffersrc.h	/^    AV_BUFFERSRC_FLAG_PUSH = 4,$/;"	e	enum:__anon5
AV_BUFFER_FLAG_READONLY	include/libavutil/buffer.h	113;"	d
AV_CH_BACK_CENTER	include/libavutil/channel_layout.h	57;"	d
AV_CH_BACK_LEFT	include/libavutil/channel_layout.h	53;"	d
AV_CH_BACK_RIGHT	include/libavutil/channel_layout.h	54;"	d
AV_CH_FRONT_CENTER	include/libavutil/channel_layout.h	51;"	d
AV_CH_FRONT_LEFT	include/libavutil/channel_layout.h	49;"	d
AV_CH_FRONT_LEFT_OF_CENTER	include/libavutil/channel_layout.h	55;"	d
AV_CH_FRONT_RIGHT	include/libavutil/channel_layout.h	50;"	d
AV_CH_FRONT_RIGHT_OF_CENTER	include/libavutil/channel_layout.h	56;"	d
AV_CH_LAYOUT_2POINT1	include/libavutil/channel_layout.h	87;"	d
AV_CH_LAYOUT_2_1	include/libavutil/channel_layout.h	88;"	d
AV_CH_LAYOUT_2_2	include/libavutil/channel_layout.h	93;"	d
AV_CH_LAYOUT_3POINT1	include/libavutil/channel_layout.h	90;"	d
AV_CH_LAYOUT_4POINT0	include/libavutil/channel_layout.h	91;"	d
AV_CH_LAYOUT_4POINT1	include/libavutil/channel_layout.h	92;"	d
AV_CH_LAYOUT_5POINT0	include/libavutil/channel_layout.h	95;"	d
AV_CH_LAYOUT_5POINT0_BACK	include/libavutil/channel_layout.h	97;"	d
AV_CH_LAYOUT_5POINT1	include/libavutil/channel_layout.h	96;"	d
AV_CH_LAYOUT_5POINT1_BACK	include/libavutil/channel_layout.h	98;"	d
AV_CH_LAYOUT_6POINT0	include/libavutil/channel_layout.h	99;"	d
AV_CH_LAYOUT_6POINT0_FRONT	include/libavutil/channel_layout.h	100;"	d
AV_CH_LAYOUT_6POINT1	include/libavutil/channel_layout.h	102;"	d
AV_CH_LAYOUT_6POINT1_BACK	include/libavutil/channel_layout.h	103;"	d
AV_CH_LAYOUT_6POINT1_FRONT	include/libavutil/channel_layout.h	104;"	d
AV_CH_LAYOUT_7POINT0	include/libavutil/channel_layout.h	105;"	d
AV_CH_LAYOUT_7POINT0_FRONT	include/libavutil/channel_layout.h	106;"	d
AV_CH_LAYOUT_7POINT1	include/libavutil/channel_layout.h	107;"	d
AV_CH_LAYOUT_7POINT1_WIDE	include/libavutil/channel_layout.h	108;"	d
AV_CH_LAYOUT_7POINT1_WIDE_BACK	include/libavutil/channel_layout.h	109;"	d
AV_CH_LAYOUT_HEXAGONAL	include/libavutil/channel_layout.h	101;"	d
AV_CH_LAYOUT_MONO	include/libavutil/channel_layout.h	85;"	d
AV_CH_LAYOUT_NATIVE	include/libavutil/channel_layout.h	78;"	d
AV_CH_LAYOUT_OCTAGONAL	include/libavutil/channel_layout.h	110;"	d
AV_CH_LAYOUT_QUAD	include/libavutil/channel_layout.h	94;"	d
AV_CH_LAYOUT_STEREO	include/libavutil/channel_layout.h	86;"	d
AV_CH_LAYOUT_STEREO_DOWNMIX	include/libavutil/channel_layout.h	111;"	d
AV_CH_LAYOUT_SURROUND	include/libavutil/channel_layout.h	89;"	d
AV_CH_LOW_FREQUENCY	include/libavutil/channel_layout.h	52;"	d
AV_CH_LOW_FREQUENCY_2	include/libavutil/channel_layout.h	73;"	d
AV_CH_SIDE_LEFT	include/libavutil/channel_layout.h	58;"	d
AV_CH_SIDE_RIGHT	include/libavutil/channel_layout.h	59;"	d
AV_CH_STEREO_LEFT	include/libavutil/channel_layout.h	67;"	d
AV_CH_STEREO_RIGHT	include/libavutil/channel_layout.h	68;"	d
AV_CH_SURROUND_DIRECT_LEFT	include/libavutil/channel_layout.h	71;"	d
AV_CH_SURROUND_DIRECT_RIGHT	include/libavutil/channel_layout.h	72;"	d
AV_CH_TOP_BACK_CENTER	include/libavutil/channel_layout.h	65;"	d
AV_CH_TOP_BACK_LEFT	include/libavutil/channel_layout.h	64;"	d
AV_CH_TOP_BACK_RIGHT	include/libavutil/channel_layout.h	66;"	d
AV_CH_TOP_CENTER	include/libavutil/channel_layout.h	60;"	d
AV_CH_TOP_FRONT_CENTER	include/libavutil/channel_layout.h	62;"	d
AV_CH_TOP_FRONT_LEFT	include/libavutil/channel_layout.h	61;"	d
AV_CH_TOP_FRONT_RIGHT	include/libavutil/channel_layout.h	63;"	d
AV_CH_WIDE_LEFT	include/libavutil/channel_layout.h	69;"	d
AV_CH_WIDE_RIGHT	include/libavutil/channel_layout.h	70;"	d
AV_CLASS_CATEGORY_BITSTREAM_FILTER	include/libavutil/log.h	/^    AV_CLASS_CATEGORY_BITSTREAM_FILTER,$/;"	e	enum:__anon9
AV_CLASS_CATEGORY_DECODER	include/libavutil/log.h	/^    AV_CLASS_CATEGORY_DECODER,$/;"	e	enum:__anon9
AV_CLASS_CATEGORY_DEMUXER	include/libavutil/log.h	/^    AV_CLASS_CATEGORY_DEMUXER,$/;"	e	enum:__anon9
AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT	include/libavutil/log.h	/^    AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT,$/;"	e	enum:__anon9
AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT	include/libavutil/log.h	/^    AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT,$/;"	e	enum:__anon9
AV_CLASS_CATEGORY_DEVICE_INPUT	include/libavutil/log.h	/^    AV_CLASS_CATEGORY_DEVICE_INPUT,$/;"	e	enum:__anon9
AV_CLASS_CATEGORY_DEVICE_OUTPUT	include/libavutil/log.h	/^    AV_CLASS_CATEGORY_DEVICE_OUTPUT,$/;"	e	enum:__anon9
AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT	include/libavutil/log.h	/^    AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT,$/;"	e	enum:__anon9
AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT	include/libavutil/log.h	/^    AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT = 40,$/;"	e	enum:__anon9
AV_CLASS_CATEGORY_ENCODER	include/libavutil/log.h	/^    AV_CLASS_CATEGORY_ENCODER,$/;"	e	enum:__anon9
AV_CLASS_CATEGORY_FILTER	include/libavutil/log.h	/^    AV_CLASS_CATEGORY_FILTER,$/;"	e	enum:__anon9
AV_CLASS_CATEGORY_INPUT	include/libavutil/log.h	/^    AV_CLASS_CATEGORY_INPUT,$/;"	e	enum:__anon9
AV_CLASS_CATEGORY_MUXER	include/libavutil/log.h	/^    AV_CLASS_CATEGORY_MUXER,$/;"	e	enum:__anon9
AV_CLASS_CATEGORY_NA	include/libavutil/log.h	/^    AV_CLASS_CATEGORY_NA = 0,$/;"	e	enum:__anon9
AV_CLASS_CATEGORY_NB	include/libavutil/log.h	/^    AV_CLASS_CATEGORY_NB, \/\/\/< not part of ABI\/API$/;"	e	enum:__anon9
AV_CLASS_CATEGORY_OUTPUT	include/libavutil/log.h	/^    AV_CLASS_CATEGORY_OUTPUT,$/;"	e	enum:__anon9
AV_CLASS_CATEGORY_SWRESAMPLER	include/libavutil/log.h	/^    AV_CLASS_CATEGORY_SWRESAMPLER,$/;"	e	enum:__anon9
AV_CLASS_CATEGORY_SWSCALER	include/libavutil/log.h	/^    AV_CLASS_CATEGORY_SWSCALER,$/;"	e	enum:__anon9
AV_CODEC_ID_012V	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_012V       = MKBETAG('0','1','2','V'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_4XM	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_4XM,$/;"	e	enum:AVCodecID
AV_CODEC_ID_8BPS	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_8BPS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_8SVX_EXP	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_8SVX_EXP,$/;"	e	enum:AVCodecID
AV_CODEC_ID_8SVX_FIB	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_8SVX_FIB,$/;"	e	enum:AVCodecID
AV_CODEC_ID_A64_MULTI	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_A64_MULTI,$/;"	e	enum:AVCodecID
AV_CODEC_ID_A64_MULTI5	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_A64_MULTI5,$/;"	e	enum:AVCodecID
AV_CODEC_ID_AAC	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_AAC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_AAC_LATM	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_AAC_LATM,$/;"	e	enum:AVCodecID
AV_CODEC_ID_AASC	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_AASC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_AC3	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_AC3,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_4XM	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_4XM,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_ADX	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_ADX,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_AFC	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_AFC  = MKBETAG('A','F','C',' '),$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_CT	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_CT,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_DTK	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_DTK  = MKBETAG('D','T','K',' '),$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_EA	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_EA,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_EA_MAXIS_XA	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_EA_MAXIS_XA,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_EA_R1	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_EA_R1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_EA_R2	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_EA_R2,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_EA_R3	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_EA_R3,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_EA_XAS	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_EA_XAS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_G722	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_G722,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_G726	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_G726,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_G726LE	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_G726LE = MKBETAG('6','2','7','G'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_IMA_AMV	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_IMA_AMV,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_IMA_APC	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_IMA_APC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_IMA_DK3	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_IMA_DK3,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_IMA_DK4	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_IMA_DK4,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_IMA_EA_EACS	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_IMA_EA_EACS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_IMA_EA_SEAD	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_IMA_EA_SEAD,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_IMA_ISS	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_IMA_ISS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_IMA_OKI	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_IMA_OKI = MKBETAG('O','K','I',' '),$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_IMA_QT	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_IMA_QT = 0x11000,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_IMA_RAD	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_IMA_RAD = MKBETAG('R','A','D',' '),$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_IMA_SMJPEG	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_IMA_SMJPEG,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_IMA_WAV	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_IMA_WAV,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_IMA_WS	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_IMA_WS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_MS	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_MS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_SBPRO_2	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_SBPRO_2,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_SBPRO_3	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_SBPRO_3,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_SBPRO_4	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_SBPRO_4,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_SWF	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_SWF,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_THP	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_THP,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_VIMA	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_VIMA = MKBETAG('V','I','M','A'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_VIMA_DEPRECATED	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_VIMA_DEPRECATED,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_XA	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_XA,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ADPCM_YAMAHA	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ADPCM_YAMAHA,$/;"	e	enum:AVCodecID
AV_CODEC_ID_AIC	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_AIC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ALAC	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ALAC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ALIAS_PIX	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ALIAS_PIX,$/;"	e	enum:AVCodecID
AV_CODEC_ID_AMR_NB	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_AMR_NB = 0x12000,$/;"	e	enum:AVCodecID
AV_CODEC_ID_AMR_WB	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_AMR_WB,$/;"	e	enum:AVCodecID
AV_CODEC_ID_AMV	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_AMV,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ANM	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ANM,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ANSI	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ANSI,$/;"	e	enum:AVCodecID
AV_CODEC_ID_APE	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_APE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_APNG	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_APNG       = MKBETAG('A','P','N','G'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_ASS	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ASS        = MKBETAG('A','S','S',' '),  \/\/\/< ASS as defined in Matroska$/;"	e	enum:AVCodecID
AV_CODEC_ID_ASV1	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ASV1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ASV2	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ASV2,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ATRAC1	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ATRAC1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ATRAC3	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ATRAC3,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ATRAC3P	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ATRAC3P,$/;"	e	enum:AVCodecID
AV_CODEC_ID_AURA	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_AURA,$/;"	e	enum:AVCodecID
AV_CODEC_ID_AURA2	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_AURA2,$/;"	e	enum:AVCodecID
AV_CODEC_ID_AVRN	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_AVRN       = MKBETAG('A','V','R','n'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_AVRP	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_AVRP       = MKBETAG('A','V','R','P'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_AVS	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_AVS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_AVUI	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_AVUI       = MKBETAG('A','V','U','I'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_AYUV	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_AYUV       = MKBETAG('A','Y','U','V'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_BETHSOFTVID	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_BETHSOFTVID,$/;"	e	enum:AVCodecID
AV_CODEC_ID_BFI	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_BFI,$/;"	e	enum:AVCodecID
AV_CODEC_ID_BINKAUDIO_DCT	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_BINKAUDIO_DCT,$/;"	e	enum:AVCodecID
AV_CODEC_ID_BINKAUDIO_RDFT	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_BINKAUDIO_RDFT,$/;"	e	enum:AVCodecID
AV_CODEC_ID_BINKVIDEO	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_BINKVIDEO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_BINTEXT	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_BINTEXT    = MKBETAG('B','T','X','T'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_BIN_DATA	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_BIN_DATA   = MKBETAG('D','A','T','A'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_BMP	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_BMP,$/;"	e	enum:AVCodecID
AV_CODEC_ID_BMV_AUDIO	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_BMV_AUDIO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_BMV_VIDEO	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_BMV_VIDEO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_BRENDER_PIX	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_BRENDER_PIX= MKBETAG('B','P','I','X'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_BRENDER_PIX_DEPRECATED	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_BRENDER_PIX_DEPRECATED,$/;"	e	enum:AVCodecID
AV_CODEC_ID_C93	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_C93,$/;"	e	enum:AVCodecID
AV_CODEC_ID_CAVS	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_CAVS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_CDGRAPHICS	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_CDGRAPHICS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_CDXL	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_CDXL,$/;"	e	enum:AVCodecID
AV_CODEC_ID_CELT	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_CELT,$/;"	e	enum:AVCodecID
AV_CODEC_ID_CINEPAK	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_CINEPAK,$/;"	e	enum:AVCodecID
AV_CODEC_ID_CLJR	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_CLJR,$/;"	e	enum:AVCodecID
AV_CODEC_ID_CLLC	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_CLLC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_CMV	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_CMV,$/;"	e	enum:AVCodecID
AV_CODEC_ID_COMFORT_NOISE	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_COMFORT_NOISE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_COOK	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_COOK,$/;"	e	enum:AVCodecID
AV_CODEC_ID_CPIA	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_CPIA       = MKBETAG('C','P','I','A'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_CSCD	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_CSCD,$/;"	e	enum:AVCodecID
AV_CODEC_ID_CYUV	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_CYUV,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DFA	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_DFA,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DIRAC	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_DIRAC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DNXHD	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_DNXHD,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DPX	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_DPX,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DSD_LSBF	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_DSD_LSBF    = MKBETAG('D','S','D','L'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_DSD_LSBF_PLANAR	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_DSD_LSBF_PLANAR = MKBETAG('D','S','D','1'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_DSD_MSBF	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_DSD_MSBF    = MKBETAG('D','S','D','M'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_DSD_MSBF_PLANAR	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_DSD_MSBF_PLANAR = MKBETAG('D','S','D','8'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_DSICINAUDIO	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_DSICINAUDIO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DSICINVIDEO	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_DSICINVIDEO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DTS	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_DTS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DVAUDIO	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_DVAUDIO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DVB_SUBTITLE	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_DVB_SUBTITLE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DVB_TELETEXT	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_DVB_TELETEXT,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DVD_NAV	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_DVD_NAV    = MKBETAG('D','N','A','V'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_DVD_SUBTITLE	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_DVD_SUBTITLE = 0x17000,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DVVIDEO	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_DVVIDEO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DXA	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_DXA,$/;"	e	enum:AVCodecID
AV_CODEC_ID_DXTORY	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_DXTORY,$/;"	e	enum:AVCodecID
AV_CODEC_ID_EAC3	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_EAC3,$/;"	e	enum:AVCodecID
AV_CODEC_ID_EIA_608	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_EIA_608    = MKBETAG('c','6','0','8'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_ESCAPE124	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ESCAPE124,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ESCAPE130	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ESCAPE130  = MKBETAG('E','1','3','0'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_ESCAPE130_DEPRECATED	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ESCAPE130_DEPRECATED,$/;"	e	enum:AVCodecID
AV_CODEC_ID_EVRC	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_EVRC        = MKBETAG('s','e','v','c'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_EXR	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_EXR        = MKBETAG('0','E','X','R'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_EXR_DEPRECATED	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_EXR_DEPRECATED,$/;"	e	enum:AVCodecID
AV_CODEC_ID_FFMETADATA	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_FFMETADATA = 0x21000,   \/\/\/< Dummy codec for streams containing only metadata information.$/;"	e	enum:AVCodecID
AV_CODEC_ID_FFV1	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_FFV1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_FFVHUFF	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_FFVHUFF,$/;"	e	enum:AVCodecID
AV_CODEC_ID_FFWAVESYNTH	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_FFWAVESYNTH = MKBETAG('F','F','W','S'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_FIC	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_FIC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_FIRST_AUDIO	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_FIRST_AUDIO = 0x10000,     \/\/\/< A dummy id pointing at the start of audio codecs$/;"	e	enum:AVCodecID
AV_CODEC_ID_FIRST_SUBTITLE	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_FIRST_SUBTITLE = 0x17000,          \/\/\/< A dummy ID pointing at the start of subtitle codecs.$/;"	e	enum:AVCodecID
AV_CODEC_ID_FIRST_UNKNOWN	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_FIRST_UNKNOWN = 0x18000,           \/\/\/< A dummy ID pointing at the start of various fake codecs.$/;"	e	enum:AVCodecID
AV_CODEC_ID_FLAC	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_FLAC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_FLASHSV	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_FLASHSV,$/;"	e	enum:AVCodecID
AV_CODEC_ID_FLASHSV2	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_FLASHSV2,$/;"	e	enum:AVCodecID
AV_CODEC_ID_FLIC	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_FLIC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_FLV1	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_FLV1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_FRAPS	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_FRAPS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_FRWU	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_FRWU,$/;"	e	enum:AVCodecID
AV_CODEC_ID_G2M	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_G2M        = MKBETAG( 0 ,'G','2','M'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_G2M_DEPRECATED	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_G2M_DEPRECATED,$/;"	e	enum:AVCodecID
AV_CODEC_ID_G723_1	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_G723_1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_G729	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_G729,$/;"	e	enum:AVCodecID
AV_CODEC_ID_GIF	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_GIF,$/;"	e	enum:AVCodecID
AV_CODEC_ID_GSM	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_GSM, \/\/\/< as in Berlin toast format$/;"	e	enum:AVCodecID
AV_CODEC_ID_GSM_MS	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_GSM_MS, \/* as found in WAV *\/$/;"	e	enum:AVCodecID
AV_CODEC_ID_H261	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_H261,$/;"	e	enum:AVCodecID
AV_CODEC_ID_H263	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_H263,$/;"	e	enum:AVCodecID
AV_CODEC_ID_H263I	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_H263I,$/;"	e	enum:AVCodecID
AV_CODEC_ID_H263P	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_H263P,$/;"	e	enum:AVCodecID
AV_CODEC_ID_H264	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_H264,$/;"	e	enum:AVCodecID
AV_CODEC_ID_H265	include/libavcodec/avcodec.h	320;"	d
AV_CODEC_ID_HDMV_PGS_SUBTITLE	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_HDMV_PGS_SUBTITLE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_HEVC	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_HEVC       = MKBETAG('H','2','6','5'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_HEVC_DEPRECATED	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_HEVC_DEPRECATED,$/;"	e	enum:AVCodecID
AV_CODEC_ID_HNM4_VIDEO	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_HNM4_VIDEO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_HUFFYUV	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_HUFFYUV,$/;"	e	enum:AVCodecID
AV_CODEC_ID_IAC	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_IAC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_IDCIN	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_IDCIN,$/;"	e	enum:AVCodecID
AV_CODEC_ID_IDF	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_IDF        = MKBETAG( 0 ,'I','D','F'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_IFF_BYTERUN1	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_IFF_BYTERUN1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_IFF_ILBM	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_IFF_ILBM,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ILBC	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ILBC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_IMC	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_IMC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_INDEO2	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_INDEO2,$/;"	e	enum:AVCodecID
AV_CODEC_ID_INDEO3	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_INDEO3,$/;"	e	enum:AVCodecID
AV_CODEC_ID_INDEO4	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_INDEO4,$/;"	e	enum:AVCodecID
AV_CODEC_ID_INDEO5	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_INDEO5,$/;"	e	enum:AVCodecID
AV_CODEC_ID_INTERPLAY_DPCM	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_INTERPLAY_DPCM,$/;"	e	enum:AVCodecID
AV_CODEC_ID_INTERPLAY_VIDEO	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_INTERPLAY_VIDEO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_JACOSUB	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_JACOSUB    = MKBETAG('J','S','U','B'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_JPEG2000	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_JPEG2000,$/;"	e	enum:AVCodecID
AV_CODEC_ID_JPEGLS	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_JPEGLS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_JV	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_JV,$/;"	e	enum:AVCodecID
AV_CODEC_ID_KGV1	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_KGV1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_KMVC	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_KMVC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_LAGARITH	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_LAGARITH,$/;"	e	enum:AVCodecID
AV_CODEC_ID_LJPEG	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_LJPEG,$/;"	e	enum:AVCodecID
AV_CODEC_ID_LOCO	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_LOCO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MACE3	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MACE3,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MACE6	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MACE6,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MAD	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MAD,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MDEC	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MDEC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_METASOUND	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_METASOUND,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MICRODVD	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MICRODVD   = MKBETAG('m','D','V','D'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_MIMIC	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MIMIC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MJPEG	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MJPEG,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MJPEGB	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MJPEGB,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MLP	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MLP,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MMVIDEO	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MMVIDEO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MOTIONPIXELS	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MOTIONPIXELS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MOV_TEXT	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MOV_TEXT,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MP1	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MP1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MP2	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MP2 = 0x15000,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MP3	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MP3, \/\/\/< preferred ID for decoding MPEG audio layer 1, 2 or 3$/;"	e	enum:AVCodecID
AV_CODEC_ID_MP3ADU	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MP3ADU,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MP3ON4	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MP3ON4,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MP4ALS	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MP4ALS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MPEG1VIDEO	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MPEG1VIDEO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MPEG2TS	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MPEG2TS = 0x20000, \/**< _FAKE_ codec to indicate a raw MPEG-2 TS$/;"	e	enum:AVCodecID
AV_CODEC_ID_MPEG2VIDEO	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MPEG2VIDEO, \/\/\/< preferred ID for MPEG-1\/2 video decoding$/;"	e	enum:AVCodecID
AV_CODEC_ID_MPEG2VIDEO_XVMC	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MPEG2VIDEO_XVMC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MPEG4	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MPEG4,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MPEG4SYSTEMS	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MPEG4SYSTEMS = 0x20001, \/**< _FAKE_ codec to indicate a MPEG-4 Systems$/;"	e	enum:AVCodecID
AV_CODEC_ID_MPL2	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MPL2       = MKBETAG('M','P','L','2'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_MSA1	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MSA1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MSMPEG4V1	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MSMPEG4V1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MSMPEG4V2	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MSMPEG4V2,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MSMPEG4V3	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MSMPEG4V3,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MSRLE	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MSRLE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MSS1	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MSS1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MSS2	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MSS2,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MSVIDEO1	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MSVIDEO1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MSZH	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MSZH,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MTS2	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MTS2,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MUSEPACK7	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MUSEPACK7,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MUSEPACK8	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MUSEPACK8,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MVC1	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MVC1       = MKBETAG('M','V','C','1'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_MVC1_DEPRECATED	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MVC1_DEPRECATED,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MVC2	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MVC2       = MKBETAG('M','V','C','2'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_MVC2_DEPRECATED	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MVC2_DEPRECATED,$/;"	e	enum:AVCodecID
AV_CODEC_ID_MXPEG	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_MXPEG,$/;"	e	enum:AVCodecID
AV_CODEC_ID_NELLYMOSER	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_NELLYMOSER,$/;"	e	enum:AVCodecID
AV_CODEC_ID_NONE	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_NONE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_NUV	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_NUV,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ON2AVC	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ON2AVC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_OPUS	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_OPUS        = MKBETAG('O','P','U','S'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_OPUS_DEPRECATED	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_OPUS_DEPRECATED,$/;"	e	enum:AVCodecID
AV_CODEC_ID_OTF	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_OTF        = MKBETAG( 0 ,'O','T','F'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_PAF_AUDIO	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PAF_AUDIO   = MKBETAG('P','A','F','A'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_PAF_AUDIO_DEPRECATED	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PAF_AUDIO_DEPRECATED,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PAF_VIDEO	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PAF_VIDEO  = MKBETAG('P','A','F','V'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_PAF_VIDEO_DEPRECATED	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PAF_VIDEO_DEPRECATED,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PAM	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PAM,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PBM	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PBM,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_ALAW	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_ALAW,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_BLURAY	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_BLURAY,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_DVD	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_DVD,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_F32BE	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_F32BE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_F32LE	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_F32LE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_F64BE	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_F64BE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_F64LE	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_F64LE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_LXF	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_LXF,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_MULAW	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_MULAW,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_S16BE	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_S16BE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_S16BE_PLANAR	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_S16BE_PLANAR = MKBETAG('P','S','P',16),$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_S16LE	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_S16LE = 0x10000,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_S16LE_PLANAR	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_S16LE_PLANAR,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_S24BE	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_S24BE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_S24DAUD	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_S24DAUD,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_S24LE	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_S24LE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_S24LE_PLANAR	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_S24LE_PLANAR = MKBETAG(24,'P','S','P'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_S24LE_PLANAR_DEPRECATED	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_S24LE_PLANAR_DEPRECATED,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_S32BE	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_S32BE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_S32LE	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_S32LE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_S32LE_PLANAR	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_S32LE_PLANAR = MKBETAG(32,'P','S','P'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_S32LE_PLANAR_DEPRECATED	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_S32LE_PLANAR_DEPRECATED,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_S8	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_S8,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_S8_PLANAR	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_S8_PLANAR,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_U16BE	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_U16BE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_U16LE	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_U16LE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_U24BE	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_U24BE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_U24LE	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_U24LE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_U32BE	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_U32BE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_U32LE	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_U32LE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_U8	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_U8,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCM_ZORK	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCM_ZORK,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PCX	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PCX,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PGM	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PGM,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PGMYUV	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PGMYUV,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PICTOR	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PICTOR,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PJS	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PJS        = MKBETAG('P','h','J','S'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_PNG	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PNG,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PPM	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PPM,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PROBE	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PROBE = 0x19000, \/\/\/< codec_id is not known (like AV_CODEC_ID_NONE) but lavf should attempt to identify it$/;"	e	enum:AVCodecID
AV_CODEC_ID_PRORES	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PRORES,$/;"	e	enum:AVCodecID
AV_CODEC_ID_PTX	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_PTX,$/;"	e	enum:AVCodecID
AV_CODEC_ID_QCELP	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_QCELP,$/;"	e	enum:AVCodecID
AV_CODEC_ID_QDM2	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_QDM2,$/;"	e	enum:AVCodecID
AV_CODEC_ID_QDMC	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_QDMC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_QDRAW	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_QDRAW,$/;"	e	enum:AVCodecID
AV_CODEC_ID_QPEG	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_QPEG,$/;"	e	enum:AVCodecID
AV_CODEC_ID_QTRLE	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_QTRLE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_R10K	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_R10K,$/;"	e	enum:AVCodecID
AV_CODEC_ID_R210	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_R210,$/;"	e	enum:AVCodecID
AV_CODEC_ID_RALF	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_RALF,$/;"	e	enum:AVCodecID
AV_CODEC_ID_RAWVIDEO	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_RAWVIDEO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_RA_144	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_RA_144 = 0x13000,$/;"	e	enum:AVCodecID
AV_CODEC_ID_RA_288	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_RA_288,$/;"	e	enum:AVCodecID
AV_CODEC_ID_REALTEXT	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_REALTEXT   = MKBETAG('R','T','X','T'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_RL2	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_RL2,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ROQ	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ROQ,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ROQ_DPCM	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ROQ_DPCM = 0x14000,$/;"	e	enum:AVCodecID
AV_CODEC_ID_RPZA	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_RPZA,$/;"	e	enum:AVCodecID
AV_CODEC_ID_RV10	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_RV10,$/;"	e	enum:AVCodecID
AV_CODEC_ID_RV20	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_RV20,$/;"	e	enum:AVCodecID
AV_CODEC_ID_RV30	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_RV30,$/;"	e	enum:AVCodecID
AV_CODEC_ID_RV40	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_RV40,$/;"	e	enum:AVCodecID
AV_CODEC_ID_S302M	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_S302M,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SAMI	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SAMI       = MKBETAG('S','A','M','I'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_SANM	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SANM       = MKBETAG('S','A','N','M'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_SANM_DEPRECATED	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SANM_DEPRECATED,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SGI	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SGI,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SGIRLE	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SGIRLE     = MKBETAG('S','G','I','R'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_SGIRLE_DEPRECATED	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SGIRLE_DEPRECATED,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SHORTEN	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SHORTEN,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SIPR	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SIPR,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SMACKAUDIO	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SMACKAUDIO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SMACKVIDEO	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SMACKVIDEO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SMC	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SMC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SMPTE_KLV	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SMPTE_KLV  = MKBETAG('K','L','V','A'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_SMV	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SMV         = MKBETAG('s','s','m','v'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_SMVJPEG	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SMVJPEG    = MKBETAG('S','M','V','J'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_SNOW	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SNOW       = MKBETAG('S','N','O','W'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_SOL_DPCM	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SOL_DPCM,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SONIC	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SONIC       = MKBETAG('S','O','N','C'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_SONIC_LS	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SONIC_LS    = MKBETAG('S','O','N','L'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_SP5X	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SP5X,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SPEEX	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SPEEX,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SRT	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SRT,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SSA	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SSA,$/;"	e	enum:AVCodecID
AV_CODEC_ID_STL	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_STL        = MKBETAG('S','p','T','L'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_SUBRIP	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SUBRIP     = MKBETAG('S','R','i','p'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_SUBVIEWER	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SUBVIEWER  = MKBETAG('S','u','b','V'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_SUBVIEWER1	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SUBVIEWER1 = MKBETAG('S','b','V','1'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_SUNRAST	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SUNRAST,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SVQ1	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SVQ1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_SVQ3	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_SVQ3,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TAK	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_TAK         = MKBETAG('t','B','a','K'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_TAK_DEPRECATED	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_TAK_DEPRECATED,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TARGA	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_TARGA,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TARGA_Y216	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_TARGA_Y216 = MKBETAG('T','2','1','6'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_TEXT	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_TEXT,  \/\/\/< raw UTF-8 text$/;"	e	enum:AVCodecID
AV_CODEC_ID_TGQ	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_TGQ,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TGV	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_TGV,$/;"	e	enum:AVCodecID
AV_CODEC_ID_THEORA	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_THEORA,$/;"	e	enum:AVCodecID
AV_CODEC_ID_THP	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_THP,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TIERTEXSEQVIDEO	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_TIERTEXSEQVIDEO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TIFF	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_TIFF,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TIMED_ID3	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_TIMED_ID3  = MKBETAG('T','I','D','3'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_TMV	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_TMV,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TQI	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_TQI,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TRUEHD	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_TRUEHD,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TRUEMOTION1	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_TRUEMOTION1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TRUEMOTION2	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_TRUEMOTION2,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TRUESPEECH	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_TRUESPEECH,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TSCC	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_TSCC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TSCC2	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_TSCC2,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TTA	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_TTA,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TTF	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_TTF = 0x18000,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TWINVQ	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_TWINVQ,$/;"	e	enum:AVCodecID
AV_CODEC_ID_TXD	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_TXD,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ULTI	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ULTI,$/;"	e	enum:AVCodecID
AV_CODEC_ID_UTVIDEO	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_UTVIDEO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_V210	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_V210,$/;"	e	enum:AVCodecID
AV_CODEC_ID_V210X	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_V210X,$/;"	e	enum:AVCodecID
AV_CODEC_ID_V308	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_V308       = MKBETAG('V','3','0','8'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_V408	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_V408       = MKBETAG('V','4','0','8'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_V410	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_V410,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VB	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_VB,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VBLE	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_VBLE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VC1	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_VC1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VC1IMAGE	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_VC1IMAGE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VCR1	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_VCR1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VIMA	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_VIMA       = MKBETAG('V','I','M','A'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_VIXL	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_VIXL,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VMDAUDIO	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_VMDAUDIO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VMDVIDEO	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_VMDVIDEO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VMNC	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_VMNC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VORBIS	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_VORBIS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VOXWARE	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_VOXWARE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VP3	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_VP3,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VP5	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_VP5,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VP6	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_VP6,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VP6A	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_VP6A,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VP6F	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_VP6F,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VP7	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_VP7        = MKBETAG('V','P','7','0'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_VP7_DEPRECATED	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_VP7_DEPRECATED,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VP8	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_VP8,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VP9	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_VP9,$/;"	e	enum:AVCodecID
AV_CODEC_ID_VPLAYER	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_VPLAYER    = MKBETAG('V','P','l','r'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_WAVPACK	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_WAVPACK,$/;"	e	enum:AVCodecID
AV_CODEC_ID_WEBP	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_WEBP       = MKBETAG('W','E','B','P'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_WEBP_DEPRECATED	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_WEBP_DEPRECATED,$/;"	e	enum:AVCodecID
AV_CODEC_ID_WEBVTT	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_WEBVTT     = MKBETAG('W','V','T','T'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_WESTWOOD_SND1	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_WESTWOOD_SND1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_WMALOSSLESS	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_WMALOSSLESS,$/;"	e	enum:AVCodecID
AV_CODEC_ID_WMAPRO	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_WMAPRO,$/;"	e	enum:AVCodecID
AV_CODEC_ID_WMAV1	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_WMAV1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_WMAV2	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_WMAV2,$/;"	e	enum:AVCodecID
AV_CODEC_ID_WMAVOICE	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_WMAVOICE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_WMV1	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_WMV1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_WMV2	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_WMV2,$/;"	e	enum:AVCodecID
AV_CODEC_ID_WMV3	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_WMV3,$/;"	e	enum:AVCodecID
AV_CODEC_ID_WMV3IMAGE	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_WMV3IMAGE,$/;"	e	enum:AVCodecID
AV_CODEC_ID_WNV1	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_WNV1,$/;"	e	enum:AVCodecID
AV_CODEC_ID_WS_VQA	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_WS_VQA,$/;"	e	enum:AVCodecID
AV_CODEC_ID_XAN_DPCM	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_XAN_DPCM,$/;"	e	enum:AVCodecID
AV_CODEC_ID_XAN_WC3	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_XAN_WC3,$/;"	e	enum:AVCodecID
AV_CODEC_ID_XAN_WC4	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_XAN_WC4,$/;"	e	enum:AVCodecID
AV_CODEC_ID_XBIN	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_XBIN       = MKBETAG('X','B','I','N'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_XBM	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_XBM,$/;"	e	enum:AVCodecID
AV_CODEC_ID_XFACE	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_XFACE      = MKBETAG('X','F','A','C'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_XSUB	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_XSUB,$/;"	e	enum:AVCodecID
AV_CODEC_ID_XWD	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_XWD,$/;"	e	enum:AVCodecID
AV_CODEC_ID_Y41P	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_Y41P       = MKBETAG('Y','4','1','P'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_YOP	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_YOP,$/;"	e	enum:AVCodecID
AV_CODEC_ID_YUV4	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_YUV4       = MKBETAG('Y','U','V','4'),$/;"	e	enum:AVCodecID
AV_CODEC_ID_ZEROCODEC	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ZEROCODEC,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ZLIB	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ZLIB,$/;"	e	enum:AVCodecID
AV_CODEC_ID_ZMBV	include/libavcodec/avcodec.h	/^    AV_CODEC_ID_ZMBV,$/;"	e	enum:AVCodecID
AV_CODEC_PROP_BITMAP_SUB	include/libavcodec/avcodec.h	609;"	d
AV_CODEC_PROP_INTRA_ONLY	include/libavcodec/avcodec.h	584;"	d
AV_CODEC_PROP_LOSSLESS	include/libavcodec/avcodec.h	594;"	d
AV_CODEC_PROP_LOSSY	include/libavcodec/avcodec.h	590;"	d
AV_CODEC_PROP_REORDER	include/libavcodec/avcodec.h	604;"	d
AV_CODEC_PROP_TEXT_SUB	include/libavcodec/avcodec.h	614;"	d
AV_COPY	include/libavutil/intreadwrite.h	578;"	d
AV_COPY128	include/libavutil/intreadwrite.h	594;"	d
AV_COPY128U	include/libavutil/intreadwrite.h	565;"	d
AV_COPY16	include/libavutil/intreadwrite.h	582;"	d
AV_COPY16U	include/libavutil/intreadwrite.h	553;"	d
AV_COPY32	include/libavutil/intreadwrite.h	586;"	d
AV_COPY32U	include/libavutil/intreadwrite.h	557;"	d
AV_COPY64	include/libavutil/intreadwrite.h	590;"	d
AV_COPY64U	include/libavutil/intreadwrite.h	561;"	d
AV_COPYU	include/libavutil/intreadwrite.h	550;"	d
AV_CPU_FLAG_3DNOW	include/libavutil/cpu.h	32;"	d
AV_CPU_FLAG_3DNOWEXT	include/libavutil/cpu.h	37;"	d
AV_CPU_FLAG_ALTIVEC	include/libavutil/cpu.h	58;"	d
AV_CPU_FLAG_ARMV5TE	include/libavutil/cpu.h	60;"	d
AV_CPU_FLAG_ARMV6	include/libavutil/cpu.h	61;"	d
AV_CPU_FLAG_ARMV6T2	include/libavutil/cpu.h	62;"	d
AV_CPU_FLAG_ARMV8	include/libavutil/cpu.h	66;"	d
AV_CPU_FLAG_ATOM	include/libavutil/cpu.h	42;"	d
AV_CPU_FLAG_AVX	include/libavutil/cpu.h	45;"	d
AV_CPU_FLAG_AVX2	include/libavutil/cpu.h	53;"	d
AV_CPU_FLAG_BMI1	include/libavutil/cpu.h	55;"	d
AV_CPU_FLAG_BMI2	include/libavutil/cpu.h	56;"	d
AV_CPU_FLAG_CMOV	include/libavutil/cpu.h	49;"	d
AV_CPU_FLAG_FMA3	include/libavutil/cpu.h	54;"	d
AV_CPU_FLAG_FMA4	include/libavutil/cpu.h	47;"	d
AV_CPU_FLAG_FORCE	include/libavutil/cpu.h	26;"	d
AV_CPU_FLAG_MMX	include/libavutil/cpu.h	29;"	d
AV_CPU_FLAG_MMX2	include/libavutil/cpu.h	31;"	d
AV_CPU_FLAG_MMXEXT	include/libavutil/cpu.h	30;"	d
AV_CPU_FLAG_NEON	include/libavutil/cpu.h	65;"	d
AV_CPU_FLAG_SETEND	include/libavutil/cpu.h	67;"	d
AV_CPU_FLAG_SSE	include/libavutil/cpu.h	33;"	d
AV_CPU_FLAG_SSE2	include/libavutil/cpu.h	34;"	d
AV_CPU_FLAG_SSE2SLOW	include/libavutil/cpu.h	35;"	d
AV_CPU_FLAG_SSE3	include/libavutil/cpu.h	38;"	d
AV_CPU_FLAG_SSE3SLOW	include/libavutil/cpu.h	39;"	d
AV_CPU_FLAG_SSE4	include/libavutil/cpu.h	43;"	d
AV_CPU_FLAG_SSE42	include/libavutil/cpu.h	44;"	d
AV_CPU_FLAG_SSSE3	include/libavutil/cpu.h	41;"	d
AV_CPU_FLAG_VFP	include/libavutil/cpu.h	63;"	d
AV_CPU_FLAG_VFPV3	include/libavutil/cpu.h	64;"	d
AV_CPU_FLAG_XOP	include/libavutil/cpu.h	46;"	d
AV_CRC_16_ANSI	include/libavutil/crc.h	/^    AV_CRC_16_ANSI,$/;"	e	enum:__anon13
AV_CRC_16_ANSI_LE	include/libavutil/crc.h	/^    AV_CRC_16_ANSI_LE,  \/*< reversed bitorder version of AV_CRC_16_ANSI *\/$/;"	e	enum:__anon13
AV_CRC_16_CCITT	include/libavutil/crc.h	/^    AV_CRC_16_CCITT,$/;"	e	enum:__anon13
AV_CRC_24_IEEE	include/libavutil/crc.h	/^    AV_CRC_24_IEEE = 12,$/;"	e	enum:__anon13
AV_CRC_32_IEEE	include/libavutil/crc.h	/^    AV_CRC_32_IEEE,$/;"	e	enum:__anon13
AV_CRC_32_IEEE_LE	include/libavutil/crc.h	/^    AV_CRC_32_IEEE_LE,  \/*< reversed bitorder version of AV_CRC_32_IEEE *\/$/;"	e	enum:__anon13
AV_CRC_8_ATM	include/libavutil/crc.h	/^    AV_CRC_8_ATM,$/;"	e	enum:__anon13
AV_CRC_MAX	include/libavutil/crc.h	/^    AV_CRC_MAX,         \/*< Not part of public API! Do not use outside libavutil. *\/$/;"	e	enum:__anon13
AV_DEV_TO_APP_BUFFER_OVERFLOW	include/libavdevice/avdevice.h	/^    AV_DEV_TO_APP_BUFFER_OVERFLOW = MKBETAG('B','O','F','L'),$/;"	e	enum:AVDevToAppMessageType
AV_DEV_TO_APP_BUFFER_READABLE	include/libavdevice/avdevice.h	/^    AV_DEV_TO_APP_BUFFER_READABLE = MKBETAG('B','R','D',' '),$/;"	e	enum:AVDevToAppMessageType
AV_DEV_TO_APP_BUFFER_UNDERFLOW	include/libavdevice/avdevice.h	/^    AV_DEV_TO_APP_BUFFER_UNDERFLOW = MKBETAG('B','U','F','L'),$/;"	e	enum:AVDevToAppMessageType
AV_DEV_TO_APP_BUFFER_WRITABLE	include/libavdevice/avdevice.h	/^    AV_DEV_TO_APP_BUFFER_WRITABLE = MKBETAG('B','W','R',' '),$/;"	e	enum:AVDevToAppMessageType
AV_DEV_TO_APP_CREATE_WINDOW_BUFFER	include/libavdevice/avdevice.h	/^    AV_DEV_TO_APP_CREATE_WINDOW_BUFFER = MKBETAG('B','C','R','E'),$/;"	e	enum:AVDevToAppMessageType
AV_DEV_TO_APP_DESTROY_WINDOW_BUFFER	include/libavdevice/avdevice.h	/^    AV_DEV_TO_APP_DESTROY_WINDOW_BUFFER = MKBETAG('B','D','E','S'),$/;"	e	enum:AVDevToAppMessageType
AV_DEV_TO_APP_DISPLAY_WINDOW_BUFFER	include/libavdevice/avdevice.h	/^    AV_DEV_TO_APP_DISPLAY_WINDOW_BUFFER = MKBETAG('B','D','I','S'),$/;"	e	enum:AVDevToAppMessageType
AV_DEV_TO_APP_MUTE_STATE_CHANGED	include/libavdevice/avdevice.h	/^    AV_DEV_TO_APP_MUTE_STATE_CHANGED = MKBETAG('C','M','U','T'),$/;"	e	enum:AVDevToAppMessageType
AV_DEV_TO_APP_NONE	include/libavdevice/avdevice.h	/^    AV_DEV_TO_APP_NONE = MKBETAG('N','O','N','E'),$/;"	e	enum:AVDevToAppMessageType
AV_DEV_TO_APP_PREPARE_WINDOW_BUFFER	include/libavdevice/avdevice.h	/^    AV_DEV_TO_APP_PREPARE_WINDOW_BUFFER = MKBETAG('B','P','R','E'),$/;"	e	enum:AVDevToAppMessageType
AV_DEV_TO_APP_VOLUME_LEVEL_CHANGED	include/libavdevice/avdevice.h	/^    AV_DEV_TO_APP_VOLUME_LEVEL_CHANGED = MKBETAG('C','V','O','L'),$/;"	e	enum:AVDevToAppMessageType
AV_DICT_APPEND	include/libavutil/dict.h	79;"	d
AV_DICT_DONT_OVERWRITE	include/libavutil/dict.h	78;"	d
AV_DICT_DONT_STRDUP_KEY	include/libavutil/dict.h	74;"	d
AV_DICT_DONT_STRDUP_VAL	include/libavutil/dict.h	76;"	d
AV_DICT_IGNORE_SUFFIX	include/libavutil/dict.h	72;"	d
AV_DICT_MATCH_CASE	include/libavutil/dict.h	71;"	d
AV_DISPOSITION_ATTACHED_PIC	include/libavformat/avformat.h	759;"	d
AV_DISPOSITION_CAPTIONS	include/libavformat/avformat.h	764;"	d
AV_DISPOSITION_CLEAN_EFFECTS	include/libavformat/avformat.h	752;"	d
AV_DISPOSITION_COMMENT	include/libavformat/avformat.h	740;"	d
AV_DISPOSITION_DEFAULT	include/libavformat/avformat.h	737;"	d
AV_DISPOSITION_DESCRIPTIONS	include/libavformat/avformat.h	765;"	d
AV_DISPOSITION_DUB	include/libavformat/avformat.h	738;"	d
AV_DISPOSITION_FORCED	include/libavformat/avformat.h	749;"	d
AV_DISPOSITION_HEARING_IMPAIRED	include/libavformat/avformat.h	750;"	d
AV_DISPOSITION_KARAOKE	include/libavformat/avformat.h	742;"	d
AV_DISPOSITION_LYRICS	include/libavformat/avformat.h	741;"	d
AV_DISPOSITION_METADATA	include/libavformat/avformat.h	766;"	d
AV_DISPOSITION_ORIGINAL	include/libavformat/avformat.h	739;"	d
AV_DISPOSITION_VISUAL_IMPAIRED	include/libavformat/avformat.h	751;"	d
AV_DOWNMIX_TYPE_DPLII	include/libavutil/downmix_info.h	/^    AV_DOWNMIX_TYPE_DPLII,   \/**< Lt\/Rt 2-channel downmix, Dolby Pro Logic II compatible. *\/$/;"	e	enum:AVDownmixType
AV_DOWNMIX_TYPE_LORO	include/libavutil/downmix_info.h	/^    AV_DOWNMIX_TYPE_LORO,    \/**< Lo\/Ro 2-channel downmix (Stereo). *\/$/;"	e	enum:AVDownmixType
AV_DOWNMIX_TYPE_LTRT	include/libavutil/downmix_info.h	/^    AV_DOWNMIX_TYPE_LTRT,    \/**< Lt\/Rt 2-channel downmix, Dolby Surround compatible. *\/$/;"	e	enum:AVDownmixType
AV_DOWNMIX_TYPE_NB	include/libavutil/downmix_info.h	/^    AV_DOWNMIX_TYPE_NB       \/**< Number of downmix types. Not part of ABI. *\/$/;"	e	enum:AVDownmixType
AV_DOWNMIX_TYPE_UNKNOWN	include/libavutil/downmix_info.h	/^    AV_DOWNMIX_TYPE_UNKNOWN, \/**< Not indicated. *\/$/;"	e	enum:AVDownmixType
AV_EF_AGGRESSIVE	include/libavcodec/avcodec.h	2616;"	d
AV_EF_BITSTREAM	include/libavcodec/avcodec.h	2609;"	d
AV_EF_BUFFER	include/libavcodec/avcodec.h	2610;"	d
AV_EF_CAREFUL	include/libavcodec/avcodec.h	2614;"	d
AV_EF_COMPLIANT	include/libavcodec/avcodec.h	2615;"	d
AV_EF_CRCCHECK	include/libavcodec/avcodec.h	2608;"	d
AV_EF_EXPLODE	include/libavcodec/avcodec.h	2611;"	d
AV_EF_IGNORE_ERR	include/libavcodec/avcodec.h	2613;"	d
AV_ERROR_MAX_STRING_SIZE	include/libavutil/error.h	83;"	d
AV_ESCAPE_FLAG_STRICT	include/libavutil/avstring.h	300;"	d
AV_ESCAPE_FLAG_WHITESPACE	include/libavutil/avstring.h	293;"	d
AV_ESCAPE_MODE_AUTO	include/libavutil/avstring.h	/^    AV_ESCAPE_MODE_AUTO,      \/\/\/< Use auto-selected escaping mode.$/;"	e	enum:AVEscapeMode
AV_ESCAPE_MODE_BACKSLASH	include/libavutil/avstring.h	/^    AV_ESCAPE_MODE_BACKSLASH, \/\/\/< Use backslash escaping.$/;"	e	enum:AVEscapeMode
AV_ESCAPE_MODE_QUOTE	include/libavutil/avstring.h	/^    AV_ESCAPE_MODE_QUOTE,     \/\/\/< Use single-quote escaping.$/;"	e	enum:AVEscapeMode
AV_FIELD_BB	include/libavcodec/avcodec.h	/^    AV_FIELD_BB,          \/\/< Bottom coded first, bottom displayed first$/;"	e	enum:AVFieldOrder
AV_FIELD_BT	include/libavcodec/avcodec.h	/^    AV_FIELD_BT,          \/\/< Bottom coded first, top displayed first$/;"	e	enum:AVFieldOrder
AV_FIELD_PROGRESSIVE	include/libavcodec/avcodec.h	/^    AV_FIELD_PROGRESSIVE,$/;"	e	enum:AVFieldOrder
AV_FIELD_TB	include/libavcodec/avcodec.h	/^    AV_FIELD_TB,          \/\/< Top coded first, bottom displayed first$/;"	e	enum:AVFieldOrder
AV_FIELD_TT	include/libavcodec/avcodec.h	/^    AV_FIELD_TT,          \/\/< Top coded_first, top displayed first$/;"	e	enum:AVFieldOrder
AV_FIELD_UNKNOWN	include/libavcodec/avcodec.h	/^    AV_FIELD_UNKNOWN,$/;"	e	enum:AVFieldOrder
AV_FRAME_DATA_A53_CC	include/libavutil/frame.h	/^    AV_FRAME_DATA_A53_CC,$/;"	e	enum:AVFrameSideDataType
AV_FRAME_DATA_AFD	include/libavutil/frame.h	/^    AV_FRAME_DATA_AFD,$/;"	e	enum:AVFrameSideDataType
AV_FRAME_DATA_DISPLAYMATRIX	include/libavutil/frame.h	/^    AV_FRAME_DATA_DISPLAYMATRIX,$/;"	e	enum:AVFrameSideDataType
AV_FRAME_DATA_DOWNMIX_INFO	include/libavutil/frame.h	/^    AV_FRAME_DATA_DOWNMIX_INFO,$/;"	e	enum:AVFrameSideDataType
AV_FRAME_DATA_MATRIXENCODING	include/libavutil/frame.h	/^    AV_FRAME_DATA_MATRIXENCODING,$/;"	e	enum:AVFrameSideDataType
AV_FRAME_DATA_MOTION_VECTORS	include/libavutil/frame.h	/^    AV_FRAME_DATA_MOTION_VECTORS,$/;"	e	enum:AVFrameSideDataType
AV_FRAME_DATA_PANSCAN	include/libavutil/frame.h	/^    AV_FRAME_DATA_PANSCAN,$/;"	e	enum:AVFrameSideDataType
AV_FRAME_DATA_REPLAYGAIN	include/libavutil/frame.h	/^    AV_FRAME_DATA_REPLAYGAIN,$/;"	e	enum:AVFrameSideDataType
AV_FRAME_DATA_SKIP_SAMPLES	include/libavutil/frame.h	/^    AV_FRAME_DATA_SKIP_SAMPLES,$/;"	e	enum:AVFrameSideDataType
AV_FRAME_DATA_STEREO3D	include/libavutil/frame.h	/^    AV_FRAME_DATA_STEREO3D,$/;"	e	enum:AVFrameSideDataType
AV_FRAME_FLAG_CORRUPT	include/libavutil/frame.h	458;"	d
AV_GCC_VERSION_AT_LEAST	include/libavutil/attributes.h	30;"	d
AV_GCC_VERSION_AT_LEAST	include/libavutil/attributes.h	32;"	d
AV_GET_BUFFER_FLAG_REF	include/libavcodec/avcodec.h	963;"	d
AV_GLUE	include/libavutil/macros.h	39;"	d
AV_HASH_MAX_SIZE	include/libavutil/hash.h	61;"	d
AV_HAVE_BIGENDIAN	include/libavutil/avconfig.h	4;"	d
AV_HAVE_FAST_UNALIGNED	include/libavutil/avconfig.h	5;"	d
AV_HAVE_INCOMPATIBLE_LIBAV_ABI	include/libavutil/avconfig.h	6;"	d
AV_HMAC_MD5	include/libavutil/hmac.h	/^    AV_HMAC_MD5,$/;"	e	enum:AVHMACType
AV_HMAC_SHA1	include/libavutil/hmac.h	/^    AV_HMAC_SHA1,$/;"	e	enum:AVHMACType
AV_HMAC_SHA224	include/libavutil/hmac.h	/^    AV_HMAC_SHA224 = 10,$/;"	e	enum:AVHMACType
AV_HMAC_SHA256	include/libavutil/hmac.h	/^    AV_HMAC_SHA256,$/;"	e	enum:AVHMACType
AV_HMAC_SHA384	include/libavutil/hmac.h	/^    AV_HMAC_SHA384,$/;"	e	enum:AVHMACType
AV_HMAC_SHA512	include/libavutil/hmac.h	/^    AV_HMAC_SHA512,$/;"	e	enum:AVHMACType
AV_HWACCEL_FLAG_IGNORE_LEVEL	include/libavcodec/avcodec.h	3397;"	d
AV_IS_INPUT_DEVICE	include/libavutil/log.h	49;"	d
AV_IS_OUTPUT_DEVICE	include/libavutil/log.h	54;"	d
AV_JOIN	include/libavutil/macros.h	40;"	d
AV_LE2NE16C	include/libavutil/bswap.h	105;"	d
AV_LE2NE32C	include/libavutil/bswap.h	106;"	d
AV_LE2NE64C	include/libavutil/bswap.h	107;"	d
AV_LE2NEC	include/libavutil/bswap.h	90;"	d
AV_LE2NEC	include/libavutil/bswap.h	99;"	d
AV_LOCK_CREATE	include/libavcodec/avcodec.h	/^  AV_LOCK_CREATE,  \/\/\/< Create a mutex$/;"	e	enum:AVLockOp
AV_LOCK_DESTROY	include/libavcodec/avcodec.h	/^  AV_LOCK_DESTROY, \/\/\/< Free mutex resources$/;"	e	enum:AVLockOp
AV_LOCK_OBTAIN	include/libavcodec/avcodec.h	/^  AV_LOCK_OBTAIN,  \/\/\/< Lock the mutex$/;"	e	enum:AVLockOp
AV_LOCK_RELEASE	include/libavcodec/avcodec.h	/^  AV_LOCK_RELEASE, \/\/\/< Unlock the mutex$/;"	e	enum:AVLockOp
AV_LOG_C	include/libavutil/log.h	212;"	d
AV_LOG_DEBUG	include/libavutil/log.h	196;"	d
AV_LOG_ERROR	include/libavutil/log.h	175;"	d
AV_LOG_FATAL	include/libavutil/log.h	169;"	d
AV_LOG_INFO	include/libavutil/log.h	186;"	d
AV_LOG_MAX_OFFSET	include/libavutil/log.h	198;"	d
AV_LOG_PANIC	include/libavutil/log.h	162;"	d
AV_LOG_PRINT_LEVEL	include/libavutil/log.h	341;"	d
AV_LOG_QUIET	include/libavutil/log.h	157;"	d
AV_LOG_SKIP_REPEATED	include/libavutil/log.h	333;"	d
AV_LOG_VERBOSE	include/libavutil/log.h	191;"	d
AV_LOG_WARNING	include/libavutil/log.h	181;"	d
AV_LZO_ERROR	include/libavutil/lzo.h	43;"	d
AV_LZO_INPUT_DEPLETED	include/libavutil/lzo.h	37;"	d
AV_LZO_INPUT_PADDING	include/libavutil/lzo.h	46;"	d
AV_LZO_INVALID_BACKPTR	include/libavutil/lzo.h	41;"	d
AV_LZO_OUTPUT_FULL	include/libavutil/lzo.h	39;"	d
AV_LZO_OUTPUT_PADDING	include/libavutil/lzo.h	47;"	d
AV_MATRIX_ENCODING_DOLBY	include/libavutil/channel_layout.h	/^    AV_MATRIX_ENCODING_DOLBY,$/;"	e	enum:AVMatrixEncoding
AV_MATRIX_ENCODING_DOLBYEX	include/libavutil/channel_layout.h	/^    AV_MATRIX_ENCODING_DOLBYEX,$/;"	e	enum:AVMatrixEncoding
AV_MATRIX_ENCODING_DOLBYHEADPHONE	include/libavutil/channel_layout.h	/^    AV_MATRIX_ENCODING_DOLBYHEADPHONE,$/;"	e	enum:AVMatrixEncoding
AV_MATRIX_ENCODING_DPLII	include/libavutil/channel_layout.h	/^    AV_MATRIX_ENCODING_DPLII,$/;"	e	enum:AVMatrixEncoding
AV_MATRIX_ENCODING_DPLIIX	include/libavutil/channel_layout.h	/^    AV_MATRIX_ENCODING_DPLIIX,$/;"	e	enum:AVMatrixEncoding
AV_MATRIX_ENCODING_DPLIIZ	include/libavutil/channel_layout.h	/^    AV_MATRIX_ENCODING_DPLIIZ,$/;"	e	enum:AVMatrixEncoding
AV_MATRIX_ENCODING_NB	include/libavutil/channel_layout.h	/^    AV_MATRIX_ENCODING_NB$/;"	e	enum:AVMatrixEncoding
AV_MATRIX_ENCODING_NONE	include/libavutil/channel_layout.h	/^    AV_MATRIX_ENCODING_NONE,$/;"	e	enum:AVMatrixEncoding
AV_MIX_COEFF_TYPE_FLT	include/libavresample/avresample.h	/^    AV_MIX_COEFF_TYPE_FLT,  \/** floating-point                              *\/$/;"	e	enum:AVMixCoeffType
AV_MIX_COEFF_TYPE_NB	include/libavresample/avresample.h	/^    AV_MIX_COEFF_TYPE_NB,   \/** Number of coeff types. Not part of ABI      *\/$/;"	e	enum:AVMixCoeffType
AV_MIX_COEFF_TYPE_Q15	include/libavresample/avresample.h	/^    AV_MIX_COEFF_TYPE_Q15,  \/** 32-bit 17.15 fixed-point                    *\/$/;"	e	enum:AVMixCoeffType
AV_MIX_COEFF_TYPE_Q8	include/libavresample/avresample.h	/^    AV_MIX_COEFF_TYPE_Q8,   \/** 16-bit 8.8 fixed-point                      *\/$/;"	e	enum:AVMixCoeffType
AV_NE	include/libavutil/common.h	47;"	d
AV_NE	include/libavutil/common.h	49;"	d
AV_NOPTS_VALUE	include/libavutil/avutil.h	241;"	d
AV_NOWARN_DEPRECATED	include/libavutil/attributes.h	100;"	d
AV_NOWARN_DEPRECATED	include/libavutil/attributes.h	106;"	d
AV_NOWARN_DEPRECATED	include/libavutil/attributes.h	112;"	d
AV_NUM_DATA_POINTERS	include/libavutil/frame.h	158;"	d
AV_OPT_FLAG_AUDIO_PARAM	include/libavutil/opt.h	290;"	d
AV_OPT_FLAG_DECODING_PARAM	include/libavutil/opt.h	286;"	d
AV_OPT_FLAG_ENCODING_PARAM	include/libavutil/opt.h	285;"	d
AV_OPT_FLAG_EXPORT	include/libavutil/opt.h	296;"	d
AV_OPT_FLAG_FILTERING_PARAM	include/libavutil/opt.h	302;"	d
AV_OPT_FLAG_IMPLICIT_KEY	include/libavutil/opt.h	/^    AV_OPT_FLAG_IMPLICIT_KEY = 1,$/;"	e	enum:__anon12
AV_OPT_FLAG_METADATA	include/libavutil/opt.h	288;"	d
AV_OPT_FLAG_READONLY	include/libavutil/opt.h	301;"	d
AV_OPT_FLAG_SUBTITLE_PARAM	include/libavutil/opt.h	292;"	d
AV_OPT_FLAG_VIDEO_PARAM	include/libavutil/opt.h	291;"	d
AV_OPT_MULTI_COMPONENT_RANGE	include/libavutil/opt.h	617;"	d
AV_OPT_SEARCH_CHILDREN	include/libavutil/opt.h	602;"	d
AV_OPT_SEARCH_FAKE_OBJ	include/libavutil/opt.h	610;"	d
AV_OPT_SERIALIZE_OPT_FLAGS_EXACT	include/libavutil/opt.h	875;"	d
AV_OPT_SERIALIZE_SKIP_DEFAULTS	include/libavutil/opt.h	874;"	d
AV_OPT_TYPE_BINARY	include/libavutil/opt.h	/^    AV_OPT_TYPE_BINARY,  \/\/\/< offset must point to a pointer immediately followed by an int for the length$/;"	e	enum:AVOptionType
AV_OPT_TYPE_CHANNEL_LAYOUT	include/libavutil/opt.h	/^    AV_OPT_TYPE_CHANNEL_LAYOUT = MKBETAG('C','H','L','A'),$/;"	e	enum:AVOptionType
AV_OPT_TYPE_COLOR	include/libavutil/opt.h	/^    AV_OPT_TYPE_COLOR      = MKBETAG('C','O','L','R'),$/;"	e	enum:AVOptionType
AV_OPT_TYPE_CONST	include/libavutil/opt.h	/^    AV_OPT_TYPE_CONST = 128,$/;"	e	enum:AVOptionType
AV_OPT_TYPE_DICT	include/libavutil/opt.h	/^    AV_OPT_TYPE_DICT,$/;"	e	enum:AVOptionType
AV_OPT_TYPE_DOUBLE	include/libavutil/opt.h	/^    AV_OPT_TYPE_DOUBLE,$/;"	e	enum:AVOptionType
AV_OPT_TYPE_DURATION	include/libavutil/opt.h	/^    AV_OPT_TYPE_DURATION   = MKBETAG('D','U','R',' '),$/;"	e	enum:AVOptionType
AV_OPT_TYPE_FLAGS	include/libavutil/opt.h	/^    AV_OPT_TYPE_FLAGS,$/;"	e	enum:AVOptionType
AV_OPT_TYPE_FLOAT	include/libavutil/opt.h	/^    AV_OPT_TYPE_FLOAT,$/;"	e	enum:AVOptionType
AV_OPT_TYPE_IMAGE_SIZE	include/libavutil/opt.h	/^    AV_OPT_TYPE_IMAGE_SIZE = MKBETAG('S','I','Z','E'), \/\/\/< offset must point to two consecutive integers$/;"	e	enum:AVOptionType
AV_OPT_TYPE_INT	include/libavutil/opt.h	/^    AV_OPT_TYPE_INT,$/;"	e	enum:AVOptionType
AV_OPT_TYPE_INT64	include/libavutil/opt.h	/^    AV_OPT_TYPE_INT64,$/;"	e	enum:AVOptionType
AV_OPT_TYPE_PIXEL_FMT	include/libavutil/opt.h	/^    AV_OPT_TYPE_PIXEL_FMT  = MKBETAG('P','F','M','T'),$/;"	e	enum:AVOptionType
AV_OPT_TYPE_RATIONAL	include/libavutil/opt.h	/^    AV_OPT_TYPE_RATIONAL,$/;"	e	enum:AVOptionType
AV_OPT_TYPE_SAMPLE_FMT	include/libavutil/opt.h	/^    AV_OPT_TYPE_SAMPLE_FMT = MKBETAG('S','F','M','T'),$/;"	e	enum:AVOptionType
AV_OPT_TYPE_STRING	include/libavutil/opt.h	/^    AV_OPT_TYPE_STRING,$/;"	e	enum:AVOptionType
AV_OPT_TYPE_VIDEO_RATE	include/libavutil/opt.h	/^    AV_OPT_TYPE_VIDEO_RATE = MKBETAG('V','R','A','T'), \/\/\/< offset must point to AVRational$/;"	e	enum:AVOptionType
AV_PARSER_PTS_NB	include/libavcodec/avcodec.h	4224;"	d
AV_PERM_ALIGN	include/libavfilter/avfilter.h	116;"	d
AV_PERM_NEG_LINESIZES	include/libavfilter/avfilter.h	115;"	d
AV_PERM_PRESERVE	include/libavfilter/avfilter.h	112;"	d
AV_PERM_READ	include/libavfilter/avfilter.h	110;"	d
AV_PERM_REUSE	include/libavfilter/avfilter.h	113;"	d
AV_PERM_REUSE2	include/libavfilter/avfilter.h	114;"	d
AV_PERM_WRITE	include/libavfilter/avfilter.h	111;"	d
AV_PICTURE_STRUCTURE_BOTTOM_FIELD	include/libavcodec/avcodec.h	/^    AV_PICTURE_STRUCTURE_BOTTOM_FIELD, \/\/< coded as bottom field$/;"	e	enum:AVPictureStructure
AV_PICTURE_STRUCTURE_FRAME	include/libavcodec/avcodec.h	/^    AV_PICTURE_STRUCTURE_FRAME,        \/\/< coded as frame$/;"	e	enum:AVPictureStructure
AV_PICTURE_STRUCTURE_TOP_FIELD	include/libavcodec/avcodec.h	/^    AV_PICTURE_STRUCTURE_TOP_FIELD,    \/\/< coded as top field$/;"	e	enum:AVPictureStructure
AV_PICTURE_STRUCTURE_UNKNOWN	include/libavcodec/avcodec.h	/^    AV_PICTURE_STRUCTURE_UNKNOWN,      \/\/< unknown$/;"	e	enum:AVPictureStructure
AV_PICTURE_TYPE_B	include/libavutil/avutil.h	/^    AV_PICTURE_TYPE_B,     \/\/\/< Bi-dir predicted$/;"	e	enum:AVPictureType
AV_PICTURE_TYPE_BI	include/libavutil/avutil.h	/^    AV_PICTURE_TYPE_BI,    \/\/\/< BI type$/;"	e	enum:AVPictureType
AV_PICTURE_TYPE_I	include/libavutil/avutil.h	/^    AV_PICTURE_TYPE_I,     \/\/\/< Intra$/;"	e	enum:AVPictureType
AV_PICTURE_TYPE_NONE	include/libavutil/avutil.h	/^    AV_PICTURE_TYPE_NONE = 0, \/\/\/< Undefined$/;"	e	enum:AVPictureType
AV_PICTURE_TYPE_P	include/libavutil/avutil.h	/^    AV_PICTURE_TYPE_P,     \/\/\/< Predicted$/;"	e	enum:AVPictureType
AV_PICTURE_TYPE_S	include/libavutil/avutil.h	/^    AV_PICTURE_TYPE_S,     \/\/\/< S(GMC)-VOP MPEG4$/;"	e	enum:AVPictureType
AV_PICTURE_TYPE_SI	include/libavutil/avutil.h	/^    AV_PICTURE_TYPE_SI,    \/\/\/< Switching Intra$/;"	e	enum:AVPictureType
AV_PICTURE_TYPE_SP	include/libavutil/avutil.h	/^    AV_PICTURE_TYPE_SP,    \/\/\/< Switching Predicted$/;"	e	enum:AVPictureType
AV_PIX_FMT_0BGR	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_0BGR,      \/\/\/< packed BGR 8:8:8, 32bpp, 0BGR0BGR...$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_0BGR32	include/libavutil/pixfmt.h	324;"	d
AV_PIX_FMT_0RGB	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_0RGB=0x123+4,      \/\/\/< packed RGB 8:8:8, 32bpp, 0RGB0RGB...$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_0RGB32	include/libavutil/pixfmt.h	323;"	d
AV_PIX_FMT_ABGR	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_ABGR,      \/\/\/< packed ABGR 8:8:8:8, 32bpp, ABGRABGR...$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_ARGB	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_ARGB,      \/\/\/< packed ARGB 8:8:8:8, 32bpp, ARGBARGB...$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BAYER_BGGR16	include/libavutil/pixfmt.h	362;"	d
AV_PIX_FMT_BAYER_BGGR16BE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BAYER_BGGR16BE, \/\/\/< bayer, BGBG..(odd line), GRGR..(even line), 16-bit samples, big-endian *\/$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BAYER_BGGR16LE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BAYER_BGGR16LE, \/\/\/< bayer, BGBG..(odd line), GRGR..(even line), 16-bit samples, little-endian *\/$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BAYER_BGGR8	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BAYER_BGGR8,    \/\/\/< bayer, BGBG..(odd line), GRGR..(even line), 8-bit samples *\/$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BAYER_GBRG16	include/libavutil/pixfmt.h	364;"	d
AV_PIX_FMT_BAYER_GBRG16BE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BAYER_GBRG16BE, \/\/\/< bayer, GBGB..(odd line), RGRG..(even line), 16-bit samples, big-endian *\/$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BAYER_GBRG16LE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BAYER_GBRG16LE, \/\/\/< bayer, GBGB..(odd line), RGRG..(even line), 16-bit samples, little-endian *\/$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BAYER_GBRG8	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BAYER_GBRG8,    \/\/\/< bayer, GBGB..(odd line), RGRG..(even line), 8-bit samples *\/$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BAYER_GRBG16	include/libavutil/pixfmt.h	365;"	d
AV_PIX_FMT_BAYER_GRBG16BE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BAYER_GRBG16BE, \/\/\/< bayer, GRGR..(odd line), BGBG..(even line), 16-bit samples, big-endian *\/$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BAYER_GRBG16LE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BAYER_GRBG16LE, \/\/\/< bayer, GRGR..(odd line), BGBG..(even line), 16-bit samples, little-endian *\/$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BAYER_GRBG8	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BAYER_GRBG8,    \/\/\/< bayer, GRGR..(odd line), BGBG..(even line), 8-bit samples *\/$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BAYER_RGGB16	include/libavutil/pixfmt.h	363;"	d
AV_PIX_FMT_BAYER_RGGB16BE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BAYER_RGGB16BE, \/\/\/< bayer, RGRG..(odd line), GBGB..(even line), 16-bit samples, big-endian *\/$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BAYER_RGGB16LE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BAYER_RGGB16LE, \/\/\/< bayer, RGRG..(odd line), GBGB..(even line), 16-bit samples, little-endian *\/$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BAYER_RGGB8	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BAYER_RGGB8,    \/\/\/< bayer, RGRG..(odd line), GBGB..(even line), 8-bit samples *\/$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGR0	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BGR0,      \/\/\/< packed BGR 8:8:8, 32bpp, BGR0BGR0...$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGR24	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BGR24,     \/\/\/< packed RGB 8:8:8, 24bpp, BGRBGR...$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGR32	include/libavutil/pixfmt.h	321;"	d
AV_PIX_FMT_BGR32_1	include/libavutil/pixfmt.h	322;"	d
AV_PIX_FMT_BGR4	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BGR4,      \/\/\/< packed RGB 1:2:1 bitstream,  4bpp, (msb)1B 2G 1R(lsb), a byte contains two pixels, the first pixel in the byte is the one composed by the 4 msb bits$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGR444	include/libavutil/pixfmt.h	336;"	d
AV_PIX_FMT_BGR444BE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BGR444BE,  \/\/\/< packed BGR 4:4:4, 16bpp, (msb)4A 4B 4G 4R(lsb), big-endian, most significant bits to 1$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGR444LE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BGR444LE,  \/\/\/< packed BGR 4:4:4, 16bpp, (msb)4A 4B 4G 4R(lsb), little-endian, most significant bits to 1$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGR48	include/libavutil/pixfmt.h	333;"	d
AV_PIX_FMT_BGR48BE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BGR48BE,   \/\/\/< packed RGB 16:16:16, 48bpp, 16B, 16G, 16R, the 2-byte value for each R\/G\/B component is stored as big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGR48LE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BGR48LE,   \/\/\/< packed RGB 16:16:16, 48bpp, 16B, 16G, 16R, the 2-byte value for each R\/G\/B component is stored as little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGR4_BYTE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BGR4_BYTE, \/\/\/< packed RGB 1:2:1,  8bpp, (msb)1B 2G 1R(lsb)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGR555	include/libavutil/pixfmt.h	335;"	d
AV_PIX_FMT_BGR555BE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BGR555BE,  \/\/\/< packed BGR 5:5:5, 16bpp, (msb)1A 5B 5G 5R(lsb), big-endian, most significant bit to 1$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGR555LE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BGR555LE,  \/\/\/< packed BGR 5:5:5, 16bpp, (msb)1A 5B 5G 5R(lsb), little-endian, most significant bit to 1$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGR565	include/libavutil/pixfmt.h	334;"	d
AV_PIX_FMT_BGR565BE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BGR565BE,  \/\/\/< packed BGR 5:6:5, 16bpp, (msb)   5B 6G 5R(lsb), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGR565LE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BGR565LE,  \/\/\/< packed BGR 5:6:5, 16bpp, (msb)   5B 6G 5R(lsb), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGR8	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BGR8,      \/\/\/< packed RGB 3:3:2,  8bpp, (msb)2B 3G 3R(lsb)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGRA	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BGRA,      \/\/\/< packed BGRA 8:8:8:8, 32bpp, BGRABGRA...$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGRA64	include/libavutil/pixfmt.h	337;"	d
AV_PIX_FMT_BGRA64BE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BGRA64BE,  \/\/\/< packed RGBA 16:16:16:16, 64bpp, 16B, 16G, 16R, 16A, the 2-byte value for each R\/G\/B\/A component is stored as big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGRA64BE	include/libavutil/pixfmt.h	305;"	d
AV_PIX_FMT_BGRA64BE_LIBAV	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BGRA64BE_LIBAV,     \/\/\/< packed RGBA 16:16:16:16, 64bpp, 16B, 16G, 16R, 16A, the 2-byte value for each R\/G\/B\/A component is stored as big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGRA64LE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BGRA64LE,  \/\/\/< packed RGBA 16:16:16:16, 64bpp, 16B, 16G, 16R, 16A, the 2-byte value for each R\/G\/B\/A component is stored as little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_BGRA64LE	include/libavutil/pixfmt.h	306;"	d
AV_PIX_FMT_BGRA64LE_LIBAV	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_BGRA64LE_LIBAV,     \/\/\/< packed RGBA 16:16:16:16, 64bpp, 16B, 16G, 16R, 16A, the 2-byte value for each R\/G\/B\/A component is stored as little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_DXVA2_VLD	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_DXVA2_VLD,    \/\/\/< HW decoding through DXVA2, Picture.data[3] contains a LPDIRECT3DSURFACE9 pointer$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_FLAG_ALPHA	include/libavutil/pixdesc.h	141;"	d
AV_PIX_FMT_FLAG_BE	include/libavutil/pixdesc.h	111;"	d
AV_PIX_FMT_FLAG_BITSTREAM	include/libavutil/pixdesc.h	119;"	d
AV_PIX_FMT_FLAG_HWACCEL	include/libavutil/pixdesc.h	123;"	d
AV_PIX_FMT_FLAG_PAL	include/libavutil/pixdesc.h	115;"	d
AV_PIX_FMT_FLAG_PLANAR	include/libavutil/pixdesc.h	127;"	d
AV_PIX_FMT_FLAG_PSEUDOPAL	include/libavutil/pixdesc.h	137;"	d
AV_PIX_FMT_FLAG_RGB	include/libavutil/pixdesc.h	131;"	d
AV_PIX_FMT_GBR24P	include/libavutil/pixfmt.h	311;"	d
AV_PIX_FMT_GBRAP	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRAP,       \/\/\/< planar GBRA 4:4:4:4 32bpp$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRAP16	include/libavutil/pixfmt.h	360;"	d
AV_PIX_FMT_GBRAP16BE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRAP16BE,   \/\/\/< planar GBRA 4:4:4:4 64bpp, big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRAP16LE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRAP16LE,   \/\/\/< planar GBRA 4:4:4:4 64bpp, little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRP	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRP,      \/\/\/< planar GBR 4:4:4 24bpp$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRP10	include/libavutil/pixfmt.h	356;"	d
AV_PIX_FMT_GBRP10BE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRP10BE,  \/\/\/< planar GBR 4:4:4 30bpp, big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRP10LE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRP10LE,  \/\/\/< planar GBR 4:4:4 30bpp, little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRP12	include/libavutil/pixfmt.h	357;"	d
AV_PIX_FMT_GBRP12BE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRP12BE,    \/\/\/< planar GBR 4:4:4 36bpp, big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRP12LE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRP12LE,    \/\/\/< planar GBR 4:4:4 36bpp, little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRP14	include/libavutil/pixfmt.h	358;"	d
AV_PIX_FMT_GBRP14BE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRP14BE,    \/\/\/< planar GBR 4:4:4 42bpp, big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRP14LE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRP14LE,    \/\/\/< planar GBR 4:4:4 42bpp, little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRP16	include/libavutil/pixfmt.h	359;"	d
AV_PIX_FMT_GBRP16BE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRP16BE,  \/\/\/< planar GBR 4:4:4 48bpp, big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRP16LE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRP16LE,  \/\/\/< planar GBR 4:4:4 48bpp, little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRP9	include/libavutil/pixfmt.h	355;"	d
AV_PIX_FMT_GBRP9BE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRP9BE,   \/\/\/< planar GBR 4:4:4 27bpp, big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GBRP9LE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_GBRP9LE,   \/\/\/< planar GBR 4:4:4 27bpp, little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GRAY16	include/libavutil/pixfmt.h	326;"	d
AV_PIX_FMT_GRAY16BE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_GRAY16BE,  \/\/\/<        Y        , 16bpp, big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GRAY16LE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_GRAY16LE,  \/\/\/<        Y        , 16bpp, little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GRAY8	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_GRAY8,     \/\/\/<        Y        ,  8bpp$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_GRAY8A	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_GRAY8A= AV_PIX_FMT_YA8, \/\/\/< alias for AV_PIX_FMT_YA8$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_MONOBLACK	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_MONOBLACK, \/\/\/<        Y        ,  1bpp, 0 is black, 1 is white, in each byte pixels are ordered from the msb to the lsb$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_MONOWHITE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_MONOWHITE, \/\/\/<        Y        ,  1bpp, 0 is white, 1 is black, in each byte pixels are ordered from the msb to the lsb$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_NB	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_NB,        \/\/\/< number of pixel formats, DO NOT USE THIS if you want to link with shared libav* because the number of formats might differ between versions$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_NE	include/libavutil/pixfmt.h	314;"	d
AV_PIX_FMT_NE	include/libavutil/pixfmt.h	316;"	d
AV_PIX_FMT_NONE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_NONE = -1,$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_NV12	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_NV12,      \/\/\/< planar YUV 4:2:0, 12bpp, 1 plane for Y and 1 plane for the UV components, which are interleaved (first byte U and the following byte V)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_NV16	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_NV16,         \/\/\/< interleaved chroma YUV 4:2:2, 16bpp, (1 Cr & Cb sample per 2x1 Y samples)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_NV20	include/libavutil/pixfmt.h	379;"	d
AV_PIX_FMT_NV20BE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_NV20BE,       \/\/\/< interleaved chroma YUV 4:2:2, 20bpp, (1 Cr & Cb sample per 2x1 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_NV20LE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_NV20LE,       \/\/\/< interleaved chroma YUV 4:2:2, 20bpp, (1 Cr & Cb sample per 2x1 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_NV21	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_NV21,      \/\/\/< as above, but U and V bytes are swapped$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_PAL8	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_PAL8,      \/\/\/< 8 bit with PIX_FMT_RGB32 palette$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGB0	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_RGB0,      \/\/\/< packed RGB 8:8:8, 32bpp, RGB0RGB0...$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGB24	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_RGB24,     \/\/\/< packed RGB 8:8:8, 24bpp, RGBRGB...$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGB32	include/libavutil/pixfmt.h	319;"	d
AV_PIX_FMT_RGB32_1	include/libavutil/pixfmt.h	320;"	d
AV_PIX_FMT_RGB4	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_RGB4,      \/\/\/< packed RGB 1:2:1 bitstream,  4bpp, (msb)1R 2G 1B(lsb), a byte contains two pixels, the first pixel in the byte is the one composed by the 4 msb bits$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGB444	include/libavutil/pixfmt.h	331;"	d
AV_PIX_FMT_RGB444BE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_RGB444BE,  \/\/\/< packed RGB 4:4:4, 16bpp, (msb)4A 4R 4G 4B(lsb), big-endian, most significant bits to 0$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGB444LE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_RGB444LE,  \/\/\/< packed RGB 4:4:4, 16bpp, (msb)4A 4R 4G 4B(lsb), little-endian, most significant bits to 0$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGB48	include/libavutil/pixfmt.h	328;"	d
AV_PIX_FMT_RGB48BE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_RGB48BE,   \/\/\/< packed RGB 16:16:16, 48bpp, 16R, 16G, 16B, the 2-byte value for each R\/G\/B component is stored as big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGB48LE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_RGB48LE,   \/\/\/< packed RGB 16:16:16, 48bpp, 16R, 16G, 16B, the 2-byte value for each R\/G\/B component is stored as little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGB4_BYTE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_RGB4_BYTE, \/\/\/< packed RGB 1:2:1,  8bpp, (msb)1R 2G 1B(lsb)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGB555	include/libavutil/pixfmt.h	330;"	d
AV_PIX_FMT_RGB555BE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_RGB555BE,  \/\/\/< packed RGB 5:5:5, 16bpp, (msb)1A 5R 5G 5B(lsb), big-endian, most significant bit to 0$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGB555LE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_RGB555LE,  \/\/\/< packed RGB 5:5:5, 16bpp, (msb)1A 5R 5G 5B(lsb), little-endian, most significant bit to 0$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGB565	include/libavutil/pixfmt.h	329;"	d
AV_PIX_FMT_RGB565BE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_RGB565BE,  \/\/\/< packed RGB 5:6:5, 16bpp, (msb)   5R 6G 5B(lsb), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGB565LE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_RGB565LE,  \/\/\/< packed RGB 5:6:5, 16bpp, (msb)   5R 6G 5B(lsb), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGB8	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_RGB8,      \/\/\/< packed RGB 3:3:2,  8bpp, (msb)2R 3G 3B(lsb)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGBA	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_RGBA,      \/\/\/< packed RGBA 8:8:8:8, 32bpp, RGBARGBA...$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGBA64	include/libavutil/pixfmt.h	332;"	d
AV_PIX_FMT_RGBA64BE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_RGBA64BE,  \/\/\/< packed RGBA 16:16:16:16, 64bpp, 16R, 16G, 16B, 16A, the 2-byte value for each R\/G\/B\/A component is stored as big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGBA64BE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_RGBA64BE=0x123,  \/\/\/< packed RGBA 16:16:16:16, 64bpp, 16R, 16G, 16B, 16A, the 2-byte value for each R\/G\/B\/A component is stored as big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGBA64BE	include/libavutil/pixfmt.h	303;"	d
AV_PIX_FMT_RGBA64BE_LIBAV	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_RGBA64BE_LIBAV,     \/\/\/< packed RGBA 16:16:16:16, 64bpp, 16R, 16G, 16B, 16A, the 2-byte value for each R\/G\/B\/A component is stored as big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGBA64LE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_RGBA64LE,  \/\/\/< packed RGBA 16:16:16:16, 64bpp, 16R, 16G, 16B, 16A, the 2-byte value for each R\/G\/B\/A component is stored as little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_RGBA64LE	include/libavutil/pixfmt.h	304;"	d
AV_PIX_FMT_RGBA64LE_LIBAV	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_RGBA64LE_LIBAV,     \/\/\/< packed RGBA 16:16:16:16, 64bpp, 16R, 16G, 16B, 16A, the 2-byte value for each R\/G\/B\/A component is stored as little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_UYVY422	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_UYVY422,   \/\/\/< packed YUV 4:2:2, 16bpp, Cb Y0 Cr Y1$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_UYYVYY411	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_UYYVYY411, \/\/\/< packed YUV 4:1:1, 12bpp, Cb Y0 Y1 Cr Y2 Y3$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_VAAPI_IDCT	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_VAAPI_IDCT, \/\/\/< HW acceleration through VA API at IDCT entry-point, Picture.data[3] contains a vaapi_render_state struct which contains fields extracted from headers$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_VAAPI_MOCO	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_VAAPI_MOCO, \/\/\/< HW acceleration through VA API at motion compensation entry-point, Picture.data[3] contains a vaapi_render_state struct which contains macroblocks as well as various fields extracted from headers$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_VAAPI_VLD	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_VAAPI_VLD,  \/\/\/< HW decoding through VA API, Picture.data[3] contains a vaapi_render_state struct which contains the bitstream of the slices as well as various fields extracted from headers$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_VDA	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_VDA,          \/\/\/< HW acceleration through VDA, data[3] contains a CVPixelBufferRef$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_VDA_VLD	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_VDA_VLD,    \/\/\/< hardware decoding through VDA$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_VDPAU	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_VDPAU,     \/\/\/< HW acceleration through VDPAU, Picture.data[3] contains a VdpVideoSurface$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_VDPAU_H264	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_VDPAU_H264,\/\/\/< H.264 HW decoding with VDPAU, data[0] contains a vdpau_render_state struct which contains the bitstream of the slices as well as various fields extracted from headers$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_VDPAU_MPEG1	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_VDPAU_MPEG1,\/\/\/< MPEG-1 HW decoding with VDPAU, data[0] contains a vdpau_render_state struct which contains the bitstream of the slices as well as various fields extracted from headers$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_VDPAU_MPEG2	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_VDPAU_MPEG2,\/\/\/< MPEG-2 HW decoding with VDPAU, data[0] contains a vdpau_render_state struct which contains the bitstream of the slices as well as various fields extracted from headers$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_VDPAU_MPEG4	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_VDPAU_MPEG4,  \/\/\/< MPEG4 HW decoding with VDPAU, data[0] contains a vdpau_render_state struct which contains the bitstream of the slices as well as various fields extracted from headers$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_VDPAU_VC1	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_VDPAU_VC1, \/\/\/< VC-1 HW decoding with VDPAU, data[0] contains a vdpau_render_state struct which contains the bitstream of the slices as well as various fields extracted from headers$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_VDPAU_WMV3	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_VDPAU_WMV3,\/\/\/< WMV3 HW decoding with VDPAU, data[0] contains a vdpau_render_state struct which contains the bitstream of the slices as well as various fields extracted from headers$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_XVMC	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_XVMC,\/\/\/< XVideo Motion Acceleration via common packet passing$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_XVMC	include/libavutil/pixfmt.h	86;"	d
AV_PIX_FMT_XVMC_MPEG2_IDCT	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_XVMC_MPEG2_IDCT,$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_XVMC_MPEG2_MC	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_XVMC_MPEG2_MC,\/\/\/< XVideo Motion Acceleration via common packet passing$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_XYZ12	include/libavutil/pixfmt.h	378;"	d
AV_PIX_FMT_XYZ12BE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_XYZ12BE,      \/\/\/< packed XYZ 4:4:4, 36 bpp, (msb) 12X, 12Y, 12Z (lsb), the 2-byte value for each X\/Y\/Z is stored as big-endian, the 4 lower bits are set to 0$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_XYZ12LE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_XYZ12LE,      \/\/\/< packed XYZ 4:4:4, 36 bpp, (msb) 12X, 12Y, 12Z (lsb), the 2-byte value for each X\/Y\/Z is stored as little-endian, the 4 lower bits are set to 0$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_Y400A	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_Y400A = AV_PIX_FMT_YA8, \/\/\/< alias for AV_PIX_FMT_YA8$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_Y400A	include/libavutil/pixfmt.h	310;"	d
AV_PIX_FMT_YA16	include/libavutil/pixfmt.h	327;"	d
AV_PIX_FMT_YA16BE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YA16BE,       \/\/\/< 16bit gray, 16bit alpha (big-endian)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YA16LE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YA16LE,       \/\/\/< 16bit gray, 16bit alpha (little-endian)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YA8	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YA8,       \/\/\/< 8bit gray, 8bit alpha$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV410P	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV410P,   \/\/\/< planar YUV 4:1:0,  9bpp, (1 Cr & Cb sample per 4x4 Y samples)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV411P	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV411P,   \/\/\/< planar YUV 4:1:1, 12bpp, (1 Cr & Cb sample per 4x1 Y samples)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV420P	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV420P,   \/\/\/< planar YUV 4:2:0, 12bpp, (1 Cr & Cb sample per 2x2 Y samples)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV420P10	include/libavutil/pixfmt.h	342;"	d
AV_PIX_FMT_YUV420P10BE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV420P10BE,\/\/\/< planar YUV 4:2:0, 15bpp, (1 Cr & Cb sample per 2x2 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV420P10LE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV420P10LE,\/\/\/< planar YUV 4:2:0, 15bpp, (1 Cr & Cb sample per 2x2 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV420P12	include/libavutil/pixfmt.h	345;"	d
AV_PIX_FMT_YUV420P12BE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV420P12BE, \/\/\/< planar YUV 4:2:0,18bpp, (1 Cr & Cb sample per 2x2 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV420P12LE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV420P12LE, \/\/\/< planar YUV 4:2:0,18bpp, (1 Cr & Cb sample per 2x2 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV420P14	include/libavutil/pixfmt.h	348;"	d
AV_PIX_FMT_YUV420P14BE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV420P14BE, \/\/\/< planar YUV 4:2:0,21bpp, (1 Cr & Cb sample per 2x2 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV420P14LE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV420P14LE, \/\/\/< planar YUV 4:2:0,21bpp, (1 Cr & Cb sample per 2x2 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV420P16	include/libavutil/pixfmt.h	351;"	d
AV_PIX_FMT_YUV420P16BE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV420P16BE,  \/\/\/< planar YUV 4:2:0, 24bpp, (1 Cr & Cb sample per 2x2 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV420P16LE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV420P16LE,  \/\/\/< planar YUV 4:2:0, 24bpp, (1 Cr & Cb sample per 2x2 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV420P9	include/libavutil/pixfmt.h	339;"	d
AV_PIX_FMT_YUV420P9BE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV420P9BE, \/\/\/< planar YUV 4:2:0, 13.5bpp, (1 Cr & Cb sample per 2x2 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV420P9LE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV420P9LE, \/\/\/< planar YUV 4:2:0, 13.5bpp, (1 Cr & Cb sample per 2x2 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV422P	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV422P,   \/\/\/< planar YUV 4:2:2, 16bpp, (1 Cr & Cb sample per 2x1 Y samples)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV422P10	include/libavutil/pixfmt.h	343;"	d
AV_PIX_FMT_YUV422P10BE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV422P10BE,\/\/\/< planar YUV 4:2:2, 20bpp, (1 Cr & Cb sample per 2x1 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV422P10LE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV422P10LE,\/\/\/< planar YUV 4:2:2, 20bpp, (1 Cr & Cb sample per 2x1 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV422P12	include/libavutil/pixfmt.h	346;"	d
AV_PIX_FMT_YUV422P12BE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV422P12BE, \/\/\/< planar YUV 4:2:2,24bpp, (1 Cr & Cb sample per 2x1 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV422P12LE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV422P12LE, \/\/\/< planar YUV 4:2:2,24bpp, (1 Cr & Cb sample per 2x1 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV422P14	include/libavutil/pixfmt.h	349;"	d
AV_PIX_FMT_YUV422P14BE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV422P14BE, \/\/\/< planar YUV 4:2:2,28bpp, (1 Cr & Cb sample per 2x1 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV422P14LE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV422P14LE, \/\/\/< planar YUV 4:2:2,28bpp, (1 Cr & Cb sample per 2x1 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV422P16	include/libavutil/pixfmt.h	352;"	d
AV_PIX_FMT_YUV422P16BE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV422P16BE,  \/\/\/< planar YUV 4:2:2, 32bpp, (1 Cr & Cb sample per 2x1 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV422P16LE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV422P16LE,  \/\/\/< planar YUV 4:2:2, 32bpp, (1 Cr & Cb sample per 2x1 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV422P9	include/libavutil/pixfmt.h	340;"	d
AV_PIX_FMT_YUV422P9BE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV422P9BE, \/\/\/< planar YUV 4:2:2, 18bpp, (1 Cr & Cb sample per 2x1 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV422P9LE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV422P9LE, \/\/\/< planar YUV 4:2:2, 18bpp, (1 Cr & Cb sample per 2x1 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV440P	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV440P,   \/\/\/< planar YUV 4:4:0 (1 Cr & Cb sample per 1x2 Y samples)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV444P	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV444P,   \/\/\/< planar YUV 4:4:4, 24bpp, (1 Cr & Cb sample per 1x1 Y samples)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV444P10	include/libavutil/pixfmt.h	344;"	d
AV_PIX_FMT_YUV444P10BE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV444P10BE,\/\/\/< planar YUV 4:4:4, 30bpp, (1 Cr & Cb sample per 1x1 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV444P10LE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV444P10LE,\/\/\/< planar YUV 4:4:4, 30bpp, (1 Cr & Cb sample per 1x1 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV444P12	include/libavutil/pixfmt.h	347;"	d
AV_PIX_FMT_YUV444P12BE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV444P12BE, \/\/\/< planar YUV 4:4:4,36bpp, (1 Cr & Cb sample per 1x1 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV444P12LE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV444P12LE, \/\/\/< planar YUV 4:4:4,36bpp, (1 Cr & Cb sample per 1x1 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV444P14	include/libavutil/pixfmt.h	350;"	d
AV_PIX_FMT_YUV444P14BE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV444P14BE, \/\/\/< planar YUV 4:4:4,42bpp, (1 Cr & Cb sample per 1x1 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV444P14LE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV444P14LE, \/\/\/< planar YUV 4:4:4,42bpp, (1 Cr & Cb sample per 1x1 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV444P16	include/libavutil/pixfmt.h	353;"	d
AV_PIX_FMT_YUV444P16BE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV444P16BE,  \/\/\/< planar YUV 4:4:4, 48bpp, (1 Cr & Cb sample per 1x1 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV444P16LE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV444P16LE,  \/\/\/< planar YUV 4:4:4, 48bpp, (1 Cr & Cb sample per 1x1 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV444P9	include/libavutil/pixfmt.h	341;"	d
AV_PIX_FMT_YUV444P9BE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV444P9BE, \/\/\/< planar YUV 4:4:4, 27bpp, (1 Cr & Cb sample per 1x1 Y samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUV444P9LE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUV444P9LE, \/\/\/< planar YUV 4:4:4, 27bpp, (1 Cr & Cb sample per 1x1 Y samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA420P	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA420P,  \/\/\/< planar YUV 4:2:0, 20bpp, (1 Cr & Cb sample per 2x2 Y & A samples)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA420P10	include/libavutil/pixfmt.h	371;"	d
AV_PIX_FMT_YUVA420P10BE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA420P10BE, \/\/\/< planar YUV 4:2:0 25bpp, (1 Cr & Cb sample per 2x2 Y & A samples, big-endian)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA420P10LE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA420P10LE, \/\/\/< planar YUV 4:2:0 25bpp, (1 Cr & Cb sample per 2x2 Y & A samples, little-endian)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA420P16	include/libavutil/pixfmt.h	374;"	d
AV_PIX_FMT_YUVA420P16BE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA420P16BE, \/\/\/< planar YUV 4:2:0 40bpp, (1 Cr & Cb sample per 2x2 Y & A samples, big-endian)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA420P16LE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA420P16LE, \/\/\/< planar YUV 4:2:0 40bpp, (1 Cr & Cb sample per 2x2 Y & A samples, little-endian)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA420P9	include/libavutil/pixfmt.h	368;"	d
AV_PIX_FMT_YUVA420P9BE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA420P9BE,  \/\/\/< planar YUV 4:2:0 22.5bpp, (1 Cr & Cb sample per 2x2 Y & A samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA420P9LE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA420P9LE,  \/\/\/< planar YUV 4:2:0 22.5bpp, (1 Cr & Cb sample per 2x2 Y & A samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA422P	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA422P,  \/\/\/< planar YUV 4:2:2 24bpp, (1 Cr & Cb sample per 2x1 Y & A samples)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA422P	include/libavutil/pixfmt.h	301;"	d
AV_PIX_FMT_YUVA422P10	include/libavutil/pixfmt.h	372;"	d
AV_PIX_FMT_YUVA422P10BE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA422P10BE, \/\/\/< planar YUV 4:2:2 30bpp, (1 Cr & Cb sample per 2x1 Y & A samples, big-endian)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA422P10LE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA422P10LE, \/\/\/< planar YUV 4:2:2 30bpp, (1 Cr & Cb sample per 2x1 Y & A samples, little-endian)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA422P16	include/libavutil/pixfmt.h	375;"	d
AV_PIX_FMT_YUVA422P16BE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA422P16BE, \/\/\/< planar YUV 4:2:2 48bpp, (1 Cr & Cb sample per 2x1 Y & A samples, big-endian)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA422P16LE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA422P16LE, \/\/\/< planar YUV 4:2:2 48bpp, (1 Cr & Cb sample per 2x1 Y & A samples, little-endian)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA422P9	include/libavutil/pixfmt.h	369;"	d
AV_PIX_FMT_YUVA422P9BE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA422P9BE,  \/\/\/< planar YUV 4:2:2 27bpp, (1 Cr & Cb sample per 2x1 Y & A samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA422P9LE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA422P9LE,  \/\/\/< planar YUV 4:2:2 27bpp, (1 Cr & Cb sample per 2x1 Y & A samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA422P_LIBAV	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA422P_LIBAV,  \/\/\/< planar YUV 4:2:2 24bpp, (1 Cr & Cb sample per 2x1 Y & A samples)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA444P	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA444P,  \/\/\/< planar YUV 4:4:4 32bpp, (1 Cr & Cb sample per 1x1 Y & A samples)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA444P	include/libavutil/pixfmt.h	302;"	d
AV_PIX_FMT_YUVA444P10	include/libavutil/pixfmt.h	373;"	d
AV_PIX_FMT_YUVA444P10BE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA444P10BE, \/\/\/< planar YUV 4:4:4 40bpp, (1 Cr & Cb sample per 1x1 Y & A samples, big-endian)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA444P10LE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA444P10LE, \/\/\/< planar YUV 4:4:4 40bpp, (1 Cr & Cb sample per 1x1 Y & A samples, little-endian)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA444P16	include/libavutil/pixfmt.h	376;"	d
AV_PIX_FMT_YUVA444P16BE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA444P16BE, \/\/\/< planar YUV 4:4:4 64bpp, (1 Cr & Cb sample per 1x1 Y & A samples, big-endian)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA444P16LE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA444P16LE, \/\/\/< planar YUV 4:4:4 64bpp, (1 Cr & Cb sample per 1x1 Y & A samples, little-endian)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA444P9	include/libavutil/pixfmt.h	370;"	d
AV_PIX_FMT_YUVA444P9BE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA444P9BE,  \/\/\/< planar YUV 4:4:4 36bpp, (1 Cr & Cb sample per 1x1 Y & A samples), big-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA444P9LE	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA444P9LE,  \/\/\/< planar YUV 4:4:4 36bpp, (1 Cr & Cb sample per 1x1 Y & A samples), little-endian$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVA444P_LIBAV	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVA444P_LIBAV,  \/\/\/< planar YUV 4:4:4 32bpp, (1 Cr & Cb sample per 1x1 Y & A samples)$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVJ411P	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVJ411P,    \/\/\/< planar YUV 4:1:1, 12bpp, (1 Cr & Cb sample per 4x1 Y samples) full scale (JPEG), deprecated in favor of PIX_FMT_YUV411P and setting color_range$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVJ420P	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVJ420P,  \/\/\/< planar YUV 4:2:0, 12bpp, full scale (JPEG), deprecated in favor of PIX_FMT_YUV420P and setting color_range$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVJ422P	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVJ422P,  \/\/\/< planar YUV 4:2:2, 16bpp, full scale (JPEG), deprecated in favor of PIX_FMT_YUV422P and setting color_range$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVJ440P	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVJ440P,  \/\/\/< planar YUV 4:4:0 full scale (JPEG), deprecated in favor of PIX_FMT_YUV440P and setting color_range$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUVJ444P	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUVJ444P,  \/\/\/< planar YUV 4:4:4, 24bpp, full scale (JPEG), deprecated in favor of PIX_FMT_YUV444P and setting color_range$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YUYV422	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YUYV422,   \/\/\/< packed YUV 4:2:2, 16bpp, Y0 Cb Y1 Cr$/;"	e	enum:AVPixelFormat
AV_PIX_FMT_YVYU422	include/libavutil/pixfmt.h	/^    AV_PIX_FMT_YVYU422,   \/\/\/< packed YUV 4:2:2, 16bpp, Y0 Cr Y1 Cb$/;"	e	enum:AVPixelFormat
AV_PKT_DATA_DISPLAYMATRIX	include/libavcodec/avcodec.h	/^    AV_PKT_DATA_DISPLAYMATRIX,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_H263_MB_INFO	include/libavcodec/avcodec.h	/^    AV_PKT_DATA_H263_MB_INFO,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_JP_DUALMONO	include/libavcodec/avcodec.h	/^    AV_PKT_DATA_JP_DUALMONO,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL	include/libavcodec/avcodec.h	/^    AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_METADATA_UPDATE	include/libavcodec/avcodec.h	/^    AV_PKT_DATA_METADATA_UPDATE,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_NEW_EXTRADATA	include/libavcodec/avcodec.h	/^    AV_PKT_DATA_NEW_EXTRADATA,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_PALETTE	include/libavcodec/avcodec.h	/^    AV_PKT_DATA_PALETTE,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_PARAM_CHANGE	include/libavcodec/avcodec.h	/^    AV_PKT_DATA_PARAM_CHANGE,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_REPLAYGAIN	include/libavcodec/avcodec.h	/^    AV_PKT_DATA_REPLAYGAIN,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_SKIP_SAMPLES	include/libavcodec/avcodec.h	/^    AV_PKT_DATA_SKIP_SAMPLES=70,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_STEREO3D	include/libavcodec/avcodec.h	/^    AV_PKT_DATA_STEREO3D,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_STRINGS_METADATA	include/libavcodec/avcodec.h	/^    AV_PKT_DATA_STRINGS_METADATA,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_SUBTITLE_POSITION	include/libavcodec/avcodec.h	/^    AV_PKT_DATA_SUBTITLE_POSITION,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_WEBVTT_IDENTIFIER	include/libavcodec/avcodec.h	/^    AV_PKT_DATA_WEBVTT_IDENTIFIER,$/;"	e	enum:AVPacketSideDataType
AV_PKT_DATA_WEBVTT_SETTINGS	include/libavcodec/avcodec.h	/^    AV_PKT_DATA_WEBVTT_SETTINGS,$/;"	e	enum:AVPacketSideDataType
AV_PKT_FLAG_CORRUPT	include/libavcodec/avcodec.h	1197;"	d
AV_PKT_FLAG_KEY	include/libavcodec/avcodec.h	1196;"	d
AV_PRAGMA	include/libavutil/macros.h	46;"	d
AV_PROGRAM_RUNNING	include/libavformat/avformat.h	1128;"	d
AV_PTS_WRAP_ADD_OFFSET	include/libavformat/avformat.h	772;"	d
AV_PTS_WRAP_IGNORE	include/libavformat/avformat.h	771;"	d
AV_PTS_WRAP_SUB_OFFSET	include/libavformat/avformat.h	773;"	d
AV_RB	include/libavutil/intreadwrite.h	384;"	d
AV_RB	include/libavutil/intreadwrite.h	389;"	d
AV_RB16	include/libavutil/intreadwrite.h	240;"	d
AV_RB16	include/libavutil/intreadwrite.h	402;"	d
AV_RB16	include/libavutil/intreadwrite.h	90;"	d
AV_RB24	include/libavutil/intreadwrite.h	102;"	d
AV_RB24	include/libavutil/intreadwrite.h	444;"	d
AV_RB32	include/libavutil/intreadwrite.h	114;"	d
AV_RB32	include/libavutil/intreadwrite.h	266;"	d
AV_RB32	include/libavutil/intreadwrite.h	416;"	d
AV_RB48	include/libavutil/intreadwrite.h	126;"	d
AV_RB48	include/libavutil/intreadwrite.h	472;"	d
AV_RB64	include/libavutil/intreadwrite.h	138;"	d
AV_RB64	include/libavutil/intreadwrite.h	300;"	d
AV_RB64	include/libavutil/intreadwrite.h	430;"	d
AV_RB8	include/libavutil/intreadwrite.h	395;"	d
AV_RESAMPLE_DITHER_NB	include/libavresample/avresample.h	/^    AV_RESAMPLE_DITHER_NB,              \/**< Number of dither types. Not part of ABI. *\/$/;"	e	enum:AVResampleDitherMethod
AV_RESAMPLE_DITHER_NONE	include/libavresample/avresample.h	/^    AV_RESAMPLE_DITHER_NONE,            \/**< Do not use dithering *\/$/;"	e	enum:AVResampleDitherMethod
AV_RESAMPLE_DITHER_RECTANGULAR	include/libavresample/avresample.h	/^    AV_RESAMPLE_DITHER_RECTANGULAR,     \/**< Rectangular Dither *\/$/;"	e	enum:AVResampleDitherMethod
AV_RESAMPLE_DITHER_TRIANGULAR	include/libavresample/avresample.h	/^    AV_RESAMPLE_DITHER_TRIANGULAR,      \/**< Triangular Dither*\/$/;"	e	enum:AVResampleDitherMethod
AV_RESAMPLE_DITHER_TRIANGULAR_HP	include/libavresample/avresample.h	/^    AV_RESAMPLE_DITHER_TRIANGULAR_HP,   \/**< Triangular Dither with High Pass *\/$/;"	e	enum:AVResampleDitherMethod
AV_RESAMPLE_DITHER_TRIANGULAR_NS	include/libavresample/avresample.h	/^    AV_RESAMPLE_DITHER_TRIANGULAR_NS,   \/**< Triangular Dither with Noise Shaping *\/$/;"	e	enum:AVResampleDitherMethod
AV_RESAMPLE_FILTER_TYPE_BLACKMAN_NUTTALL	include/libavresample/avresample.h	/^    AV_RESAMPLE_FILTER_TYPE_BLACKMAN_NUTTALL,   \/**< Blackman Nuttall Windowed Sinc *\/$/;"	e	enum:AVResampleFilterType
AV_RESAMPLE_FILTER_TYPE_CUBIC	include/libavresample/avresample.h	/^    AV_RESAMPLE_FILTER_TYPE_CUBIC,              \/**< Cubic *\/$/;"	e	enum:AVResampleFilterType
AV_RESAMPLE_FILTER_TYPE_KAISER	include/libavresample/avresample.h	/^    AV_RESAMPLE_FILTER_TYPE_KAISER,             \/**< Kaiser Windowed Sinc *\/$/;"	e	enum:AVResampleFilterType
AV_RL	include/libavutil/intreadwrite.h	386;"	d
AV_RL	include/libavutil/intreadwrite.h	391;"	d
AV_RL16	include/libavutil/intreadwrite.h	152;"	d
AV_RL16	include/libavutil/intreadwrite.h	253;"	d
AV_RL16	include/libavutil/intreadwrite.h	409;"	d
AV_RL24	include/libavutil/intreadwrite.h	164;"	d
AV_RL24	include/libavutil/intreadwrite.h	458;"	d
AV_RL32	include/libavutil/intreadwrite.h	176;"	d
AV_RL32	include/libavutil/intreadwrite.h	283;"	d
AV_RL32	include/libavutil/intreadwrite.h	423;"	d
AV_RL48	include/libavutil/intreadwrite.h	188;"	d
AV_RL48	include/libavutil/intreadwrite.h	493;"	d
AV_RL64	include/libavutil/intreadwrite.h	200;"	d
AV_RL64	include/libavutil/intreadwrite.h	325;"	d
AV_RL64	include/libavutil/intreadwrite.h	437;"	d
AV_RL8	include/libavutil/intreadwrite.h	398;"	d
AV_RN	include/libavutil/intreadwrite.h	224;"	d
AV_RN	include/libavutil/intreadwrite.h	229;"	d
AV_RN	include/libavutil/intreadwrite.h	234;"	d
AV_RN	include/libavutil/intreadwrite.h	350;"	d
AV_RN	include/libavutil/intreadwrite.h	353;"	d
AV_RN16	include/libavutil/intreadwrite.h	154;"	d
AV_RN16	include/libavutil/intreadwrite.h	360;"	d
AV_RN16	include/libavutil/intreadwrite.h	92;"	d
AV_RN16A	include/libavutil/intreadwrite.h	522;"	d
AV_RN24	include/libavutil/intreadwrite.h	104;"	d
AV_RN24	include/libavutil/intreadwrite.h	166;"	d
AV_RN32	include/libavutil/intreadwrite.h	116;"	d
AV_RN32	include/libavutil/intreadwrite.h	178;"	d
AV_RN32	include/libavutil/intreadwrite.h	364;"	d
AV_RN32A	include/libavutil/intreadwrite.h	526;"	d
AV_RN48	include/libavutil/intreadwrite.h	128;"	d
AV_RN48	include/libavutil/intreadwrite.h	190;"	d
AV_RN64	include/libavutil/intreadwrite.h	140;"	d
AV_RN64	include/libavutil/intreadwrite.h	202;"	d
AV_RN64	include/libavutil/intreadwrite.h	368;"	d
AV_RN64A	include/libavutil/intreadwrite.h	530;"	d
AV_RNA	include/libavutil/intreadwrite.h	518;"	d
AV_ROUND_DOWN	include/libavutil/mathematics.h	/^    AV_ROUND_DOWN     = 2, \/\/\/< Round toward -infinity.$/;"	e	enum:AVRounding
AV_ROUND_INF	include/libavutil/mathematics.h	/^    AV_ROUND_INF      = 1, \/\/\/< Round away from zero.$/;"	e	enum:AVRounding
AV_ROUND_NEAR_INF	include/libavutil/mathematics.h	/^    AV_ROUND_NEAR_INF = 5, \/\/\/< Round to nearest and halfway cases away from zero.$/;"	e	enum:AVRounding
AV_ROUND_PASS_MINMAX	include/libavutil/mathematics.h	/^    AV_ROUND_PASS_MINMAX = 8192, \/\/\/< Flag to pass INT64_MIN\/MAX through instead of rescaling, this avoids special cases for AV_NOPTS_VALUE$/;"	e	enum:AVRounding
AV_ROUND_UP	include/libavutil/mathematics.h	/^    AV_ROUND_UP       = 3, \/\/\/< Round toward +infinity.$/;"	e	enum:AVRounding
AV_ROUND_ZERO	include/libavutil/mathematics.h	/^    AV_ROUND_ZERO     = 0, \/\/\/< Round toward zero.$/;"	e	enum:AVRounding
AV_SAMPLE_FMT_DBL	include/libavutil/samplefmt.h	/^    AV_SAMPLE_FMT_DBL,         \/\/\/< double$/;"	e	enum:AVSampleFormat
AV_SAMPLE_FMT_DBLP	include/libavutil/samplefmt.h	/^    AV_SAMPLE_FMT_DBLP,        \/\/\/< double, planar$/;"	e	enum:AVSampleFormat
AV_SAMPLE_FMT_FLT	include/libavutil/samplefmt.h	/^    AV_SAMPLE_FMT_FLT,         \/\/\/< float$/;"	e	enum:AVSampleFormat
AV_SAMPLE_FMT_FLTP	include/libavutil/samplefmt.h	/^    AV_SAMPLE_FMT_FLTP,        \/\/\/< float, planar$/;"	e	enum:AVSampleFormat
AV_SAMPLE_FMT_NB	include/libavutil/samplefmt.h	/^    AV_SAMPLE_FMT_NB           \/\/\/< Number of sample formats. DO NOT USE if linking dynamically$/;"	e	enum:AVSampleFormat
AV_SAMPLE_FMT_NONE	include/libavutil/samplefmt.h	/^    AV_SAMPLE_FMT_NONE = -1,$/;"	e	enum:AVSampleFormat
AV_SAMPLE_FMT_S16	include/libavutil/samplefmt.h	/^    AV_SAMPLE_FMT_S16,         \/\/\/< signed 16 bits$/;"	e	enum:AVSampleFormat
AV_SAMPLE_FMT_S16P	include/libavutil/samplefmt.h	/^    AV_SAMPLE_FMT_S16P,        \/\/\/< signed 16 bits, planar$/;"	e	enum:AVSampleFormat
AV_SAMPLE_FMT_S32	include/libavutil/samplefmt.h	/^    AV_SAMPLE_FMT_S32,         \/\/\/< signed 32 bits$/;"	e	enum:AVSampleFormat
AV_SAMPLE_FMT_S32P	include/libavutil/samplefmt.h	/^    AV_SAMPLE_FMT_S32P,        \/\/\/< signed 32 bits, planar$/;"	e	enum:AVSampleFormat
AV_SAMPLE_FMT_U8	include/libavutil/samplefmt.h	/^    AV_SAMPLE_FMT_U8,          \/\/\/< unsigned 8 bits$/;"	e	enum:AVSampleFormat
AV_SAMPLE_FMT_U8P	include/libavutil/samplefmt.h	/^    AV_SAMPLE_FMT_U8P,         \/\/\/< unsigned 8 bits, planar$/;"	e	enum:AVSampleFormat
AV_SIDE_DATA_PARAM_CHANGE_CHANNEL_COUNT	include/libavcodec/avcodec.h	/^    AV_SIDE_DATA_PARAM_CHANGE_CHANNEL_COUNT  = 0x0001,$/;"	e	enum:AVSideDataParamChangeFlags
AV_SIDE_DATA_PARAM_CHANGE_CHANNEL_LAYOUT	include/libavcodec/avcodec.h	/^    AV_SIDE_DATA_PARAM_CHANGE_CHANNEL_LAYOUT = 0x0002,$/;"	e	enum:AVSideDataParamChangeFlags
AV_SIDE_DATA_PARAM_CHANGE_DIMENSIONS	include/libavcodec/avcodec.h	/^    AV_SIDE_DATA_PARAM_CHANGE_DIMENSIONS     = 0x0008,$/;"	e	enum:AVSideDataParamChangeFlags
AV_SIDE_DATA_PARAM_CHANGE_SAMPLE_RATE	include/libavcodec/avcodec.h	/^    AV_SIDE_DATA_PARAM_CHANGE_SAMPLE_RATE    = 0x0004,$/;"	e	enum:AVSideDataParamChangeFlags
AV_STEREO3D_2D	include/libavutil/stereo3d.h	/^    AV_STEREO3D_2D,$/;"	e	enum:AVStereo3DType
AV_STEREO3D_CHECKERBOARD	include/libavutil/stereo3d.h	/^    AV_STEREO3D_CHECKERBOARD,$/;"	e	enum:AVStereo3DType
AV_STEREO3D_COLUMNS	include/libavutil/stereo3d.h	/^    AV_STEREO3D_COLUMNS,$/;"	e	enum:AVStereo3DType
AV_STEREO3D_FLAG_INVERT	include/libavutil/stereo3d.h	114;"	d
AV_STEREO3D_FRAMESEQUENCE	include/libavutil/stereo3d.h	/^    AV_STEREO3D_FRAMESEQUENCE,$/;"	e	enum:AVStereo3DType
AV_STEREO3D_LINES	include/libavutil/stereo3d.h	/^    AV_STEREO3D_LINES,$/;"	e	enum:AVStereo3DType
AV_STEREO3D_SIDEBYSIDE	include/libavutil/stereo3d.h	/^    AV_STEREO3D_SIDEBYSIDE,$/;"	e	enum:AVStereo3DType
AV_STEREO3D_SIDEBYSIDE_QUINCUNX	include/libavutil/stereo3d.h	/^    AV_STEREO3D_SIDEBYSIDE_QUINCUNX,$/;"	e	enum:AVStereo3DType
AV_STEREO3D_TOPBOTTOM	include/libavutil/stereo3d.h	/^    AV_STEREO3D_TOPBOTTOM,$/;"	e	enum:AVStereo3DType
AV_STRINGIFY	include/libavutil/macros.h	36;"	d
AV_SUBTITLE_FLAG_FORCED	include/libavcodec/avcodec.h	3443;"	d
AV_SWAP	include/libavutil/intreadwrite.h	601;"	d
AV_SWAP64	include/libavutil/intreadwrite.h	604;"	d
AV_THREAD_MESSAGE_NONBLOCK	include/libavutil/threadmessage.h	/^    AV_THREAD_MESSAGE_NONBLOCK = 1,$/;"	e	enum:AVThreadMessageFlags
AV_TIMECODE_FLAG_24HOURSMAX	include/libavutil/timecode.h	/^    AV_TIMECODE_FLAG_24HOURSMAX     = 1<<1, \/\/\/< timecode wraps after 24 hours$/;"	e	enum:AVTimecodeFlag
AV_TIMECODE_FLAG_ALLOWNEGATIVE	include/libavutil/timecode.h	/^    AV_TIMECODE_FLAG_ALLOWNEGATIVE  = 1<<2, \/\/\/< negative time values are allowed$/;"	e	enum:AVTimecodeFlag
AV_TIMECODE_FLAG_DROPFRAME	include/libavutil/timecode.h	/^    AV_TIMECODE_FLAG_DROPFRAME      = 1<<0, \/\/\/< timecode is drop frame$/;"	e	enum:AVTimecodeFlag
AV_TIMECODE_STR_SIZE	include/libavutil/timecode.h	33;"	d
AV_TIME_BASE	include/libavutil/avutil.h	247;"	d
AV_TIME_BASE_Q	include/libavutil/avutil.h	253;"	d
AV_TOSTRING	include/libavutil/macros.h	37;"	d
AV_TS_MAX_STRING_SIZE	include/libavutil/timestamp.h	33;"	d
AV_UTF8_FLAG_ACCEPT_ALL	include/libavutil/avstring.h	326;"	d
AV_UTF8_FLAG_ACCEPT_INVALID_BIG_CODES	include/libavutil/avstring.h	321;"	d
AV_UTF8_FLAG_ACCEPT_NON_CHARACTERS	include/libavutil/avstring.h	322;"	d
AV_UTF8_FLAG_ACCEPT_SURROGATES	include/libavutil/avstring.h	323;"	d
AV_UTF8_FLAG_EXCLUDE_XML_INVALID_CONTROL_CODES	include/libavutil/avstring.h	324;"	d
AV_VERSION	include/libavutil/version.h	37;"	d
AV_VERSION_DOT	include/libavutil/version.h	36;"	d
AV_VERSION_INT	include/libavutil/version.h	35;"	d
AV_WB	include/libavutil/intreadwrite.h	385;"	d
AV_WB	include/libavutil/intreadwrite.h	390;"	d
AV_WB16	include/libavutil/intreadwrite.h	245;"	d
AV_WB16	include/libavutil/intreadwrite.h	405;"	d
AV_WB16	include/libavutil/intreadwrite.h	96;"	d
AV_WB24	include/libavutil/intreadwrite.h	108;"	d
AV_WB24	include/libavutil/intreadwrite.h	450;"	d
AV_WB32	include/libavutil/intreadwrite.h	120;"	d
AV_WB32	include/libavutil/intreadwrite.h	273;"	d
AV_WB32	include/libavutil/intreadwrite.h	419;"	d
AV_WB48	include/libavutil/intreadwrite.h	132;"	d
AV_WB48	include/libavutil/intreadwrite.h	481;"	d
AV_WB64	include/libavutil/intreadwrite.h	144;"	d
AV_WB64	include/libavutil/intreadwrite.h	311;"	d
AV_WB64	include/libavutil/intreadwrite.h	433;"	d
AV_WB8	include/libavutil/intreadwrite.h	396;"	d
AV_WL	include/libavutil/intreadwrite.h	387;"	d
AV_WL	include/libavutil/intreadwrite.h	392;"	d
AV_WL16	include/libavutil/intreadwrite.h	158;"	d
AV_WL16	include/libavutil/intreadwrite.h	258;"	d
AV_WL16	include/libavutil/intreadwrite.h	412;"	d
AV_WL24	include/libavutil/intreadwrite.h	170;"	d
AV_WL24	include/libavutil/intreadwrite.h	464;"	d
AV_WL32	include/libavutil/intreadwrite.h	182;"	d
AV_WL32	include/libavutil/intreadwrite.h	290;"	d
AV_WL32	include/libavutil/intreadwrite.h	426;"	d
AV_WL48	include/libavutil/intreadwrite.h	194;"	d
AV_WL48	include/libavutil/intreadwrite.h	502;"	d
AV_WL64	include/libavutil/intreadwrite.h	206;"	d
AV_WL64	include/libavutil/intreadwrite.h	336;"	d
AV_WL64	include/libavutil/intreadwrite.h	440;"	d
AV_WL8	include/libavutil/intreadwrite.h	399;"	d
AV_WN	include/libavutil/intreadwrite.h	225;"	d
AV_WN	include/libavutil/intreadwrite.h	230;"	d
AV_WN	include/libavutil/intreadwrite.h	235;"	d
AV_WN	include/libavutil/intreadwrite.h	351;"	d
AV_WN	include/libavutil/intreadwrite.h	354;"	d
AV_WN16	include/libavutil/intreadwrite.h	160;"	d
AV_WN16	include/libavutil/intreadwrite.h	372;"	d
AV_WN16	include/libavutil/intreadwrite.h	98;"	d
AV_WN16A	include/libavutil/intreadwrite.h	534;"	d
AV_WN24	include/libavutil/intreadwrite.h	110;"	d
AV_WN24	include/libavutil/intreadwrite.h	172;"	d
AV_WN32	include/libavutil/intreadwrite.h	122;"	d
AV_WN32	include/libavutil/intreadwrite.h	184;"	d
AV_WN32	include/libavutil/intreadwrite.h	376;"	d
AV_WN32A	include/libavutil/intreadwrite.h	538;"	d
AV_WN48	include/libavutil/intreadwrite.h	134;"	d
AV_WN48	include/libavutil/intreadwrite.h	196;"	d
AV_WN64	include/libavutil/intreadwrite.h	146;"	d
AV_WN64	include/libavutil/intreadwrite.h	208;"	d
AV_WN64	include/libavutil/intreadwrite.h	380;"	d
AV_WN64A	include/libavutil/intreadwrite.h	542;"	d
AV_WNA	include/libavutil/intreadwrite.h	519;"	d
AV_XVMC_ID	include/libavcodec/xvmc.h	43;"	d
AV_ZERO	include/libavutil/intreadwrite.h	607;"	d
AV_ZERO128	include/libavutil/intreadwrite.h	622;"	d
AV_ZERO16	include/libavutil/intreadwrite.h	610;"	d
AV_ZERO32	include/libavutil/intreadwrite.h	614;"	d
AV_ZERO64	include/libavutil/intreadwrite.h	618;"	d
CODEC_CAP_AUTO_THREADS	include/libavcodec/avcodec.h	872;"	d
CODEC_CAP_CHANNEL_CONF	include/libavcodec/avcodec.h	850;"	d
CODEC_CAP_DELAY	include/libavcodec/avcodec.h	818;"	d
CODEC_CAP_DR1	include/libavcodec/avcodec.h	783;"	d
CODEC_CAP_DRAW_HORIZ_BAND	include/libavcodec/avcodec.h	777;"	d
CODEC_CAP_EXPERIMENTAL	include/libavcodec/avcodec.h	846;"	d
CODEC_CAP_FRAME_THREADS	include/libavcodec/avcodec.h	860;"	d
CODEC_CAP_HWACCEL	include/libavcodec/avcodec.h	793;"	d
CODEC_CAP_HWACCEL_VDPAU	include/libavcodec/avcodec.h	828;"	d
CODEC_CAP_INTRA_ONLY	include/libavcodec/avcodec.h	880;"	d
CODEC_CAP_LOSSLESS	include/libavcodec/avcodec.h	884;"	d
CODEC_CAP_NEG_LINESIZES	include/libavcodec/avcodec.h	855;"	d
CODEC_CAP_PARAM_CHANGE	include/libavcodec/avcodec.h	868;"	d
CODEC_CAP_SLICE_THREADS	include/libavcodec/avcodec.h	864;"	d
CODEC_CAP_SMALL_LAST_FRAME	include/libavcodec/avcodec.h	823;"	d
CODEC_CAP_SUBFRAMES	include/libavcodec/avcodec.h	841;"	d
CODEC_CAP_TRUNCATED	include/libavcodec/avcodec.h	784;"	d
CODEC_CAP_VARIABLE_FRAME_SIZE	include/libavcodec/avcodec.h	876;"	d
CODEC_FLAG2_CHUNKS	include/libavcodec/avcodec.h	765;"	d
CODEC_FLAG2_DROP_FRAME_TIMECODE	include/libavcodec/avcodec.h	762;"	d
CODEC_FLAG2_EXPORT_MVS	include/libavcodec/avcodec.h	767;"	d
CODEC_FLAG2_FAST	include/libavcodec/avcodec.h	759;"	d
CODEC_FLAG2_IGNORE_CROP	include/libavcodec/avcodec.h	763;"	d
CODEC_FLAG2_LOCAL_HEADER	include/libavcodec/avcodec.h	761;"	d
CODEC_FLAG2_NO_OUTPUT	include/libavcodec/avcodec.h	760;"	d
CODEC_FLAG2_SHOW_ALL	include/libavcodec/avcodec.h	766;"	d
CODEC_FLAG2_SKIP_MANUAL	include/libavcodec/avcodec.h	768;"	d
CODEC_FLAG_4MV	include/libavcodec/avcodec.h	707;"	d
CODEC_FLAG_AC_PRED	include/libavcodec/avcodec.h	755;"	d
CODEC_FLAG_BITEXACT	include/libavcodec/avcodec.h	753;"	d
CODEC_FLAG_CLOSED_GOP	include/libavcodec/avcodec.h	758;"	d
CODEC_FLAG_EMU_EDGE	include/libavcodec/avcodec.h	738;"	d
CODEC_FLAG_GLOBAL_HEADER	include/libavcodec/avcodec.h	752;"	d
CODEC_FLAG_GMC	include/libavcodec/avcodec.h	714;"	d
CODEC_FLAG_GRAY	include/libavcodec/avcodec.h	732;"	d
CODEC_FLAG_INPUT_PRESERVED	include/libavcodec/avcodec.h	728;"	d
CODEC_FLAG_INTERLACED_DCT	include/libavcodec/avcodec.h	750;"	d
CODEC_FLAG_INTERLACED_ME	include/libavcodec/avcodec.h	757;"	d
CODEC_FLAG_LOOP_FILTER	include/libavcodec/avcodec.h	756;"	d
CODEC_FLAG_LOW_DELAY	include/libavcodec/avcodec.h	751;"	d
CODEC_FLAG_MV0	include/libavcodec/avcodec.h	721;"	d
CODEC_FLAG_NORMALIZE_AQP	include/libavcodec/avcodec.h	748;"	d
CODEC_FLAG_OUTPUT_CORRUPT	include/libavcodec/avcodec.h	708;"	d
CODEC_FLAG_PASS1	include/libavcodec/avcodec.h	730;"	d
CODEC_FLAG_PASS2	include/libavcodec/avcodec.h	731;"	d
CODEC_FLAG_PSNR	include/libavcodec/avcodec.h	740;"	d
CODEC_FLAG_QPEL	include/libavcodec/avcodec.h	709;"	d
CODEC_FLAG_QSCALE	include/libavcodec/avcodec.h	706;"	d
CODEC_FLAG_TRUNCATED	include/libavcodec/avcodec.h	741;"	d
CODEC_FLAG_UNALIGNED	include/libavcodec/avcodec.h	705;"	d
DCTContext	include/libavcodec/avfft.h	/^typedef struct DCTContext DCTContext;$/;"	t	typeref:struct:DCTContext
DCTTransformType	include/libavcodec/avfft.h	/^enum DCTTransformType {$/;"	g
DCT_I	include/libavcodec/avfft.h	/^    DCT_I,$/;"	e	enum:DCTTransformType
DCT_II	include/libavcodec/avfft.h	/^    DCT_II = 0,$/;"	e	enum:DCTTransformType
DCT_III	include/libavcodec/avfft.h	/^    DCT_III,$/;"	e	enum:DCTTransformType
DECLARE_ALIGNED	include/libavutil/mem.h	43;"	d
DECLARE_ALIGNED	include/libavutil/mem.h	46;"	d
DECLARE_ALIGNED	include/libavutil/mem.h	53;"	d
DECLARE_ALIGNED	include/libavutil/mem.h	56;"	d
DECLARE_ALIGNED	include/libavutil/mem.h	59;"	d
DECLARE_ASM_CONST	include/libavutil/mem.h	44;"	d
DECLARE_ASM_CONST	include/libavutil/mem.h	49;"	d
DECLARE_ASM_CONST	include/libavutil/mem.h	54;"	d
DECLARE_ASM_CONST	include/libavutil/mem.h	57;"	d
DECLARE_ASM_CONST	include/libavutil/mem.h	60;"	d
DFT_C2R	include/libavcodec/avfft.h	/^    DFT_C2R,$/;"	e	enum:RDFTransformType
DFT_R2C	include/libavcodec/avfft.h	/^    DFT_R2C,$/;"	e	enum:RDFTransformType
DST_I	include/libavcodec/avfft.h	/^    DST_I,$/;"	e	enum:DCTTransformType
DV_PROFILE_BYTES	include/libavcodec/dv_profile.h	30;"	d
ERR_INIT	HLSReader.h	/^    ERR_INIT,$/;"	e	enum:_status_t
ERR_NONE	HLSReader.h	/^    ERR_NONE = 0,$/;"	e	enum:_status_t
ERR_OUT_OF_MEM	HLSReader.h	/^    ERR_OUT_OF_MEM$/;"	e	enum:_status_t
FFABS	include/libavutil/common.h	61;"	d
FFALIGN	include/libavutil/common.h	71;"	d
FFERRTAG	include/libavutil/error.h	47;"	d
FFMAX	include/libavutil/common.h	64;"	d
FFMAX3	include/libavutil/common.h	65;"	d
FFMIN	include/libavutil/common.h	66;"	d
FFMIN3	include/libavutil/common.h	67;"	d
FFMPEG_VERSION	include/libavutil/ffversion.h	3;"	d
FFSIGN	include/libavutil/common.h	62;"	d
FFSWAP	include/libavutil/common.h	69;"	d
FFTComplex	include/libavcodec/avfft.h	/^typedef struct FFTComplex {$/;"	s
FFTComplex	include/libavcodec/avfft.h	/^} FFTComplex;$/;"	t	typeref:struct:FFTComplex
FFTContext	include/libavcodec/avfft.h	/^typedef struct FFTContext FFTContext;$/;"	t	typeref:struct:FFTContext
FFTSample	include/libavcodec/avfft.h	/^typedef float FFTSample;$/;"	t
FFUDIV	include/libavutil/common.h	59;"	d
FFUMOD	include/libavutil/common.h	60;"	d
FF_API_AC_VLC	include/libavcodec/version.h	103;"	d
FF_API_AFD	include/libavcodec/version.h	169;"	d
FF_API_ARCH_ALPHA	include/libavcodec/version.h	118;"	d
FF_API_ARCH_BFIN	include/libswscale/version.h	53;"	d
FF_API_ARCH_SH4	include/libavcodec/version.h	142;"	d
FF_API_ARCH_SPARC	include/libavcodec/version.h	145;"	d
FF_API_ASPECT_EXTENDED	include/libavcodec/version.h	109;"	d
FF_API_AUDIOCONVERT	include/libavutil/version.h	99;"	d
FF_API_AUDIOENC_DELAY	include/libavcodec/version.h	179;"	d
FF_API_AUDIO_CONVERT	include/libavcodec/version.h	67;"	d
FF_API_AVCODEC_RESAMPLE	include/libavcodec/version.h	70;"	d
FF_API_AVCTX_TIMEBASE	include/libavcodec/version.h	182;"	d
FF_API_AVFILTERBUFFER	include/libavfilter/version.h	59;"	d
FF_API_AVFILTERPAD_PUBLIC	include/libavfilter/version.h	53;"	d
FF_API_AVFILTER_INIT_FILTER	include/libavfilter/version.h	68;"	d
FF_API_AVFILTER_OPEN	include/libavfilter/version.h	65;"	d
FF_API_AVFRAME_LAVC	include/libavutil/version.h	108;"	d
FF_API_AV_REVERSE	include/libavutil/version.h	96;"	d
FF_API_BUFS_VDPAU	include/libavcodec/version.h	91;"	d
FF_API_CAP_VDPAU	include/libavcodec/version.h	88;"	d
FF_API_CODEC_ID	include/libavcodec/version.h	64;"	d
FF_API_CODEC_NAME	include/libavcodec/version.h	166;"	d
FF_API_CODEC_PKT	include/libavcodec/version.h	115;"	d
FF_API_CONTEXT_SIZE	include/libavutil/version.h	90;"	d
FF_API_CPU_FLAG_MMX2	include/libavutil/version.h	102;"	d
FF_API_DEBUG_MV	include/libavcodec/version.h	100;"	d
FF_API_DEINTERLACE	include/libavcodec/version.h	73;"	d
FF_API_DESTRUCT_PACKET	include/libavcodec/version.h	76;"	d
FF_API_DV_FRAME_PROFILE	include/libavcodec/version.h	176;"	d
FF_API_EMU_EDGE	include/libavcodec/version.h	139;"	d
FF_API_ERROR_RATE	include/libavcodec/version.h	124;"	d
FF_API_FOO_COUNT	include/libavfilter/version.h	56;"	d
FF_API_GET_BUFFER	include/libavcodec/version.h	79;"	d
FF_API_GET_CHANNEL_LAYOUT_COMPAT	include/libavutil/version.h	114;"	d
FF_API_GMC	include/libavcodec/version.h	160;"	d
FF_API_IDCT_XVIDMMX	include/libavcodec/version.h	151;"	d
FF_API_INPUT_PRESERVED	include/libavcodec/version.h	154;"	d
FF_API_LAVF_BITEXACT	include/libavformat/version.h	52;"	d
FF_API_LAVF_CODEC_TB	include/libavformat/version.h	58;"	d
FF_API_LAVF_FRAC	include/libavformat/version.h	55;"	d
FF_API_LLS_PRIVATE	include/libavutil/version.h	105;"	d
FF_API_LOWRES	include/libavcodec/version.h	85;"	d
FF_API_MAX_BFRAMES	include/libavcodec/version.h	133;"	d
FF_API_MB_TYPE	include/libavcodec/version.h	130;"	d
FF_API_MISSING_SAMPLE	include/libavcodec/version.h	82;"	d
FF_API_MPV_OPT	include/libavcodec/version.h	185;"	d
FF_API_MV0	include/libavcodec/version.h	163;"	d
FF_API_NEG_LINESIZES	include/libavcodec/version.h	136;"	d
FF_API_NOCONST_GET_NAME	include/libavfilter/version.h	77;"	d
FF_API_NORMALIZE_AQP	include/libavcodec/version.h	157;"	d
FF_API_OLD_AVOPTIONS	include/libavutil/version.h	84;"	d
FF_API_OLD_DECODE_AUDIO	include/libavcodec/version.h	55;"	d
FF_API_OLD_ENCODE_AUDIO	include/libavcodec/version.h	58;"	d
FF_API_OLD_ENCODE_VIDEO	include/libavcodec/version.h	61;"	d
FF_API_OLD_FILTER_OPTS	include/libavfilter/version.h	62;"	d
FF_API_OLD_FILTER_REGISTER	include/libavfilter/version.h	71;"	d
FF_API_OLD_GRAPH_PARSE	include/libavfilter/version.h	74;"	d
FF_API_OLD_MSMPEG4	include/libavcodec/version.h	106;"	d
FF_API_OPT_TYPE_METADATA	include/libavutil/version.h	120;"	d
FF_API_PIX_FMT	include/libavutil/version.h	87;"	d
FF_API_PIX_FMT_DESC	include/libavutil/version.h	93;"	d
FF_API_QSCALE_TYPE	include/libavcodec/version.h	127;"	d
FF_API_REQUEST_CHANNELS	include/libavcodec/version.h	52;"	d
FF_API_RESAMPLE_CLOSE_OPEN	include/libavresample/version.h	51;"	d
FF_API_R_FRAME_RATE	include/libavformat/version.h	65;"	d
FF_API_SET_DIMENSIONS	include/libavcodec/version.h	97;"	d
FF_API_SWS_CPU_CAPS	include/libswscale/version.h	50;"	d
FF_API_THREAD_OPAQUE	include/libavcodec/version.h	112;"	d
FF_API_UNUSED_MEMBERS	include/libavcodec/version.h	148;"	d
FF_API_URL_FEOF	include/libavformat/version.h	61;"	d
FF_API_VDPAU	include/libavutil/version.h	111;"	d
FF_API_VISMV	include/libavcodec/version.h	173;"	d
FF_API_VOXWARE	include/libavcodec/version.h	94;"	d
FF_API_XVMC	include/libavcodec/version.h	121;"	d
FF_API_XVMC	include/libavutil/version.h	117;"	d
FF_ARRAY_ELEMS	include/libavutil/common.h	70;"	d
FF_ASPECT_EXTENDED	include/libavcodec/avcodec.h	1415;"	d
FF_BUFFER_HINTS_PRESERVE	include/libavcodec/avcodec.h	956;"	d
FF_BUFFER_HINTS_READABLE	include/libavcodec/avcodec.h	955;"	d
FF_BUFFER_HINTS_REUSABLE	include/libavcodec/avcodec.h	957;"	d
FF_BUFFER_HINTS_VALID	include/libavcodec/avcodec.h	954;"	d
FF_BUFFER_TYPE_COPY	include/libavcodec/avcodec.h	952;"	d
FF_BUFFER_TYPE_INTERNAL	include/libavcodec/avcodec.h	949;"	d
FF_BUFFER_TYPE_SHARED	include/libavcodec/avcodec.h	951;"	d
FF_BUFFER_TYPE_USER	include/libavcodec/avcodec.h	950;"	d
FF_BUG_AC_VLC	include/libavcodec/avcodec.h	2507;"	d
FF_BUG_AMV	include/libavcodec/avcodec.h	2505;"	d
FF_BUG_AUTODETECT	include/libavcodec/avcodec.h	2498;"	d
FF_BUG_DC_CLIP	include/libavcodec/avcodec.h	2515;"	d
FF_BUG_DIRECT_BLOCKSIZE	include/libavcodec/avcodec.h	2512;"	d
FF_BUG_EDGE	include/libavcodec/avcodec.h	2513;"	d
FF_BUG_HPEL_CHROMA	include/libavcodec/avcodec.h	2514;"	d
FF_BUG_MS	include/libavcodec/avcodec.h	2516;"	d
FF_BUG_NO_PADDING	include/libavcodec/avcodec.h	2504;"	d
FF_BUG_OLD_MSMPEG4	include/libavcodec/avcodec.h	2500;"	d
FF_BUG_QPEL_CHROMA	include/libavcodec/avcodec.h	2509;"	d
FF_BUG_QPEL_CHROMA2	include/libavcodec/avcodec.h	2511;"	d
FF_BUG_STD_QPEL	include/libavcodec/avcodec.h	2510;"	d
FF_BUG_TRUNCATED	include/libavcodec/avcodec.h	2517;"	d
FF_BUG_UMP4	include/libavcodec/avcodec.h	2503;"	d
FF_BUG_XVID_ILACE	include/libavcodec/avcodec.h	2502;"	d
FF_CEIL_RSHIFT	include/libavutil/common.h	57;"	d
FF_CMP_BIT	include/libavcodec/avcodec.h	1642;"	d
FF_CMP_CHROMA	include/libavcodec/avcodec.h	1652;"	d
FF_CMP_DCT	include/libavcodec/avcodec.h	1640;"	d
FF_CMP_DCT264	include/libavcodec/avcodec.h	1651;"	d
FF_CMP_DCTMAX	include/libavcodec/avcodec.h	1650;"	d
FF_CMP_NSSE	include/libavcodec/avcodec.h	1647;"	d
FF_CMP_PSNR	include/libavcodec/avcodec.h	1641;"	d
FF_CMP_RD	include/libavcodec/avcodec.h	1643;"	d
FF_CMP_SAD	include/libavcodec/avcodec.h	1637;"	d
FF_CMP_SATD	include/libavcodec/avcodec.h	1639;"	d
FF_CMP_SSE	include/libavcodec/avcodec.h	1638;"	d
FF_CMP_VSAD	include/libavcodec/avcodec.h	1645;"	d
FF_CMP_VSSE	include/libavcodec/avcodec.h	1646;"	d
FF_CMP_W53	include/libavcodec/avcodec.h	1648;"	d
FF_CMP_W97	include/libavcodec/avcodec.h	1649;"	d
FF_CMP_ZERO	include/libavcodec/avcodec.h	1644;"	d
FF_CODER_TYPE_AC	include/libavcodec/avcodec.h	2357;"	d
FF_CODER_TYPE_DEFLATE	include/libavcodec/avcodec.h	2361;"	d
FF_CODER_TYPE_RAW	include/libavcodec/avcodec.h	2358;"	d
FF_CODER_TYPE_RLE	include/libavcodec/avcodec.h	2359;"	d
FF_CODER_TYPE_VLC	include/libavcodec/avcodec.h	2356;"	d
FF_COMPLIANCE_EXPERIMENTAL	include/libavcodec/avcodec.h	2536;"	d
FF_COMPLIANCE_NORMAL	include/libavcodec/avcodec.h	2534;"	d
FF_COMPLIANCE_STRICT	include/libavcodec/avcodec.h	2533;"	d
FF_COMPLIANCE_UNOFFICIAL	include/libavcodec/avcodec.h	2535;"	d
FF_COMPLIANCE_VERY_STRICT	include/libavcodec/avcodec.h	2532;"	d
FF_COMPRESSION_DEFAULT	include/libavcodec/avcodec.h	1316;"	d
FF_CONST_AVUTIL55	include/libavutil/version.h	125;"	d
FF_CONST_AVUTIL55	include/libavutil/version.h	127;"	d
FF_DCT_ALTIVEC	include/libavcodec/avcodec.h	2665;"	d
FF_DCT_AUTO	include/libavcodec/avcodec.h	2659;"	d
FF_DCT_FAAN	include/libavcodec/avcodec.h	2666;"	d
FF_DCT_FASTINT	include/libavcodec/avcodec.h	2660;"	d
FF_DCT_INT	include/libavcodec/avcodec.h	2662;"	d
FF_DCT_MMX	include/libavcodec/avcodec.h	2664;"	d
FF_DEBUG_BITSTREAM	include/libavcodec/avcodec.h	2556;"	d
FF_DEBUG_BUFFERS	include/libavcodec/avcodec.h	2578;"	d
FF_DEBUG_BUGS	include/libavcodec/avcodec.h	2573;"	d
FF_DEBUG_DCT_COEFF	include/libavcodec/avcodec.h	2565;"	d
FF_DEBUG_ER	include/libavcodec/avcodec.h	2571;"	d
FF_DEBUG_MB_TYPE	include/libavcodec/avcodec.h	2557;"	d
FF_DEBUG_MMCO	include/libavcodec/avcodec.h	2572;"	d
FF_DEBUG_MV	include/libavcodec/avcodec.h	2563;"	d
FF_DEBUG_NOMC	include/libavcodec/avcodec.h	2580;"	d
FF_DEBUG_PICT_INFO	include/libavcodec/avcodec.h	2554;"	d
FF_DEBUG_PTS	include/libavcodec/avcodec.h	2569;"	d
FF_DEBUG_QP	include/libavcodec/avcodec.h	2558;"	d
FF_DEBUG_RC	include/libavcodec/avcodec.h	2555;"	d
FF_DEBUG_SKIP	include/libavcodec/avcodec.h	2566;"	d
FF_DEBUG_STARTCODE	include/libavcodec/avcodec.h	2567;"	d
FF_DEBUG_THREADS	include/libavcodec/avcodec.h	2579;"	d
FF_DEBUG_VIS_MB_TYPE	include/libavcodec/avcodec.h	2576;"	d
FF_DEBUG_VIS_MV_B_BACK	include/libavcodec/avcodec.h	2592;"	d
FF_DEBUG_VIS_MV_B_BACK	include/libavcodec/avcodec.h	3096;"	d
FF_DEBUG_VIS_MV_B_FOR	include/libavcodec/avcodec.h	2591;"	d
FF_DEBUG_VIS_MV_B_FOR	include/libavcodec/avcodec.h	3095;"	d
FF_DEBUG_VIS_MV_P_FOR	include/libavcodec/avcodec.h	2590;"	d
FF_DEBUG_VIS_MV_P_FOR	include/libavcodec/avcodec.h	3094;"	d
FF_DEBUG_VIS_QP	include/libavcodec/avcodec.h	2575;"	d
FF_DECODE_ERROR_INVALID_BITSTREAM	include/libavutil/frame.h	539;"	d
FF_DECODE_ERROR_MISSING_REFERENCE	include/libavutil/frame.h	540;"	d
FF_DEFAULT_QUANT_BIAS	include/libavcodec/avcodec.h	1731;"	d
FF_DTG_AFD_14_9	include/libavcodec/avcodec.h	1710;"	d
FF_DTG_AFD_16_9	include/libavcodec/avcodec.h	1709;"	d
FF_DTG_AFD_16_9_SP_14_9	include/libavcodec/avcodec.h	1712;"	d
FF_DTG_AFD_4_3	include/libavcodec/avcodec.h	1708;"	d
FF_DTG_AFD_4_3_SP_14_9	include/libavcodec/avcodec.h	1711;"	d
FF_DTG_AFD_SAME	include/libavcodec/avcodec.h	1707;"	d
FF_DTG_AFD_SP_4_3	include/libavcodec/avcodec.h	1713;"	d
FF_DXVA2_WORKAROUND_INTEL_CLEARVIDEO	include/libavcodec/dxva2.h	49;"	d
FF_DXVA2_WORKAROUND_SCALING_LIST_ZIGZAG	include/libavcodec/dxva2.h	48;"	d
FF_EC_DEBLOCK	include/libavcodec/avcodec.h	2545;"	d
FF_EC_FAVOR_INTER	include/libavcodec/avcodec.h	2546;"	d
FF_EC_GUESS_MVS	include/libavcodec/avcodec.h	2544;"	d
FF_FDEBUG_TS	include/libavformat/avformat.h	1453;"	d
FF_IDCT_ALTIVEC	include/libavcodec/avcodec.h	2679;"	d
FF_IDCT_ARM	include/libavcodec/avcodec.h	2678;"	d
FF_IDCT_AUTO	include/libavcodec/avcodec.h	2674;"	d
FF_IDCT_FAAN	include/libavcodec/avcodec.h	2696;"	d
FF_IDCT_INT	include/libavcodec/avcodec.h	2675;"	d
FF_IDCT_IPP	include/libavcodec/avcodec.h	2685;"	d
FF_IDCT_SH4	include/libavcodec/avcodec.h	2681;"	d
FF_IDCT_SIMPLE	include/libavcodec/avcodec.h	2676;"	d
FF_IDCT_SIMPLEALPHA	include/libavcodec/avcodec.h	2699;"	d
FF_IDCT_SIMPLEARM	include/libavcodec/avcodec.h	2683;"	d
FF_IDCT_SIMPLEARMV5TE	include/libavcodec/avcodec.h	2691;"	d
FF_IDCT_SIMPLEARMV6	include/libavcodec/avcodec.h	2692;"	d
FF_IDCT_SIMPLEAUTO	include/libavcodec/avcodec.h	2701;"	d
FF_IDCT_SIMPLEMMX	include/libavcodec/avcodec.h	2677;"	d
FF_IDCT_SIMPLENEON	include/libavcodec/avcodec.h	2697;"	d
FF_IDCT_SIMPLEVIS	include/libavcodec/avcodec.h	2694;"	d
FF_IDCT_XVID	include/libavcodec/avcodec.h	2687;"	d
FF_IDCT_XVIDMMX	include/libavcodec/avcodec.h	2689;"	d
FF_INPUT_BUFFER_PADDING_SIZE	include/libavcodec/avcodec.h	624;"	d
FF_LAMBDA_MAX	include/libavutil/avutil.h	221;"	d
FF_LAMBDA_SCALE	include/libavutil/avutil.h	219;"	d
FF_LAMBDA_SHIFT	include/libavutil/avutil.h	218;"	d
FF_LEVEL_UNKNOWN	include/libavcodec/avcodec.h	2908;"	d
FF_LOSS_ALPHA	include/libavutil/pixdesc.h	313;"	d
FF_LOSS_CHROMA	include/libavutil/pixdesc.h	315;"	d
FF_LOSS_COLORQUANT	include/libavutil/pixdesc.h	314;"	d
FF_LOSS_COLORSPACE	include/libavutil/pixdesc.h	312;"	d
FF_LOSS_DEPTH	include/libavutil/pixdesc.h	311;"	d
FF_LOSS_RESOLUTION	include/libavutil/pixdesc.h	310;"	d
FF_MAX_B_FRAMES	include/libavcodec/avcodec.h	693;"	d
FF_MB_DECISION_BITS	include/libavcodec/avcodec.h	1767;"	d
FF_MB_DECISION_RD	include/libavcodec/avcodec.h	1768;"	d
FF_MB_DECISION_SIMPLE	include/libavcodec/avcodec.h	1766;"	d
FF_MIN_BUFFER_SIZE	include/libavcodec/avcodec.h	631;"	d
FF_OPT_TYPE_BINARY	include/libavutil/opt.h	/^    FF_OPT_TYPE_BINARY,  \/\/\/< offset must point to a pointer immediately followed by an int for the length$/;"	e	enum:AVOptionType
FF_OPT_TYPE_CONST	include/libavutil/opt.h	/^    FF_OPT_TYPE_CONST=128,$/;"	e	enum:AVOptionType
FF_OPT_TYPE_DOUBLE	include/libavutil/opt.h	/^    FF_OPT_TYPE_DOUBLE,$/;"	e	enum:AVOptionType
FF_OPT_TYPE_FLAGS	include/libavutil/opt.h	/^    FF_OPT_TYPE_FLAGS = 0,$/;"	e	enum:AVOptionType
FF_OPT_TYPE_FLOAT	include/libavutil/opt.h	/^    FF_OPT_TYPE_FLOAT,$/;"	e	enum:AVOptionType
FF_OPT_TYPE_INT	include/libavutil/opt.h	/^    FF_OPT_TYPE_INT,$/;"	e	enum:AVOptionType
FF_OPT_TYPE_INT64	include/libavutil/opt.h	/^    FF_OPT_TYPE_INT64,$/;"	e	enum:AVOptionType
FF_OPT_TYPE_RATIONAL	include/libavutil/opt.h	/^    FF_OPT_TYPE_RATIONAL,$/;"	e	enum:AVOptionType
FF_OPT_TYPE_STRING	include/libavutil/opt.h	/^    FF_OPT_TYPE_STRING,$/;"	e	enum:AVOptionType
FF_PAD_STRUCTURE	include/libavutil/bprint.h	34;"	d
FF_PRED_LEFT	include/libavcodec/avcodec.h	1593;"	d
FF_PRED_MEDIAN	include/libavcodec/avcodec.h	1595;"	d
FF_PRED_PLANE	include/libavcodec/avcodec.h	1594;"	d
FF_PROFILE_AAC_ELD	include/libavcodec/avcodec.h	2834;"	d
FF_PROFILE_AAC_HE	include/libavcodec/avcodec.h	2831;"	d
FF_PROFILE_AAC_HE_V2	include/libavcodec/avcodec.h	2832;"	d
FF_PROFILE_AAC_LD	include/libavcodec/avcodec.h	2833;"	d
FF_PROFILE_AAC_LOW	include/libavcodec/avcodec.h	2828;"	d
FF_PROFILE_AAC_LTP	include/libavcodec/avcodec.h	2830;"	d
FF_PROFILE_AAC_MAIN	include/libavcodec/avcodec.h	2827;"	d
FF_PROFILE_AAC_SSR	include/libavcodec/avcodec.h	2829;"	d
FF_PROFILE_DTS	include/libavcodec/avcodec.h	2838;"	d
FF_PROFILE_DTS_96_24	include/libavcodec/avcodec.h	2840;"	d
FF_PROFILE_DTS_ES	include/libavcodec/avcodec.h	2839;"	d
FF_PROFILE_DTS_HD_HRA	include/libavcodec/avcodec.h	2841;"	d
FF_PROFILE_DTS_HD_MA	include/libavcodec/avcodec.h	2842;"	d
FF_PROFILE_H264_BASELINE	include/libavcodec/avcodec.h	2854;"	d
FF_PROFILE_H264_CAVLC_444	include/libavcodec/avcodec.h	2866;"	d
FF_PROFILE_H264_CONSTRAINED	include/libavcodec/avcodec.h	2851;"	d
FF_PROFILE_H264_CONSTRAINED_BASELINE	include/libavcodec/avcodec.h	2855;"	d
FF_PROFILE_H264_EXTENDED	include/libavcodec/avcodec.h	2857;"	d
FF_PROFILE_H264_HIGH	include/libavcodec/avcodec.h	2858;"	d
FF_PROFILE_H264_HIGH_10	include/libavcodec/avcodec.h	2859;"	d
FF_PROFILE_H264_HIGH_10_INTRA	include/libavcodec/avcodec.h	2860;"	d
FF_PROFILE_H264_HIGH_422	include/libavcodec/avcodec.h	2861;"	d
FF_PROFILE_H264_HIGH_422_INTRA	include/libavcodec/avcodec.h	2862;"	d
FF_PROFILE_H264_HIGH_444	include/libavcodec/avcodec.h	2863;"	d
FF_PROFILE_H264_HIGH_444_INTRA	include/libavcodec/avcodec.h	2865;"	d
FF_PROFILE_H264_HIGH_444_PREDICTIVE	include/libavcodec/avcodec.h	2864;"	d
FF_PROFILE_H264_INTRA	include/libavcodec/avcodec.h	2852;"	d
FF_PROFILE_H264_MAIN	include/libavcodec/avcodec.h	2856;"	d
FF_PROFILE_HEVC_MAIN	include/libavcodec/avcodec.h	2897;"	d
FF_PROFILE_HEVC_MAIN_10	include/libavcodec/avcodec.h	2898;"	d
FF_PROFILE_HEVC_MAIN_STILL_PICTURE	include/libavcodec/avcodec.h	2899;"	d
FF_PROFILE_HEVC_REXT	include/libavcodec/avcodec.h	2900;"	d
FF_PROFILE_JPEG2000_CSTREAM_NO_RESTRICTION	include/libavcodec/avcodec.h	2892;"	d
FF_PROFILE_JPEG2000_CSTREAM_RESTRICTION_0	include/libavcodec/avcodec.h	2890;"	d
FF_PROFILE_JPEG2000_CSTREAM_RESTRICTION_1	include/libavcodec/avcodec.h	2891;"	d
FF_PROFILE_JPEG2000_DCINEMA_2K	include/libavcodec/avcodec.h	2893;"	d
FF_PROFILE_JPEG2000_DCINEMA_4K	include/libavcodec/avcodec.h	2894;"	d
FF_PROFILE_MPEG2_422	include/libavcodec/avcodec.h	2844;"	d
FF_PROFILE_MPEG2_AAC_HE	include/libavcodec/avcodec.h	2836;"	d
FF_PROFILE_MPEG2_AAC_LOW	include/libavcodec/avcodec.h	2835;"	d
FF_PROFILE_MPEG2_HIGH	include/libavcodec/avcodec.h	2845;"	d
FF_PROFILE_MPEG2_MAIN	include/libavcodec/avcodec.h	2848;"	d
FF_PROFILE_MPEG2_SIMPLE	include/libavcodec/avcodec.h	2849;"	d
FF_PROFILE_MPEG2_SNR_SCALABLE	include/libavcodec/avcodec.h	2847;"	d
FF_PROFILE_MPEG2_SS	include/libavcodec/avcodec.h	2846;"	d
FF_PROFILE_MPEG4_ADVANCED_CODING	include/libavcodec/avcodec.h	2884;"	d
FF_PROFILE_MPEG4_ADVANCED_CORE	include/libavcodec/avcodec.h	2885;"	d
FF_PROFILE_MPEG4_ADVANCED_REAL_TIME	include/libavcodec/avcodec.h	2882;"	d
FF_PROFILE_MPEG4_ADVANCED_SCALABLE_TEXTURE	include/libavcodec/avcodec.h	2886;"	d
FF_PROFILE_MPEG4_ADVANCED_SIMPLE	include/libavcodec/avcodec.h	2888;"	d
FF_PROFILE_MPEG4_BASIC_ANIMATED_TEXTURE	include/libavcodec/avcodec.h	2880;"	d
FF_PROFILE_MPEG4_CORE	include/libavcodec/avcodec.h	2875;"	d
FF_PROFILE_MPEG4_CORE_SCALABLE	include/libavcodec/avcodec.h	2883;"	d
FF_PROFILE_MPEG4_HYBRID	include/libavcodec/avcodec.h	2881;"	d
FF_PROFILE_MPEG4_MAIN	include/libavcodec/avcodec.h	2876;"	d
FF_PROFILE_MPEG4_N_BIT	include/libavcodec/avcodec.h	2877;"	d
FF_PROFILE_MPEG4_SCALABLE_TEXTURE	include/libavcodec/avcodec.h	2878;"	d
FF_PROFILE_MPEG4_SIMPLE	include/libavcodec/avcodec.h	2873;"	d
FF_PROFILE_MPEG4_SIMPLE_FACE_ANIMATION	include/libavcodec/avcodec.h	2879;"	d
FF_PROFILE_MPEG4_SIMPLE_SCALABLE	include/libavcodec/avcodec.h	2874;"	d
FF_PROFILE_MPEG4_SIMPLE_STUDIO	include/libavcodec/avcodec.h	2887;"	d
FF_PROFILE_RESERVED	include/libavcodec/avcodec.h	2825;"	d
FF_PROFILE_UNKNOWN	include/libavcodec/avcodec.h	2824;"	d
FF_PROFILE_VC1_ADVANCED	include/libavcodec/avcodec.h	2871;"	d
FF_PROFILE_VC1_COMPLEX	include/libavcodec/avcodec.h	2870;"	d
FF_PROFILE_VC1_MAIN	include/libavcodec/avcodec.h	2869;"	d
FF_PROFILE_VC1_SIMPLE	include/libavcodec/avcodec.h	2868;"	d
FF_QP2LAMBDA	include/libavutil/avutil.h	220;"	d
FF_QSCALE_TYPE_H264	include/libavcodec/avcodec.h	944;"	d
FF_QSCALE_TYPE_MPEG1	include/libavcodec/avcodec.h	942;"	d
FF_QSCALE_TYPE_MPEG2	include/libavcodec/avcodec.h	943;"	d
FF_QSCALE_TYPE_VP56	include/libavcodec/avcodec.h	945;"	d
FF_QUALITY_SCALE	include/libavutil/avutil.h	223;"	d
FF_RC_STRATEGY_XVID	include/libavcodec/avcodec.h	1504;"	d
FF_SUB_CHARENC_MODE_AUTOMATIC	include/libavcodec/avcodec.h	3061;"	d
FF_SUB_CHARENC_MODE_DO_NOTHING	include/libavcodec/avcodec.h	3060;"	d
FF_SUB_CHARENC_MODE_PRE_DECODER	include/libavcodec/avcodec.h	3062;"	d
FF_THREAD_FRAME	include/libavcodec/avcodec.h	2752;"	d
FF_THREAD_SLICE	include/libavcodec/avcodec.h	2753;"	d
FF_VDPAU_STATE_USED_FOR_REFERENCE	include/libavcodec/vdpau.h	200;"	d
FF_VDPAU_STATE_USED_FOR_RENDER	include/libavcodec/vdpau.h	194;"	d
GET_UTF16	include/libavutil/common.h	334;"	d
GET_UTF8	include/libavutil/common.h	309;"	d
HLSExtractor	HLSExtractor.cpp	/^HLSExtractor::HLSExtractor(const sp<DataSource> &source)$/;"	f	class:android::HLSExtractor
HLSExtractor	HLSExtractor.h	/^struct HLSExtractor : public MediaExtractor {$/;"	s	namespace:android
HLSReader	HLSReader.h	/^typedef struct HLSReader {$/;"	s
HLSReader	HLSReader.h	/^} HLSReader;$/;"	t	typeref:struct:HLSReader
HLSSource	HLSExtractor.cpp	/^HLSSource::HLSSource($/;"	f	class:android::HLSSource
HLSSource	HLSExtractor.cpp	/^struct HLSSource : public MediaSource {$/;"	s	namespace:android	file:
IDFT_C2R	include/libavcodec/avfft.h	/^    IDFT_C2R,$/;"	e	enum:RDFTransformType
IDFT_R2C	include/libavcodec/avfft.h	/^    IDFT_R2C,$/;"	e	enum:RDFTransformType
INFINITY	include/libavutil/mathematics.h	61;"	d
LIBAVCODEC_BUILD	include/libavcodec/version.h	41;"	d
LIBAVCODEC_IDENT	include/libavcodec/version.h	43;"	d
LIBAVCODEC_VERSION	include/libavcodec/version.h	38;"	d
LIBAVCODEC_VERSION_INT	include/libavcodec/version.h	35;"	d
LIBAVCODEC_VERSION_MAJOR	include/libavcodec/version.h	31;"	d
LIBAVCODEC_VERSION_MICRO	include/libavcodec/version.h	33;"	d
LIBAVCODEC_VERSION_MINOR	include/libavcodec/version.h	32;"	d
LIBAVDEVICE_BUILD	include/libavdevice/version.h	40;"	d
LIBAVDEVICE_IDENT	include/libavdevice/version.h	42;"	d
LIBAVDEVICE_VERSION	include/libavdevice/version.h	37;"	d
LIBAVDEVICE_VERSION_INT	include/libavdevice/version.h	34;"	d
LIBAVDEVICE_VERSION_MAJOR	include/libavdevice/version.h	30;"	d
LIBAVDEVICE_VERSION_MICRO	include/libavdevice/version.h	32;"	d
LIBAVDEVICE_VERSION_MINOR	include/libavdevice/version.h	31;"	d
LIBAVFILTER_BUILD	include/libavfilter/version.h	42;"	d
LIBAVFILTER_IDENT	include/libavfilter/version.h	44;"	d
LIBAVFILTER_VERSION	include/libavfilter/version.h	39;"	d
LIBAVFILTER_VERSION_INT	include/libavfilter/version.h	36;"	d
LIBAVFILTER_VERSION_MAJOR	include/libavfilter/version.h	32;"	d
LIBAVFILTER_VERSION_MICRO	include/libavfilter/version.h	34;"	d
LIBAVFILTER_VERSION_MINOR	include/libavfilter/version.h	33;"	d
LIBAVFORMAT_BUILD	include/libavformat/version.h	42;"	d
LIBAVFORMAT_IDENT	include/libavformat/version.h	44;"	d
LIBAVFORMAT_VERSION	include/libavformat/version.h	39;"	d
LIBAVFORMAT_VERSION_INT	include/libavformat/version.h	36;"	d
LIBAVFORMAT_VERSION_MAJOR	include/libavformat/version.h	32;"	d
LIBAVFORMAT_VERSION_MICRO	include/libavformat/version.h	34;"	d
LIBAVFORMAT_VERSION_MINOR	include/libavformat/version.h	33;"	d
LIBAVRESAMPLE_BUILD	include/libavresample/version.h	40;"	d
LIBAVRESAMPLE_IDENT	include/libavresample/version.h	42;"	d
LIBAVRESAMPLE_VERSION	include/libavresample/version.h	37;"	d
LIBAVRESAMPLE_VERSION_INT	include/libavresample/version.h	34;"	d
LIBAVRESAMPLE_VERSION_MAJOR	include/libavresample/version.h	30;"	d
LIBAVRESAMPLE_VERSION_MICRO	include/libavresample/version.h	32;"	d
LIBAVRESAMPLE_VERSION_MINOR	include/libavresample/version.h	31;"	d
LIBAVUTIL_BUILD	include/libavutil/version.h	68;"	d
LIBAVUTIL_IDENT	include/libavutil/version.h	70;"	d
LIBAVUTIL_VERSION	include/libavutil/version.h	65;"	d
LIBAVUTIL_VERSION_INT	include/libavutil/version.h	62;"	d
LIBAVUTIL_VERSION_MAJOR	include/libavutil/version.h	58;"	d
LIBAVUTIL_VERSION_MICRO	include/libavutil/version.h	60;"	d
LIBAVUTIL_VERSION_MINOR	include/libavutil/version.h	59;"	d
LIBPOSTPROC_BUILD	include/libpostproc/version.h	41;"	d
LIBPOSTPROC_IDENT	include/libpostproc/version.h	43;"	d
LIBPOSTPROC_VERSION	include/libpostproc/version.h	38;"	d
LIBPOSTPROC_VERSION_INT	include/libpostproc/version.h	35;"	d
LIBPOSTPROC_VERSION_MAJOR	include/libpostproc/version.h	31;"	d
LIBPOSTPROC_VERSION_MICRO	include/libpostproc/version.h	33;"	d
LIBPOSTPROC_VERSION_MINOR	include/libpostproc/version.h	32;"	d
LIBSWRESAMPLE_BUILD	include/libswresample/version.h	41;"	d
LIBSWRESAMPLE_IDENT	include/libswresample/version.h	43;"	d
LIBSWRESAMPLE_VERSION	include/libswresample/version.h	38;"	d
LIBSWRESAMPLE_VERSION_INT	include/libswresample/version.h	35;"	d
LIBSWRESAMPLE_VERSION_MAJOR	include/libswresample/version.h	31;"	d
LIBSWRESAMPLE_VERSION_MICRO	include/libswresample/version.h	33;"	d
LIBSWRESAMPLE_VERSION_MINOR	include/libswresample/version.h	32;"	d
LIBSWSCALE_BUILD	include/libswscale/version.h	39;"	d
LIBSWSCALE_IDENT	include/libswscale/version.h	41;"	d
LIBSWSCALE_VERSION	include/libswscale/version.h	36;"	d
LIBSWSCALE_VERSION_INT	include/libswscale/version.h	33;"	d
LIBSWSCALE_VERSION_MAJOR	include/libswscale/version.h	29;"	d
LIBSWSCALE_VERSION_MICRO	include/libswscale/version.h	31;"	d
LIBSWSCALE_VERSION_MINOR	include/libswscale/version.h	30;"	d
LOG_NDEBUG	HLSExtractor.cpp	1;"	d	file:
LOG_NDEBUG	HLSReader.cpp	1;"	d	file:
LOG_TAG	HLSExtractor.cpp	2;"	d	file:
LOG_TAG	HLSReader.cpp	2;"	d	file:
MAX_PROBE_PACKETS	include/libavformat/avformat.h	966;"	d
MAX_REORDER_DELAY	include/libavformat/avformat.h	983;"	d
MAX_STD_TIMEBASES	include/libavformat/avformat.h	919;"	d
MB_TYPE_16x16	include/libavcodec/avcodec.h	891;"	d
MB_TYPE_16x8	include/libavcodec/avcodec.h	892;"	d
MB_TYPE_8x16	include/libavcodec/avcodec.h	893;"	d
MB_TYPE_8x8	include/libavcodec/avcodec.h	894;"	d
MB_TYPE_ACPRED	include/libavcodec/avcodec.h	897;"	d
MB_TYPE_CBP	include/libavcodec/avcodec.h	908;"	d
MB_TYPE_DIRECT2	include/libavcodec/avcodec.h	896;"	d
MB_TYPE_GMC	include/libavcodec/avcodec.h	898;"	d
MB_TYPE_INTERLACED	include/libavcodec/avcodec.h	895;"	d
MB_TYPE_INTRA16x16	include/libavcodec/avcodec.h	889;"	d
MB_TYPE_INTRA4x4	include/libavcodec/avcodec.h	888;"	d
MB_TYPE_INTRA_PCM	include/libavcodec/avcodec.h	890;"	d
MB_TYPE_L0	include/libavcodec/avcodec.h	904;"	d
MB_TYPE_L0L1	include/libavcodec/avcodec.h	906;"	d
MB_TYPE_L1	include/libavcodec/avcodec.h	905;"	d
MB_TYPE_P0L0	include/libavcodec/avcodec.h	900;"	d
MB_TYPE_P0L1	include/libavcodec/avcodec.h	902;"	d
MB_TYPE_P1L0	include/libavcodec/avcodec.h	901;"	d
MB_TYPE_P1L1	include/libavcodec/avcodec.h	903;"	d
MB_TYPE_QUANT	include/libavcodec/avcodec.h	907;"	d
MB_TYPE_SKIP	include/libavcodec/avcodec.h	899;"	d
ME_EPZS	include/libavcodec/avcodec.h	/^    ME_EPZS,        \/\/\/< enhanced predictive zonal search$/;"	e	enum:Motion_Est_ID
ME_FULL	include/libavcodec/avcodec.h	/^    ME_FULL,$/;"	e	enum:Motion_Est_ID
ME_HEX	include/libavcodec/avcodec.h	/^    ME_HEX,         \/\/\/< hexagon based search$/;"	e	enum:Motion_Est_ID
ME_ITER	include/libavcodec/avcodec.h	/^    ME_ITER=50,     \/\/\/< iterative search$/;"	e	enum:Motion_Est_ID
ME_LOG	include/libavcodec/avcodec.h	/^    ME_LOG,$/;"	e	enum:Motion_Est_ID
ME_PHODS	include/libavcodec/avcodec.h	/^    ME_PHODS,$/;"	e	enum:Motion_Est_ID
ME_TESA	include/libavcodec/avcodec.h	/^    ME_TESA,        \/\/\/< transformed exhaustive search algorithm$/;"	e	enum:Motion_Est_ID
ME_UMH	include/libavcodec/avcodec.h	/^    ME_UMH,         \/\/\/< uneven multi-hexagon search$/;"	e	enum:Motion_Est_ID
ME_X1	include/libavcodec/avcodec.h	/^    ME_X1,          \/\/\/< reserved for experiments$/;"	e	enum:Motion_Est_ID
ME_ZERO	include/libavcodec/avcodec.h	/^    ME_ZERO = 1,    \/\/\/< no search, that is use 0,0 vector whenever one is needed$/;"	e	enum:Motion_Est_ID
MKBETAG	include/libavutil/common.h	291;"	d
MKTAG	include/libavutil/common.h	290;"	d
M_E	include/libavutil/mathematics.h	31;"	d
M_LN10	include/libavutil/mathematics.h	37;"	d
M_LN2	include/libavutil/mathematics.h	34;"	d
M_LOG2_10	include/libavutil/mathematics.h	40;"	d
M_PHI	include/libavutil/mathematics.h	43;"	d
M_PI	include/libavutil/mathematics.h	46;"	d
M_PI_2	include/libavutil/mathematics.h	49;"	d
M_SQRT1_2	include/libavutil/mathematics.h	52;"	d
M_SQRT2	include/libavutil/mathematics.h	55;"	d
Motion_Est_ID	include/libavcodec/avcodec.h	/^enum Motion_Est_ID {$/;"	g
NAN	include/libavutil/mathematics.h	58;"	d
PARSER_FLAG_COMPLETE_FRAMES	include/libavcodec/avcodec.h	4231;"	d
PARSER_FLAG_FETCHED_OFFSET	include/libavcodec/avcodec.h	4234;"	d
PARSER_FLAG_ONCE	include/libavcodec/avcodec.h	4232;"	d
PARSER_FLAG_USE_CODEC_TS	include/libavcodec/avcodec.h	4235;"	d
PIX_FMT_0BGR32	include/libavutil/pixfmt.h	395;"	d
PIX_FMT_0RGB32	include/libavutil/pixfmt.h	394;"	d
PIX_FMT_ALPHA	include/libavutil/pixdesc.h	154;"	d
PIX_FMT_BE	include/libavutil/pixdesc.h	147;"	d
PIX_FMT_BGR32	include/libavutil/pixfmt.h	392;"	d
PIX_FMT_BGR32_1	include/libavutil/pixfmt.h	393;"	d
PIX_FMT_BGR444	include/libavutil/pixfmt.h	405;"	d
PIX_FMT_BGR48	include/libavutil/pixfmt.h	402;"	d
PIX_FMT_BGR555	include/libavutil/pixfmt.h	404;"	d
PIX_FMT_BGR565	include/libavutil/pixfmt.h	403;"	d
PIX_FMT_BGRA64	include/libavutil/pixfmt.h	424;"	d
PIX_FMT_BITSTREAM	include/libavutil/pixdesc.h	149;"	d
PIX_FMT_GBR24P	include/libavutil/pixfmt.h	386;"	d
PIX_FMT_GBRP10	include/libavutil/pixfmt.h	426;"	d
PIX_FMT_GBRP12	include/libavutil/pixfmt.h	427;"	d
PIX_FMT_GBRP14	include/libavutil/pixfmt.h	428;"	d
PIX_FMT_GBRP16	include/libavutil/pixfmt.h	429;"	d
PIX_FMT_GBRP9	include/libavutil/pixfmt.h	425;"	d
PIX_FMT_GRAY16	include/libavutil/pixfmt.h	397;"	d
PIX_FMT_HWACCEL	include/libavutil/pixdesc.h	150;"	d
PIX_FMT_NE	include/libavutil/pixfmt.h	388;"	d
PIX_FMT_PAL	include/libavutil/pixdesc.h	148;"	d
PIX_FMT_PLANAR	include/libavutil/pixdesc.h	151;"	d
PIX_FMT_PSEUDOPAL	include/libavutil/pixdesc.h	153;"	d
PIX_FMT_RGB	include/libavutil/pixdesc.h	152;"	d
PIX_FMT_RGB32	include/libavutil/pixfmt.h	390;"	d
PIX_FMT_RGB32_1	include/libavutil/pixfmt.h	391;"	d
PIX_FMT_RGB444	include/libavutil/pixfmt.h	401;"	d
PIX_FMT_RGB48	include/libavutil/pixfmt.h	398;"	d
PIX_FMT_RGB555	include/libavutil/pixfmt.h	400;"	d
PIX_FMT_RGB565	include/libavutil/pixfmt.h	399;"	d
PIX_FMT_RGBA64	include/libavutil/pixfmt.h	423;"	d
PIX_FMT_Y400A	include/libavutil/pixfmt.h	385;"	d
PIX_FMT_YUV420P10	include/libavutil/pixfmt.h	410;"	d
PIX_FMT_YUV420P12	include/libavutil/pixfmt.h	413;"	d
PIX_FMT_YUV420P14	include/libavutil/pixfmt.h	416;"	d
PIX_FMT_YUV420P16	include/libavutil/pixfmt.h	419;"	d
PIX_FMT_YUV420P9	include/libavutil/pixfmt.h	407;"	d
PIX_FMT_YUV422P10	include/libavutil/pixfmt.h	411;"	d
PIX_FMT_YUV422P12	include/libavutil/pixfmt.h	414;"	d
PIX_FMT_YUV422P14	include/libavutil/pixfmt.h	417;"	d
PIX_FMT_YUV422P16	include/libavutil/pixfmt.h	420;"	d
PIX_FMT_YUV422P9	include/libavutil/pixfmt.h	408;"	d
PIX_FMT_YUV444P10	include/libavutil/pixfmt.h	412;"	d
PIX_FMT_YUV444P12	include/libavutil/pixfmt.h	415;"	d
PIX_FMT_YUV444P14	include/libavutil/pixfmt.h	418;"	d
PIX_FMT_YUV444P16	include/libavutil/pixfmt.h	421;"	d
PIX_FMT_YUV444P9	include/libavutil/pixfmt.h	409;"	d
POSTPROC_POSTPROCESS_H	include/libpostproc/postprocess.h	22;"	d
POSTPROC_POSTPROCESS_VERSION_H	include/libpostproc/version.h	22;"	d
PP_CPU_CAPS_3DNOW	include/libpostproc/postprocess.h	90;"	d
PP_CPU_CAPS_ALTIVEC	include/libpostproc/postprocess.h	91;"	d
PP_CPU_CAPS_AUTO	include/libpostproc/postprocess.h	92;"	d
PP_CPU_CAPS_MMX	include/libpostproc/postprocess.h	88;"	d
PP_CPU_CAPS_MMX2	include/libpostproc/postprocess.h	89;"	d
PP_FORMAT	include/libpostproc/postprocess.h	94;"	d
PP_FORMAT_411	include/libpostproc/postprocess.h	97;"	d
PP_FORMAT_420	include/libpostproc/postprocess.h	95;"	d
PP_FORMAT_422	include/libpostproc/postprocess.h	96;"	d
PP_FORMAT_440	include/libpostproc/postprocess.h	99;"	d
PP_FORMAT_444	include/libpostproc/postprocess.h	98;"	d
PP_PICT_TYPE_QP2	include/libpostproc/postprocess.h	101;"	d
PP_QUALITY_MAX	include/libpostproc/postprocess.h	52;"	d
PUT_UTF16	include/libavutil/common.h	396;"	d
PUT_UTF8	include/libavutil/common.h	362;"	d
Picture	include/libavcodec/vda.h	40;"	d
Picture	include/libavcodec/vda.h	42;"	d
PixelFormat	include/libavutil/pixfmt.h	383;"	d
QP_STORE_T	include/libpostproc/postprocess.h	54;"	d
Queue	Queue.h	/^typedef struct Queue {$/;"	s
Queue	Queue.h	/^} Queue;$/;"	t	typeref:struct:Queue
RAW_PACKET_BUFFER_SIZE	include/libavformat/avformat.h	1654;"	d
RDFTContext	include/libavcodec/avfft.h	/^typedef struct RDFTContext RDFTContext;$/;"	t	typeref:struct:RDFTContext
RDFTransformType	include/libavcodec/avfft.h	/^enum RDFTransformType {$/;"	g
ROUNDED_DIV	include/libavutil/common.h	55;"	d
RSHIFT	include/libavutil/common.h	53;"	d
RcOverride	include/libavcodec/avcodec.h	/^typedef struct RcOverride{$/;"	s
RcOverride	include/libavcodec/avcodec.h	/^} RcOverride;$/;"	t	typeref:struct:RcOverride
ReSampleContext	include/libavcodec/avcodec.h	/^typedef struct ReSampleContext ReSampleContext;$/;"	t	typeref:struct:ReSampleContext
SLICE_FLAG_ALLOW_FIELD	include/libavcodec/avcodec.h	1747;"	d
SLICE_FLAG_ALLOW_PLANE	include/libavcodec/avcodec.h	1748;"	d
SLICE_FLAG_CODED_ORDER	include/libavcodec/avcodec.h	1746;"	d
SUBTITLE_ASS	include/libavcodec/avcodec.h	/^    SUBTITLE_ASS,$/;"	e	enum:AVSubtitleType
SUBTITLE_BITMAP	include/libavcodec/avcodec.h	/^    SUBTITLE_BITMAP,                \/\/\/< A bitmap, pict will be set$/;"	e	enum:AVSubtitleType
SUBTITLE_NONE	include/libavcodec/avcodec.h	/^    SUBTITLE_NONE,$/;"	e	enum:AVSubtitleType
SUBTITLE_TEXT	include/libavcodec/avcodec.h	/^    SUBTITLE_TEXT,$/;"	e	enum:AVSubtitleType
SWRESAMPLE_SWRESAMPLE_H	include/libswresample/swresample.h	22;"	d
SWR_CH_MAX	include/libswresample/swresample.h	130;"	d
SWR_DITHER_NB	include/libswresample/swresample.h	/^    SWR_DITHER_NB,              \/\/\/< not part of API\/ABI$/;"	e	enum:SwrDitherType
SWR_DITHER_NONE	include/libswresample/swresample.h	/^    SWR_DITHER_NONE = 0,$/;"	e	enum:SwrDitherType
SWR_DITHER_NS	include/libswresample/swresample.h	/^    SWR_DITHER_NS = 64,         \/\/\/< not part of API\/ABI$/;"	e	enum:SwrDitherType
SWR_DITHER_NS_F_WEIGHTED	include/libswresample/swresample.h	/^    SWR_DITHER_NS_F_WEIGHTED,$/;"	e	enum:SwrDitherType
SWR_DITHER_NS_HIGH_SHIBATA	include/libswresample/swresample.h	/^    SWR_DITHER_NS_HIGH_SHIBATA,$/;"	e	enum:SwrDitherType
SWR_DITHER_NS_IMPROVED_E_WEIGHTED	include/libswresample/swresample.h	/^    SWR_DITHER_NS_IMPROVED_E_WEIGHTED,$/;"	e	enum:SwrDitherType
SWR_DITHER_NS_LIPSHITZ	include/libswresample/swresample.h	/^    SWR_DITHER_NS_LIPSHITZ,$/;"	e	enum:SwrDitherType
SWR_DITHER_NS_LOW_SHIBATA	include/libswresample/swresample.h	/^    SWR_DITHER_NS_LOW_SHIBATA,$/;"	e	enum:SwrDitherType
SWR_DITHER_NS_MODIFIED_E_WEIGHTED	include/libswresample/swresample.h	/^    SWR_DITHER_NS_MODIFIED_E_WEIGHTED,$/;"	e	enum:SwrDitherType
SWR_DITHER_NS_SHIBATA	include/libswresample/swresample.h	/^    SWR_DITHER_NS_SHIBATA,$/;"	e	enum:SwrDitherType
SWR_DITHER_RECTANGULAR	include/libswresample/swresample.h	/^    SWR_DITHER_RECTANGULAR,$/;"	e	enum:SwrDitherType
SWR_DITHER_TRIANGULAR	include/libswresample/swresample.h	/^    SWR_DITHER_TRIANGULAR,$/;"	e	enum:SwrDitherType
SWR_DITHER_TRIANGULAR_HIGHPASS	include/libswresample/swresample.h	/^    SWR_DITHER_TRIANGULAR_HIGHPASS,$/;"	e	enum:SwrDitherType
SWR_ENGINE_NB	include/libswresample/swresample.h	/^    SWR_ENGINE_NB,              \/\/\/< not part of API\/ABI$/;"	e	enum:SwrEngine
SWR_ENGINE_SOXR	include/libswresample/swresample.h	/^    SWR_ENGINE_SOXR,            \/**< SoX Resampler *\/$/;"	e	enum:SwrEngine
SWR_ENGINE_SWR	include/libswresample/swresample.h	/^    SWR_ENGINE_SWR,             \/**< SW Resampler *\/$/;"	e	enum:SwrEngine
SWR_FILTER_TYPE_BLACKMAN_NUTTALL	include/libswresample/swresample.h	/^    SWR_FILTER_TYPE_BLACKMAN_NUTTALL,   \/**< Blackman Nuttall Windowed Sinc *\/$/;"	e	enum:SwrFilterType
SWR_FILTER_TYPE_CUBIC	include/libswresample/swresample.h	/^    SWR_FILTER_TYPE_CUBIC,              \/**< Cubic *\/$/;"	e	enum:SwrFilterType
SWR_FILTER_TYPE_KAISER	include/libswresample/swresample.h	/^    SWR_FILTER_TYPE_KAISER,             \/**< Kaiser Windowed Sinc *\/$/;"	e	enum:SwrFilterType
SWR_FLAG_RESAMPLE	include/libswresample/swresample.h	140;"	d
SWR_VERSION_H	include/libswresample/version.h	22;"	d
SWSCALE_SWSCALE_H	include/libswscale/swscale.h	22;"	d
SWSCALE_VERSION_H	include/libswscale/version.h	20;"	d
SWS_ACCURATE_RND	include/libswscale/swscale.h	81;"	d
SWS_AREA	include/libswscale/swscale.h	61;"	d
SWS_BICUBIC	include/libswscale/swscale.h	58;"	d
SWS_BICUBLIN	include/libswscale/swscale.h	62;"	d
SWS_BILINEAR	include/libswscale/swscale.h	57;"	d
SWS_BITEXACT	include/libswscale/swscale.h	82;"	d
SWS_CPU_CAPS_3DNOW	include/libswscale/swscale.h	93;"	d
SWS_CPU_CAPS_ALTIVEC	include/libswscale/swscale.h	94;"	d
SWS_CPU_CAPS_BFIN	include/libswscale/swscale.h	96;"	d
SWS_CPU_CAPS_MMX	include/libswscale/swscale.h	90;"	d
SWS_CPU_CAPS_MMX2	include/libswscale/swscale.h	92;"	d
SWS_CPU_CAPS_MMXEXT	include/libswscale/swscale.h	91;"	d
SWS_CPU_CAPS_SSE2	include/libswscale/swscale.h	98;"	d
SWS_CS_DEFAULT	include/libswscale/swscale.h	109;"	d
SWS_CS_FCC	include/libswscale/swscale.h	104;"	d
SWS_CS_ITU601	include/libswscale/swscale.h	105;"	d
SWS_CS_ITU624	include/libswscale/swscale.h	106;"	d
SWS_CS_ITU709	include/libswscale/swscale.h	103;"	d
SWS_CS_SMPTE170M	include/libswscale/swscale.h	107;"	d
SWS_CS_SMPTE240M	include/libswscale/swscale.h	108;"	d
SWS_DIRECT_BGR	include/libswscale/swscale.h	80;"	d
SWS_ERROR_DIFFUSION	include/libswscale/swscale.h	83;"	d
SWS_FAST_BILINEAR	include/libswscale/swscale.h	56;"	d
SWS_FULL_CHR_H_INP	include/libswscale/swscale.h	79;"	d
SWS_FULL_CHR_H_INT	include/libswscale/swscale.h	77;"	d
SWS_GAUSS	include/libswscale/swscale.h	63;"	d
SWS_LANCZOS	include/libswscale/swscale.h	65;"	d
SWS_MAX_REDUCE_CUTOFF	include/libswscale/swscale.h	101;"	d
SWS_PARAM_DEFAULT	include/libswscale/swscale.h	71;"	d
SWS_POINT	include/libswscale/swscale.h	60;"	d
SWS_PRINT_INFO	include/libswscale/swscale.h	73;"	d
SWS_SINC	include/libswscale/swscale.h	64;"	d
SWS_SPLINE	include/libswscale/swscale.h	66;"	d
SWS_SRC_V_CHR_DROP_MASK	include/libswscale/swscale.h	68;"	d
SWS_SRC_V_CHR_DROP_SHIFT	include/libswscale/swscale.h	69;"	d
SWS_X	include/libswscale/swscale.h	59;"	d
SniffHLS	HLSExtractor.cpp	/^bool SniffHLS($/;"	f	namespace:android
SwrContext	include/libswresample/swresample.h	/^typedef struct SwrContext SwrContext;$/;"	t	typeref:struct:SwrContext
SwrDitherType	include/libswresample/swresample.h	/^enum SwrDitherType {$/;"	g
SwrEngine	include/libswresample/swresample.h	/^enum SwrEngine {$/;"	g
SwrFilterType	include/libswresample/swresample.h	/^enum SwrFilterType {$/;"	g
SwsFilter	include/libswscale/swscale.h	/^typedef struct SwsFilter {$/;"	s
SwsFilter	include/libswscale/swscale.h	/^} SwsFilter;$/;"	t	typeref:struct:SwsFilter
SwsVector	include/libswscale/swscale.h	/^typedef struct SwsVector {$/;"	s
SwsVector	include/libswscale/swscale.h	/^} SwsVector;$/;"	t	typeref:struct:SwsVector
VORBIS_FLAG_COMMENT	include/libavcodec/vorbis_parser.h	49;"	d
VORBIS_FLAG_HEADER	include/libavcodec/vorbis_parser.h	48;"	d
_HLS_EXTRACTOR_H_	HLSExtractor.h	2;"	d
_HLS_READER_H_	HLSReader.h	2;"	d
_QUEUE_H_	Queue.h	2;"	d
_WIN32_WINNT	include/libavcodec/dxva2.h	33;"	d
_WIN32_WINNT	include/libavcodec/dxva2.h	34;"	d
__GNUC_STDC_INLINE__	include/libavcodec/vda.h	38;"	d
_init_	HLSReader.cpp	/^static void _init_(HLSReader *reader)$/;"	f	file:
_status_t	HLSReader.h	/^typedef enum _status_t {$/;"	g
_status_t	HLSReader.h	/^} _status_t;$/;"	t	typeref:enum:_status_t
active_thread_type	include/libavcodec/avcodec.h	/^    int active_thread_type;$/;"	m	struct:AVCodecContext
addADTSHeader	HLSExtractor.cpp	/^void HLSSource::addADTSHeader(uint8_t *adts_header, int frame_length, int rate_idx, int channels)$/;"	f	class:android::HLSSource
aextradata	HLSReader.cpp	/^uint8_t *aextradata(HLSReader *reader)$/;"	f
aextradata_size	HLSReader.cpp	/^int aextradata_size(HLSReader *reader)$/;"	f
age_index	include/libavfilter/avfilter.h	/^    int age_index;$/;"	m	struct:AVFilterLink
album_gain	include/libavutil/replaygain.h	/^    int32_t album_gain;$/;"	m	struct:AVReplayGain
album_peak	include/libavutil/replaygain.h	/^    uint32_t album_peak;$/;"	m	struct:AVReplayGain
alias	include/libavutil/pixdesc.h	/^    const char *alias;$/;"	m	struct:AVPixFmtDescriptor
all_channel_counts	include/libavfilter/buffersink.h	/^    int all_channel_counts;                 \/\/\/< if not 0, accept any channel count or layout$/;"	m	struct:__anon2
alloc_frame	include/libavcodec/avcodec.h	/^    int (*alloc_frame)(AVCodecContext *avctx, AVFrame *frame);$/;"	m	struct:AVHWAccel
allocated_data_blocks	include/libavcodec/xvmc.h	/^    int             allocated_data_blocks;$/;"	m	struct:xvmc_pix_fmt
allocated_mv_blocks	include/libavcodec/xvmc.h	/^    int             allocated_mv_blocks;$/;"	m	struct:xvmc_pix_fmt
android	HLSExtractor.cpp	/^namespace android {$/;"	n	file:
android	HLSExtractor.h	/^namespace android {$/;"	n
aresample_swr_opts	include/libavfilter/avfilter.h	/^    char *aresample_swr_opts; \/\/\/< swr options to use for the auto-inserted aresample filters, Access ONLY through AVOptions$/;"	m	struct:AVFilterGraph
ass	include/libavcodec/avcodec.h	/^    char *ass;$/;"	m	struct:AVSubtitleRect
attached_pic	include/libavformat/avformat.h	/^    AVPacket attached_pic;$/;"	m	struct:AVStream
attribute_deprecated	include/libavutil/attributes.h	86;"	d
attribute_deprecated	include/libavutil/attributes.h	88;"	d
attribute_deprecated	include/libavutil/attributes.h	90;"	d
audio	include/libavfilter/avfilter.h	/^    AVFilterBufferRefAudioProps *audio; \/\/\/< audio buffer specific properties$/;"	m	struct:AVFilterBufferRef
audio_bit_rate	HLSReader.cpp	/^int audio_bit_rate(HLSReader *reader)$/;"	f
audio_channels	HLSReader.cpp	/^int audio_channels(HLSReader *reader)$/;"	f
audio_codec	include/libavformat/avformat.h	/^    AVCodec *audio_codec;$/;"	m	struct:AVFormatContext
audio_codec	include/libavformat/avformat.h	/^    enum AVCodecID audio_codec;    \/**< default audio codec *\/$/;"	m	struct:AVOutputFormat	typeref:enum:AVOutputFormat::AVCodecID
audio_codec_id	include/libavformat/avformat.h	/^    enum AVCodecID audio_codec_id;$/;"	m	struct:AVFormatContext	typeref:enum:AVFormatContext::AVCodecID
audio_duration	HLSReader.cpp	/^int64_t audio_duration(HLSReader *reader)$/;"	f
audio_mime_type	HLSReader.cpp	/^const char * audio_mime_type(HLSReader *reader)$/;"	f
audio_min_samples	include/libavcodec/dv_profile.h	/^    int              audio_min_samples[3];  \/* min amount of audio samples *\/$/;"	m	struct:AVDVProfile
audio_preload	include/libavformat/avformat.h	/^    int audio_preload;$/;"	m	struct:AVFormatContext
audio_profile	HLSReader.cpp	/^int audio_profile(HLSReader *reader)$/;"	f
audio_rational	HLSReader.h	/^    AVRational audio_rational;$/;"	m	struct:HLSReader
audio_sample_rate	HLSReader.cpp	/^int audio_sample_rate(HLSReader *reader)$/;"	f
audio_samples_dist	include/libavcodec/dv_profile.h	/^    int              audio_samples_dist[5]; \/* how many samples are supposed to be *\/$/;"	m	struct:AVDVProfile
audio_service_type	include/libavcodec/avcodec.h	/^    enum AVAudioServiceType audio_service_type;$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVAudioServiceType
audio_shuffle	include/libavcodec/dv_profile.h	/^    const uint8_t  (*audio_shuffle)[9];     \/* PCM shuffling table *\/$/;"	m	struct:AVDVProfile
audio_start_time	HLSReader.cpp	/^int64_t audio_start_time(HLSReader *reader)$/;"	f
audio_start_time	HLSReader.h	/^    int64_t audio_start_time;$/;"	m	struct:HLSReader
audio_stream_index	HLSReader.h	/^    int audio_stream_index;$/;"	m	struct:HLSReader
audio_stride	include/libavcodec/dv_profile.h	/^    int              audio_stride;          \/* size of audio_shuffle table *\/$/;"	m	struct:AVDVProfile
audio_time_base	HLSReader.cpp	/^AVRational audio_time_base(HLSReader *reader)$/;"	f
audio_ts_base	HLSReader.h	/^    int64_t audio_ts_base;$/;"	m	struct:HLSReader
audioq	HLSReader.h	/^    Queue audioq;$/;"	m	struct:HLSReader
av_alias	include/libavutil/attributes.h	135;"	d
av_alias	include/libavutil/attributes.h	137;"	d
av_alias	include/libavutil/intreadwrite.h	/^union unaligned_16 { uint16_t l; } __attribute__((packed)) av_alias;$/;"	v	typeref:union:unaligned_16
av_alias	include/libavutil/intreadwrite.h	/^union unaligned_32 { uint32_t l; } __attribute__((packed)) av_alias;$/;"	v	typeref:union:unaligned_32
av_alias	include/libavutil/intreadwrite.h	/^union unaligned_64 { uint64_t l; } __attribute__((packed)) av_alias;$/;"	v	typeref:union:unaligned_64
av_alias16	include/libavutil/intreadwrite.h	/^} av_alias av_alias16;$/;"	t	typeref:union:__anon8
av_alias32	include/libavutil/intreadwrite.h	/^} av_alias av_alias32;$/;"	t	typeref:union:__anon7
av_alias64	include/libavutil/intreadwrite.h	/^} av_alias av_alias64;$/;"	t	typeref:union:__anon6
av_alloc_size	include/libavutil/mem.h	70;"	d
av_alloc_size	include/libavutil/mem.h	72;"	d
av_always_inline	include/libavutil/attributes.h	37;"	d
av_always_inline	include/libavutil/attributes.h	39;"	d
av_always_inline	include/libavutil/attributes.h	41;"	d
av_assert0	include/libavutil/avassert.h	37;"	d
av_assert1	include/libavutil/avassert.h	51;"	d
av_assert1	include/libavutil/avassert.h	53;"	d
av_assert2	include/libavutil/avassert.h	61;"	d
av_assert2	include/libavutil/avassert.h	63;"	d
av_be2ne16	include/libavutil/bswap.h	83;"	d
av_be2ne16	include/libavutil/bswap.h	92;"	d
av_be2ne32	include/libavutil/bswap.h	84;"	d
av_be2ne32	include/libavutil/bswap.h	93;"	d
av_be2ne64	include/libavutil/bswap.h	85;"	d
av_be2ne64	include/libavutil/bswap.h	94;"	d
av_bprint_is_complete	include/libavutil/bprint.h	/^static inline int av_bprint_is_complete(const AVBPrint *buf)$/;"	f
av_bswap16	include/libavutil/bswap.h	/^static av_always_inline av_const uint16_t av_bswap16(uint16_t x)$/;"	f
av_bswap32	include/libavutil/bswap.h	/^static av_always_inline av_const uint32_t av_bswap32(uint32_t x)$/;"	f
av_bswap64	include/libavutil/bswap.h	/^static inline uint64_t av_const av_bswap64(uint64_t x)$/;"	f
av_builtin_constant_p	include/libavutil/attributes.h	147;"	d
av_builtin_constant_p	include/libavutil/attributes.h	150;"	d
av_ceil_log2	include/libavutil/common.h	426;"	d
av_ceil_log2_c	include/libavutil/common.h	/^static av_always_inline av_const int av_ceil_log2_c(int x)$/;"	f
av_class	include/libavcodec/avcodec.h	/^    const AVClass *av_class;$/;"	m	struct:AVCodecContext
av_class	include/libavdevice/avdevice.h	/^    const AVClass *av_class;$/;"	m	struct:AVDeviceCapabilitiesQuery
av_class	include/libavfilter/avfilter.h	/^    const AVClass *av_class;        \/\/\/< needed for av_log() and filters common options$/;"	m	struct:AVFilterContext
av_class	include/libavfilter/avfilter.h	/^    const AVClass *av_class;$/;"	m	struct:AVFilterGraph
av_class	include/libavformat/avformat.h	/^    const AVClass *av_class;$/;"	m	struct:AVFormatContext
av_class	include/libavformat/avio.h	/^    const AVClass *av_class;$/;"	m	struct:AVIOContext
av_clip	include/libavutil/common.h	429;"	d
av_clip64	include/libavutil/common.h	432;"	d
av_clip64_c	include/libavutil/common.h	/^static av_always_inline av_const int64_t av_clip64_c(int64_t a, int64_t amin, int64_t amax)$/;"	f
av_clip_c	include/libavutil/common.h	/^static av_always_inline av_const int av_clip_c(int a, int amin, int amax)$/;"	f
av_clip_int16	include/libavutil/common.h	444;"	d
av_clip_int16_c	include/libavutil/common.h	/^static av_always_inline av_const int16_t av_clip_int16_c(int a)$/;"	f
av_clip_int8	include/libavutil/common.h	438;"	d
av_clip_int8_c	include/libavutil/common.h	/^static av_always_inline av_const int8_t av_clip_int8_c(int a)$/;"	f
av_clip_uint16	include/libavutil/common.h	441;"	d
av_clip_uint16_c	include/libavutil/common.h	/^static av_always_inline av_const uint16_t av_clip_uint16_c(int a)$/;"	f
av_clip_uint8	include/libavutil/common.h	435;"	d
av_clip_uint8_c	include/libavutil/common.h	/^static av_always_inline av_const uint8_t av_clip_uint8_c(int a)$/;"	f
av_clip_uintp2	include/libavutil/common.h	450;"	d
av_clip_uintp2_c	include/libavutil/common.h	/^static av_always_inline av_const unsigned av_clip_uintp2_c(int a, int p)$/;"	f
av_clipd	include/libavutil/common.h	462;"	d
av_clipd_c	include/libavutil/common.h	/^static av_always_inline av_const double av_clipd_c(double a, double amin, double amax)$/;"	f
av_clipf	include/libavutil/common.h	459;"	d
av_clipf_c	include/libavutil/common.h	/^static av_always_inline av_const float av_clipf_c(float a, float amin, float amax)$/;"	f
av_clipl_int32	include/libavutil/common.h	447;"	d
av_clipl_int32_c	include/libavutil/common.h	/^static av_always_inline av_const int32_t av_clipl_int32_c(int64_t a)$/;"	f
av_cmp_q	include/libavutil/rational.h	/^static inline int av_cmp_q(AVRational a, AVRational b){$/;"	f
av_cold	include/libavutil/attributes.h	74;"	d
av_cold	include/libavutil/attributes.h	76;"	d
av_const	include/libavutil/attributes.h	68;"	d
av_const	include/libavutil/attributes.h	70;"	d
av_dlog	include/libavutil/log.h	320;"	d
av_dlog	include/libavutil/log.h	322;"	d
av_double2int	include/libavutil/intfloat.h	/^static av_always_inline uint64_t av_double2int(double f)$/;"	f
av_err2str	include/libavutil/error.h	119;"	d
av_extern_inline	include/libavutil/attributes.h	47;"	d
av_extern_inline	include/libavutil/attributes.h	49;"	d
av_fifo_peek2	include/libavutil/fifo.h	/^static inline uint8_t *av_fifo_peek2(const AVFifoBuffer *f, int offs)$/;"	f
av_flatten	include/libavutil/attributes.h	80;"	d
av_flatten	include/libavutil/attributes.h	82;"	d
av_float2int	include/libavutil/intfloat.h	/^static av_always_inline uint32_t av_float2int(float f)$/;"	f
av_format_control_message	include/libavformat/avformat.h	/^typedef int (*av_format_control_message)(struct AVFormatContext *s, int type,$/;"	t
av_format_ctx	HLSReader.h	/^    AVFormatContext *av_format_ctx;$/;"	m	struct:HLSReader
av_int2double	include/libavutil/intfloat.h	/^static av_always_inline double av_int2double(uint64_t i)$/;"	f
av_int2float	include/libavutil/intfloat.h	/^static av_always_inline float av_int2float(uint32_t i)$/;"	f
av_int_list_length	include/libavutil/avutil.h	324;"	d
av_intfloat32	include/libavutil/intfloat.h	/^union av_intfloat32 {$/;"	u
av_intfloat64	include/libavutil/intfloat.h	/^union av_intfloat64 {$/;"	u
av_inv_q	include/libavutil/rational.h	/^static av_always_inline AVRational av_inv_q(AVRational q)$/;"	f
av_le2ne16	include/libavutil/bswap.h	86;"	d
av_le2ne16	include/libavutil/bswap.h	95;"	d
av_le2ne32	include/libavutil/bswap.h	87;"	d
av_le2ne32	include/libavutil/bswap.h	96;"	d
av_le2ne64	include/libavutil/bswap.h	88;"	d
av_le2ne64	include/libavutil/bswap.h	97;"	d
av_lfg_get	include/libavutil/lfg.h	/^static inline unsigned int av_lfg_get(AVLFG *c){$/;"	f
av_make_error_string	include/libavutil/error.h	/^static inline char *av_make_error_string(char *errbuf, size_t errbuf_size, int errnum)$/;"	f
av_make_q	include/libavutil/rational.h	/^static inline AVRational av_make_q(int num, int den)$/;"	f
av_malloc_array	include/libavutil/mem.h	/^av_alloc_size(1, 2) static inline void *av_malloc_array(size_t nmemb, size_t size)$/;"	f
av_malloc_attrib	include/libavutil/mem.h	64;"	d
av_malloc_attrib	include/libavutil/mem.h	66;"	d
av_mallocz_array	include/libavutil/mem.h	/^av_alloc_size(1, 2) static inline void *av_mallocz_array(size_t nmemb, size_t size)$/;"	f
av_mlfg_get	include/libavutil/lfg.h	/^static inline unsigned int av_mlfg_get(AVLFG *c){$/;"	f
av_noinline	include/libavutil/attributes.h	54;"	d
av_noinline	include/libavutil/attributes.h	56;"	d
av_noinline	include/libavutil/attributes.h	58;"	d
av_noreturn	include/libavutil/attributes.h	155;"	d
av_noreturn	include/libavutil/attributes.h	157;"	d
av_opt_set_int_list	include/libavutil/opt.h	747;"	d
av_parse_ratio_quiet	include/libavutil/parseutils.h	52;"	d
av_pixelutils_sad_fn	include/libavutil/pixelutils.h	/^typedef int (*av_pixelutils_sad_fn)(const uint8_t *src1, ptrdiff_t stride1,$/;"	t
av_popcount	include/libavutil/common.h	465;"	d
av_popcount64	include/libavutil/common.h	468;"	d
av_popcount64_c	include/libavutil/common.h	/^static av_always_inline av_const int av_popcount64_c(uint64_t x)$/;"	f
av_popcount_c	include/libavutil/common.h	/^static av_always_inline av_const int av_popcount_c(uint32_t x)$/;"	f
av_printf_format	include/libavutil/attributes.h	148;"	d
av_printf_format	include/libavutil/attributes.h	151;"	d
av_pure	include/libavutil/attributes.h	62;"	d
av_pure	include/libavutil/attributes.h	64;"	d
av_q2d	include/libavutil/rational.h	/^static inline double av_q2d(AVRational a){$/;"	f
av_sat_add32	include/libavutil/common.h	453;"	d
av_sat_add32_c	include/libavutil/common.h	/^static av_always_inline int av_sat_add32_c(int a, int b)$/;"	f
av_sat_dadd32	include/libavutil/common.h	456;"	d
av_sat_dadd32_c	include/libavutil/common.h	/^static av_always_inline int av_sat_dadd32_c(int a, int b)$/;"	f
av_size_mult	include/libavutil/mem.h	/^static inline int av_size_mult(size_t a, size_t b, size_t *r)$/;"	f
av_strnlen	include/libavutil/avstring.h	/^static inline size_t av_strnlen(const char *s, size_t len)$/;"	f
av_tolower	include/libavutil/avstring.h	/^static inline av_const int av_tolower(int c)$/;"	f
av_toupper	include/libavutil/avstring.h	/^static inline av_const int av_toupper(int c)$/;"	f
av_ts2str	include/libavutil/timestamp.h	54;"	d
av_ts2timestr	include/libavutil/timestamp.h	76;"	d
av_ts_make_string	include/libavutil/timestamp.h	/^static inline char *av_ts_make_string(char *buf, int64_t ts)$/;"	f
av_ts_make_time_string	include/libavutil/timestamp.h	/^static inline char *av_ts_make_time_string(char *buf, int64_t ts, AVRational *tb)$/;"	f
av_uninit	include/libavutil/attributes.h	141;"	d
av_uninit	include/libavutil/attributes.h	143;"	d
av_unused	include/libavutil/attributes.h	118;"	d
av_unused	include/libavutil/attributes.h	120;"	d
av_used	include/libavutil/attributes.h	129;"	d
av_used	include/libavutil/attributes.h	131;"	d
av_x_if_null	include/libavutil/avutil.h	/^static inline void *av_x_if_null(const void *p, const void *x)$/;"	f
avfilter_action_func	include/libavfilter/avfilter.h	/^typedef int (avfilter_action_func)(AVFilterContext *ctx, void *arg, int jobnr, int nb_jobs);$/;"	t
avfilter_execute_func	include/libavfilter/avfilter.h	/^typedef int (avfilter_execute_func)(AVFilterContext *ctx, avfilter_action_func *func,$/;"	t
avg_frame_rate	include/libavformat/avformat.h	/^    AVRational avg_frame_rate;$/;"	m	struct:AVStream
avio_flags	include/libavformat/avformat.h	/^    int avio_flags;$/;"	m	struct:AVFormatContext
avio_tell	include/libavformat/avio.h	/^static av_always_inline int64_t avio_tell(AVIOContext *s)$/;"	f
avoid_negative_ts	include/libavformat/avformat.h	/^    int avoid_negative_ts;$/;"	m	struct:AVFormatContext
b_frame_strategy	include/libavcodec/avcodec.h	/^    int b_frame_strategy;$/;"	m	struct:AVCodecContext
b_quant_factor	include/libavcodec/avcodec.h	/^    float b_quant_factor;$/;"	m	struct:AVCodecContext
b_quant_offset	include/libavcodec/avcodec.h	/^    float b_quant_offset;$/;"	m	struct:AVCodecContext
b_sensitivity	include/libavcodec/avcodec.h	/^    int b_sensitivity;$/;"	m	struct:AVCodecContext
base	include/libavutil/frame.h	/^    uint8_t *base[AV_NUM_DATA_POINTERS];$/;"	m	struct:AVFrame
best_effort_timestamp	include/libavutil/frame.h	/^    int64_t best_effort_timestamp;$/;"	m	struct:AVFrame
bidir_refine	include/libavcodec/avcodec.h	/^    int bidir_refine;$/;"	m	struct:AVCodecContext
bit_rate	include/libavcodec/avcodec.h	/^    int bit_rate;$/;"	m	struct:AVCodecContext
bit_rate	include/libavformat/avformat.h	/^    int bit_rate;$/;"	m	struct:AVFormatContext
bit_rate_tolerance	include/libavcodec/avcodec.h	/^    int bit_rate_tolerance;$/;"	m	struct:AVCodecContext
bitplane_buf_id	include/libavcodec/vaapi.h	/^    uint32_t bitplane_buf_id;$/;"	m	struct:vaapi_context
bits_per_coded_sample	include/libavcodec/avcodec.h	/^     int bits_per_coded_sample;$/;"	m	struct:AVCodecContext
bits_per_raw_sample	include/libavcodec/avcodec.h	/^    int bits_per_raw_sample;$/;"	m	struct:AVCodecContext
bitstream_buffers	include/libavcodec/vdpau.h	/^    VdpBitstreamBuffer *bitstream_buffers;$/;"	m	struct:AVVDPAUContext
bitstream_buffers	include/libavcodec/vdpau.h	/^    VdpBitstreamBuffer *bitstream_buffers;$/;"	m	struct:vdpau_render_state
bitstream_buffers_allocated	include/libavcodec/vdpau.h	/^    int bitstream_buffers_allocated;$/;"	m	struct:AVVDPAUContext
bitstream_buffers_allocated	include/libavcodec/vdpau.h	/^    int bitstream_buffers_allocated;$/;"	m	struct:vdpau_render_state
bitstream_buffers_used	include/libavcodec/vdpau.h	/^    int bitstream_buffers_used;$/;"	m	struct:AVVDPAUContext
bitstream_buffers_used	include/libavcodec/vdpau.h	/^    int bitstream_buffers_used;$/;"	m	struct:vdpau_render_state
block_align	include/libavcodec/avcodec.h	/^    int block_align;$/;"	m	struct:AVCodecContext
block_sizes	include/libavcodec/dv_profile.h	/^    const uint8_t   *block_sizes;           \/* AC block sizes, in bits *\/$/;"	m	struct:AVDVProfile
border_masking	include/libavcodec/avcodec.h	/^    float border_masking;$/;"	m	struct:AVCodecContext
bpm	include/libavcodec/dv_profile.h	/^    int              bpm;                   \/* blocks per macroblock *\/$/;"	m	struct:AVDVProfile
brd_scale	include/libavcodec/avcodec.h	/^    int brd_scale;$/;"	m	struct:AVCodecContext
bsfc	HLSReader.h	/^    AVBitStreamFilterContext *bsfc;$/;"	m	struct:HLSReader
buf	include/libavcodec/avcodec.h	/^    AVBufferRef *buf;$/;"	m	struct:AVPacket
buf	include/libavfilter/avfilter.h	/^    AVFilterBuffer *buf;        \/\/\/< the buffer that this is a reference to$/;"	m	struct:AVFilterBufferRef
buf	include/libavformat/avformat.h	/^    unsigned char *buf; \/**< Buffer must have AVPROBE_PADDING_SIZE of extra allocated bytes filled with zero. *\/$/;"	m	struct:AVProbeData
buf	include/libavutil/frame.h	/^    AVBufferRef *buf[AV_NUM_DATA_POINTERS];$/;"	m	struct:AVFrame
buf_end	include/libavformat/avio.h	/^    unsigned char *buf_end; \/**< End of the data, may be less than$/;"	m	struct:AVIOContext
buf_ptr	include/libavformat/avio.h	/^    unsigned char *buf_ptr; \/**< Current position in the buffer *\/$/;"	m	struct:AVIOContext
buf_size	include/libavformat/avformat.h	/^    int buf_size;       \/**< Size of buf except extra allocated bytes *\/$/;"	m	struct:AVProbeData
buffer	include/libavformat/avio.h	/^    unsigned char *buffer;  \/**< Start of the buffer. *\/$/;"	m	struct:AVIOContext
buffer	include/libavutil/buffer.h	/^    AVBuffer *buffer;$/;"	m	struct:AVBufferRef
buffer	include/libavutil/fifo.h	/^    uint8_t *buffer;$/;"	m	struct:AVFifoBuffer
buffer_hints	include/libavutil/frame.h	/^    int buffer_hints;$/;"	m	struct:AVFrame
buffer_size	include/libavformat/avio.h	/^    int buffer_size;        \/**< Maximum buffer size *\/$/;"	m	struct:AVIOContext
bytes_read	include/libavformat/avio.h	/^    int64_t bytes_read;$/;"	m	struct:AVIOContext
calc_time_stamp	HLSReader.cpp	/^static void calc_time_stamp(HLSReader *reader)$/;"	f	file:
callback	include/libavformat/avio.h	/^    int (*callback)(void*);$/;"	m	struct:AVIOInterruptCB
capabilities	include/libavcodec/avcodec.h	/^    int capabilities;$/;"	m	struct:AVCodec
capabilities	include/libavcodec/avcodec.h	/^    int capabilities;$/;"	m	struct:AVHWAccel
category	include/libavutil/log.h	/^    AVClassCategory category;$/;"	m	struct:AVClass
center_mix_level	include/libavutil/downmix_info.h	/^    double center_mix_level;$/;"	m	struct:AVDownmixInfo
center_mix_level_ltrt	include/libavutil/downmix_info.h	/^    double center_mix_level_ltrt;$/;"	m	struct:AVDownmixInfo
cfg	include/libavcodec/dxva2.h	/^    const DXVA2_ConfigPictureDecode *cfg;$/;"	m	struct:dxva_context
channel_counts	include/libavfilter/buffersink.h	/^    const int *channel_counts;              \/\/\/< list of allowed channel counts, terminated by -1$/;"	m	struct:__anon2
channel_layout	include/libavcodec/avcodec.h	/^    uint64_t channel_layout;$/;"	m	struct:AVCodecContext
channel_layout	include/libavdevice/avdevice.h	/^    int64_t channel_layout;$/;"	m	struct:AVDeviceCapabilitiesQuery
channel_layout	include/libavfilter/avfilter.h	/^    uint64_t channel_layout;    \/\/\/< channel layout of audio buffer$/;"	m	struct:AVFilterBufferRefAudioProps
channel_layout	include/libavfilter/avfilter.h	/^    uint64_t channel_layout;    \/\/\/< channel layout of current buffer (see libavutil\/channel_layout.h)$/;"	m	struct:AVFilterLink
channel_layout	include/libavutil/frame.h	/^    uint64_t channel_layout;$/;"	m	struct:AVFrame
channel_layouts	include/libavcodec/avcodec.h	/^    const uint64_t *channel_layouts;         \/\/\/< array of support channel layouts, or NULL if unknown. array is terminated by 0$/;"	m	struct:AVCodec
channel_layouts	include/libavfilter/buffersink.h	/^    const int64_t *channel_layouts;         \/\/\/< list of allowed channel layouts, terminated by -1$/;"	m	struct:__anon2
channels	include/libavcodec/avcodec.h	/^    int channels;    \/\/\/< number of audio channels$/;"	m	struct:AVCodecContext
channels	include/libavdevice/avdevice.h	/^    int channels;$/;"	m	struct:AVDeviceCapabilitiesQuery
channels	include/libavfilter/avfilter.h	/^    int channels;               \/\/\/< number of channels (do not access directly)$/;"	m	struct:AVFilterBufferRefAudioProps
channels	include/libavfilter/avfilter.h	/^    int channels;$/;"	m	struct:AVFilterLink
channels	include/libavutil/frame.h	/^    int channels;$/;"	m	struct:AVFrame
chapters	include/libavformat/avformat.h	/^    AVChapter **chapters;$/;"	m	struct:AVFormatContext
checksum	include/libavformat/avio.h	/^    unsigned long checksum;$/;"	m	struct:AVIOContext
checksum_ptr	include/libavformat/avio.h	/^    unsigned char *checksum_ptr;$/;"	m	struct:AVIOContext
child_class_next	include/libavutil/log.h	/^    const struct AVClass* (*child_class_next)(const struct AVClass *prev);$/;"	m	struct:AVClass	typeref:struct:AVClass::child_class_next
child_next	include/libavutil/log.h	/^    void* (*child_next)(void *obj, void *prev);$/;"	m	struct:AVClass
chrH	include/libswscale/swscale.h	/^    SwsVector *chrH;$/;"	m	struct:SwsFilter
chrV	include/libswscale/swscale.h	/^    SwsVector *chrV;$/;"	m	struct:SwsFilter
chroma_intra_matrix	include/libavcodec/avcodec.h	/^    uint16_t *chroma_intra_matrix;$/;"	m	struct:AVCodecContext
chroma_location	include/libavutil/frame.h	/^    enum AVChromaLocation chroma_location;$/;"	m	struct:AVFrame	typeref:enum:AVFrame::AVChromaLocation
chroma_sample_location	include/libavcodec/avcodec.h	/^    enum AVChromaLocation chroma_sample_location;$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVChromaLocation
chromaoffset	include/libavcodec/avcodec.h	/^    int chromaoffset;$/;"	m	struct:AVCodecContext
class_name	include/libavutil/log.h	/^    const char* class_name;$/;"	m	struct:AVClass
close	include/libavcodec/avcodec.h	/^    int (*close)(AVCodecContext *);$/;"	m	struct:AVCodec
close	include/libavcodec/avcodec.h	/^    void (*close)(AVBitStreamFilterContext *bsfc);$/;"	m	struct:AVBitStreamFilter
closed	include/libavfilter/avfilter.h	/^    int closed;$/;"	m	struct:AVFilterLink
codec	include/libavcodec/avcodec.h	/^    const struct AVCodec  *codec;$/;"	m	struct:AVCodecContext	typeref:struct:AVCodecContext::AVCodec
codec	include/libavdevice/avdevice.h	/^    enum AVCodecID codec;$/;"	m	struct:AVDeviceCapabilitiesQuery	typeref:enum:AVDeviceCapabilitiesQuery::AVCodecID
codec	include/libavformat/avformat.h	/^    AVCodecContext *codec;$/;"	m	struct:AVStream
codec_descriptor	include/libavcodec/avcodec.h	/^    const AVCodecDescriptor *codec_descriptor;$/;"	m	struct:AVCodecContext
codec_id	include/libavcodec/avcodec.h	/^    enum AVCodecID     codec_id; \/* see AV_CODEC_ID_xxx *\/$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVCodecID
codec_ids	include/libavcodec/avcodec.h	/^    int codec_ids[5]; \/* several codec IDs are permitted *\/$/;"	m	struct:AVCodecParser
codec_info_duration	include/libavformat/avformat.h	/^        int64_t codec_info_duration;$/;"	m	struct:AVStream::__anon15
codec_info_duration_fields	include/libavformat/avformat.h	/^        int64_t codec_info_duration_fields;$/;"	m	struct:AVStream::__anon15
codec_info_nb_frames	include/libavformat/avformat.h	/^    int codec_info_nb_frames;$/;"	m	struct:AVStream
codec_name	include/libavcodec/avcodec.h	/^    char             codec_name[32];$/;"	m	struct:AVCodecContext
codec_tag	include/libavcodec/avcodec.h	/^    unsigned int codec_tag;$/;"	m	struct:AVCodecContext
codec_tag	include/libavformat/avformat.h	/^    const struct AVCodecTag * const *codec_tag;$/;"	m	struct:AVInputFormat
codec_tag	include/libavformat/avformat.h	/^    const struct AVCodecTag * const *codec_tag;$/;"	m	struct:AVOutputFormat
codec_type	include/libavcodec/avcodec.h	/^    enum AVMediaType codec_type; \/* see AVMEDIA_TYPE_xxx *\/$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVMediaType
codec_whitelist	include/libavcodec/avcodec.h	/^    char *codec_whitelist;$/;"	m	struct:AVCodecContext
codec_whitelist	include/libavformat/avformat.h	/^    char *codec_whitelist;$/;"	m	struct:AVFormatContext
coded_frame	include/libavcodec/avcodec.h	/^    AVFrame *coded_frame;$/;"	m	struct:AVCodecContext
coded_height	include/libavcodec/avcodec.h	/^    int coded_width, coded_height;$/;"	m	struct:AVCodecContext
coded_picture_number	include/libavutil/frame.h	/^    int coded_picture_number;$/;"	m	struct:AVFrame
coded_width	include/libavcodec/avcodec.h	/^    int coded_width, coded_height;$/;"	m	struct:AVCodecContext
coder_type	include/libavcodec/avcodec.h	/^    int coder_type;$/;"	m	struct:AVCodecContext
coeff	include/libswscale/swscale.h	/^    double *coeff;              \/\/\/< pointer to the list of coefficients$/;"	m	struct:SwsVector
color_primaries	include/libavcodec/avcodec.h	/^    enum AVColorPrimaries color_primaries;$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVColorPrimaries
color_primaries	include/libavutil/frame.h	/^    enum AVColorPrimaries color_primaries;$/;"	m	struct:AVFrame	typeref:enum:AVFrame::AVColorPrimaries
color_range	include/libavcodec/avcodec.h	/^    enum AVColorRange color_range;$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVColorRange
color_range	include/libavutil/frame.h	/^    enum AVColorRange color_range;$/;"	m	struct:AVFrame	typeref:enum:AVFrame::AVColorRange
color_trc	include/libavcodec/avcodec.h	/^    enum AVColorTransferCharacteristic color_trc;$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVColorTransferCharacteristic
color_trc	include/libavutil/frame.h	/^    enum AVColorTransferCharacteristic color_trc;$/;"	m	struct:AVFrame	typeref:enum:AVFrame::AVColorTransferCharacteristic
colorspace	include/libavcodec/avcodec.h	/^    enum AVColorSpace colorspace;$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVColorSpace
colorspace	include/libavutil/frame.h	/^    enum AVColorSpace colorspace;$/;"	m	struct:AVFrame	typeref:enum:AVFrame::AVColorSpace
command_queue	include/libavfilter/avfilter.h	/^    struct AVFilterCommand *command_queue;$/;"	m	struct:AVFilterContext	typeref:struct:AVFilterContext::AVFilterCommand
comp	include/libavutil/pixdesc.h	/^    AVComponentDescriptor comp[4];$/;"	m	struct:AVPixFmtDescriptor
component_max	include/libavutil/opt.h	/^    double component_min, component_max;$/;"	m	struct:AVOptionRange
component_min	include/libavutil/opt.h	/^    double component_min, component_max;$/;"	m	struct:AVOptionRange
compression_level	include/libavcodec/avcodec.h	/^    int compression_level;$/;"	m	struct:AVCodecContext
config_id	include/libavcodec/vaapi.h	/^    uint32_t config_id;$/;"	m	struct:vaapi_context
config_props	include/libavfilter/avfilter.h	/^    int (*config_props)(AVFilterLink *link);$/;"	m	struct:AVFilterPad
context_id	include/libavcodec/vaapi.h	/^    uint32_t context_id;$/;"	m	struct:vaapi_context
context_model	include/libavcodec/avcodec.h	/^    int context_model;$/;"	m	struct:AVCodecContext
control_message	include/libavformat/avformat.h	/^    int (*control_message)(struct AVFormatContext *s, int type,$/;"	m	struct:AVOutputFormat
control_message_cb	include/libavformat/avformat.h	/^    av_format_control_message control_message_cb;$/;"	m	struct:AVFormatContext
convergence_duration	include/libavcodec/avcodec.h	/^    int64_t convergence_duration;$/;"	m	struct:AVCodecParserContext
convergence_duration	include/libavcodec/avcodec.h	/^    int64_t convergence_duration;$/;"	m	struct:AVPacket
correct_ts_overflow	include/libavformat/avformat.h	/^    unsigned int correct_ts_overflow;$/;"	m	struct:AVFormatContext
countTracks	HLSExtractor.cpp	/^size_t HLSExtractor::countTracks() {$/;"	f	class:android::HLSExtractor
create_device_capabilities	include/libavformat/avformat.h	/^    int (*create_device_capabilities)(struct AVFormatContext *s, struct AVDeviceCapabilitiesQuery *caps);$/;"	m	struct:AVInputFormat
create_device_capabilities	include/libavformat/avformat.h	/^    int (*create_device_capabilities)(struct AVFormatContext *s, struct AVDeviceCapabilitiesQuery *caps);$/;"	m	struct:AVOutputFormat
ctx_flags	include/libavformat/avformat.h	/^    int ctx_flags;$/;"	m	struct:AVFormatContext
cur_buf_copy	include/libavfilter/avfilter.h	/^    AVFilterBufferRef *cur_buf_copy;$/;"	m	struct:AVFilterLink
cur_dts	include/libavformat/avformat.h	/^    int64_t cur_dts;$/;"	m	struct:AVStream
cur_frame_dts	include/libavcodec/avcodec.h	/^    int64_t cur_frame_dts[AV_PARSER_PTS_NB];$/;"	m	struct:AVCodecParserContext
cur_frame_end	include/libavcodec/avcodec.h	/^    int64_t cur_frame_end[AV_PARSER_PTS_NB];$/;"	m	struct:AVCodecParserContext
cur_frame_offset	include/libavcodec/avcodec.h	/^    int64_t cur_frame_offset[AV_PARSER_PTS_NB];$/;"	m	struct:AVCodecParserContext
cur_frame_pos	include/libavcodec/avcodec.h	/^    int64_t cur_frame_pos[AV_PARSER_PTS_NB];$/;"	m	struct:AVCodecParserContext
cur_frame_pts	include/libavcodec/avcodec.h	/^    int64_t cur_frame_pts[AV_PARSER_PTS_NB];$/;"	m	struct:AVCodecParserContext
cur_frame_start_index	include/libavcodec/avcodec.h	/^    int cur_frame_start_index;$/;"	m	struct:AVCodecParserContext
cur_offset	include/libavcodec/avcodec.h	/^    int64_t cur_offset; \/* current offset$/;"	m	struct:AVCodecParserContext
current_pts	include/libavfilter/avfilter.h	/^    int64_t current_pts;$/;"	m	struct:AVFilterLink
cutoff	include/libavcodec/avcodec.h	/^    int cutoff;$/;"	m	struct:AVCodecContext
cv_buffer	include/libavcodec/vda.h	/^    CVPixelBufferRef    cv_buffer;$/;"	m	struct:vda_context
cv_pix_fmt_type	include/libavcodec/vda.h	/^    OSType              cv_pix_fmt_type;$/;"	m	struct:vda_context
dark_masking	include/libavcodec/avcodec.h	/^    float dark_masking;$/;"	m	struct:AVCodecContext
data	include/libavcodec/avcodec.h	/^    uint8_t *data;$/;"	m	struct:AVPacket
data	include/libavcodec/avcodec.h	/^    uint8_t *data;$/;"	m	struct:AVPacketSideData
data	include/libavcodec/avcodec.h	/^    uint8_t *data[AV_NUM_DATA_POINTERS];    \/\/\/< pointers to the image data planes$/;"	m	struct:AVPicture
data	include/libavfilter/avfilter.h	/^    uint8_t *data[8];           \/\/\/< buffer data for each plane\/channel$/;"	m	struct:AVFilterBuffer
data	include/libavfilter/avfilter.h	/^    uint8_t *data[8];           \/\/\/< picture\/audio data for each plane$/;"	m	struct:AVFilterBufferRef
data	include/libavutil/buffer.h	/^    uint8_t *data;$/;"	m	struct:AVBufferRef
data	include/libavutil/frame.h	/^    uint8_t *data;$/;"	m	struct:AVFrameSideData
data	include/libavutil/frame.h	/^    uint8_t *data[AV_NUM_DATA_POINTERS];$/;"	m	struct:AVFrame
data_blocks	include/libavcodec/xvmc.h	/^    short*          data_blocks;$/;"	m	struct:xvmc_pix_fmt
data_offset	include/libavformat/avformat.h	/^    int64_t data_offset; \/**< offset of the first packet *\/$/;"	m	struct:AVFormatContext
dbl	include/libavutil/opt.h	/^        double dbl;$/;"	m	union:AVOption::__anon11
dct_algo	include/libavcodec/avcodec.h	/^    int dct_algo;$/;"	m	struct:AVCodecContext
dct_coeff	include/libavutil/frame.h	/^    short *dct_coeff;$/;"	m	struct:AVFrame
debug	include/libavcodec/avcodec.h	/^    int debug;$/;"	m	struct:AVCodecContext
debug	include/libavformat/avformat.h	/^    int debug;$/;"	m	struct:AVFormatContext
debug_mv	include/libavcodec/avcodec.h	/^    int debug_mv;$/;"	m	struct:AVCodecContext
decode	include/libavcodec/avcodec.h	/^    int (*decode)(AVCodecContext *, void *outdata, int *outdata_size, AVPacket *avpkt);$/;"	m	struct:AVCodec
decodeAudioExtradata	HLSReader.cpp	/^void decodeAudioExtradata(HLSReader *reader, uint8_t *profile, $/;"	f
decodeAudioSpecificInfo	HLSReader.cpp	/^void decodeAudioSpecificInfo(HLSReader *reader, uint8_t *profile, $/;"	f
decode_error_flags	include/libavutil/frame.h	/^    int decode_error_flags;$/;"	m	struct:AVFrame
decode_mb	include/libavcodec/avcodec.h	/^    void (*decode_mb)(struct MpegEncContext *s);$/;"	m	struct:AVHWAccel
decode_slice	include/libavcodec/avcodec.h	/^    int (*decode_slice)(AVCodecContext *avctx, const uint8_t *buf, uint32_t buf_size);$/;"	m	struct:AVHWAccel
decoder	include/libavcodec/dxva2.h	/^    IDirectXVideoDecoder *decoder;$/;"	m	struct:dxva_context
decoder	include/libavcodec/vda.h	/^    VDADecoder          decoder;$/;"	m	struct:vda_context
decoder	include/libavcodec/vda.h	/^    VDADecoder decoder;$/;"	m	struct:AVVDAContext
decoder	include/libavcodec/vdpau.h	/^    VdpDecoder decoder;$/;"	m	struct:AVVDPAUContext
default_device	include/libavdevice/avdevice.h	/^    int default_device;                  \/**< index of default device or -1 if no default *\/$/;"	m	struct:AVDeviceInfoList
default_val	include/libavutil/opt.h	/^    } default_val;$/;"	m	struct:AVOption	typeref:union:AVOption::__anon11
defaults	include/libavcodec/avcodec.h	/^    const AVCodecDefault *defaults;$/;"	m	struct:AVCodec
delay	include/libavcodec/avcodec.h	/^    int delay;$/;"	m	struct:AVCodecContext
den	include/libavformat/avformat.h	/^    int64_t val, num, den;$/;"	m	struct:AVFrac
den	include/libavutil/rational.h	/^    int den; \/\/\/< denominator$/;"	m	struct:AVRational
depth_minus1	include/libavutil/pixdesc.h	/^    uint16_t depth_minus1 : 4;$/;"	m	struct:AVComponentDescriptor
description	include/libavfilter/avfilter.h	/^    const char *description;$/;"	m	struct:AVFilter
destruct	include/libavcodec/avcodec.h	/^    void  (*destruct)(struct AVPacket *);$/;"	m	struct:AVPacket
device_context	include/libavdevice/avdevice.h	/^    AVFormatContext *device_context;$/;"	m	struct:AVDeviceCapabilitiesQuery
device_description	include/libavdevice/avdevice.h	/^    char *device_description;            \/**< human friendly name *\/$/;"	m	struct:AVDeviceInfo
device_name	include/libavdevice/avdevice.h	/^    char *device_name;                   \/**< device name, format depends on device *\/$/;"	m	struct:AVDeviceInfo
devices	include/libavdevice/avdevice.h	/^    AVDeviceInfo **devices;              \/**< list of autodetected devices *\/$/;"	m	struct:AVDeviceInfoList
dia_size	include/libavcodec/avcodec.h	/^    int dia_size;$/;"	m	struct:AVCodecContext
difseg_size	include/libavcodec/dv_profile.h	/^    int              difseg_size;           \/* number of DIF segments per DIF channel *\/$/;"	m	struct:AVDVProfile
direct	include/libavformat/avio.h	/^    int direct;$/;"	m	struct:AVIOContext
disable_auto_convert	include/libavfilter/avfilter.h	/^    unsigned disable_auto_convert;$/;"	m	struct:AVFilterGraph
discard	include/libavformat/avformat.h	/^    enum AVDiscard discard;        \/\/\/< selects which program to discard and which to feed to the caller$/;"	m	struct:AVProgram	typeref:enum:AVProgram::AVDiscard
discard	include/libavformat/avformat.h	/^    enum AVDiscard discard; \/\/\/< Selects which packets can be discarded at will and do not need to be demuxed.$/;"	m	struct:AVStream	typeref:enum:AVStream::AVDiscard
display	include/libavcodec/vaapi.h	/^    void *display;$/;"	m	struct:vaapi_context
display_aspect_ratio	include/libavformat/avformat.h	/^    AVRational display_aspect_ratio;$/;"	m	struct:AVStream
display_picture_number	include/libavutil/frame.h	/^    int display_picture_number;$/;"	m	struct:AVFrame
disposition	include/libavformat/avformat.h	/^    int disposition; \/**< AV_DISPOSITION_* bit field *\/$/;"	m	struct:AVStream
do_hls_stream_reader_thread	HLSReader.cpp	/^static void * do_hls_stream_reader_thread(void *args)$/;"	f	file:
draw_horiz_band	include/libavcodec/avcodec.h	/^    void (*draw_horiz_band)(struct AVCodecContext *s,$/;"	m	struct:AVCodecContext
draw_slice	include/libavfilter/avfilter.h	/^    int (*draw_slice)(AVFilterLink *link, int y, int height, int slice_dir);$/;"	m	struct:AVFilterPad
dsf	include/libavcodec/dv_profile.h	/^    int              dsf;                   \/* value of the dsf in the DV header *\/$/;"	m	struct:AVDVProfile
dst	include/libavfilter/avfilter.h	/^    AVFilterContext *dst;       \/\/\/< dest filter$/;"	m	struct:AVFilterLink
dst_x	include/libavutil/motion_vector.h	/^    int16_t dst_x, dst_y;$/;"	m	struct:AVMotionVector
dst_y	include/libavutil/motion_vector.h	/^    int16_t dst_x, dst_y;$/;"	m	struct:AVMotionVector
dstpad	include/libavfilter/avfilter.h	/^    AVFilterPad *dstpad;        \/\/\/< input pad on the dest filter$/;"	m	struct:AVFilterLink
dtg_active_format	include/libavcodec/avcodec.h	/^    attribute_deprecated int dtg_active_format;$/;"	m	struct:AVCodecContext
dts	include/libavcodec/avcodec.h	/^    int64_t dts;     \/* dts of the current frame *\/$/;"	m	struct:AVCodecParserContext
dts	include/libavcodec/avcodec.h	/^    int64_t dts;$/;"	m	struct:AVPacket
dts_misordered	include/libavformat/avformat.h	/^    uint8_t dts_misordered;$/;"	m	struct:AVStream
dts_ordered	include/libavformat/avformat.h	/^    uint8_t dts_ordered;$/;"	m	struct:AVStream
dts_ref_dts_delta	include/libavcodec/avcodec.h	/^    int dts_ref_dts_delta;$/;"	m	struct:AVCodecParserContext
dts_sync_point	include/libavcodec/avcodec.h	/^    int dts_sync_point;$/;"	m	struct:AVCodecParserContext
dump_separator	include/libavcodec/avcodec.h	/^    uint8_t *dump_separator;$/;"	m	struct:AVCodecContext
dump_separator	include/libavformat/avformat.h	/^    uint8_t *dump_separator;$/;"	m	struct:AVFormatContext
duration	HLSReader.cpp	/^int64_t duration(HLSReader *reader)$/;"	f
duration	include/libavcodec/avcodec.h	/^    int   duration;$/;"	m	struct:AVPacket
duration	include/libavcodec/avcodec.h	/^    int duration;$/;"	m	struct:AVCodecParserContext
duration	include/libavformat/avformat.h	/^    int64_t duration;$/;"	m	struct:AVFormatContext
duration	include/libavformat/avformat.h	/^    int64_t duration;$/;"	m	struct:AVStream
duration_count	include/libavformat/avformat.h	/^        int duration_count;$/;"	m	struct:AVStream::__anon15
duration_error	include/libavformat/avformat.h	/^        double (*duration_error)[2][MAX_STD_TIMEBASES];$/;"	m	struct:AVStream::__anon15
duration_estimation_method	include/libavformat/avformat.h	/^    enum AVDurationEstimationMethod duration_estimation_method;$/;"	m	struct:AVFormatContext	typeref:enum:AVFormatContext::AVDurationEstimationMethod
duration_gcd	include/libavformat/avformat.h	/^        int64_t duration_gcd;$/;"	m	struct:AVStream::__anon15
dxva_context	include/libavcodec/dxva2.h	/^struct dxva_context {$/;"	s
enable	include/libavfilter/avfilter.h	/^    void *enable;                   \/\/\/< parsed expression (AVExpr*)$/;"	m	struct:AVFilterContext
enable_str	include/libavfilter/avfilter.h	/^    char *enable_str;               \/\/\/< enable expression string$/;"	m	struct:AVFilterContext
encode2	include/libavcodec/avcodec.h	/^    int (*encode2)(AVCodecContext *avctx, AVPacket *avpkt, const AVFrame *frame,$/;"	m	struct:AVCodec
encode_sub	include/libavcodec/avcodec.h	/^    int (*encode_sub)(AVCodecContext *, uint8_t *buf, int buf_size,$/;"	m	struct:AVCodec
end	include/libavformat/avformat.h	/^    int64_t start, end;     \/\/\/< chapter start\/end time in time_base units$/;"	m	struct:AVChapter
end	include/libavutil/fifo.h	/^    uint8_t *rptr, *wptr, *end;$/;"	m	struct:AVFifoBuffer
end_display_time	include/libavcodec/avcodec.h	/^    uint32_t end_display_time; \/* relative to packet pts, in ms *\/$/;"	m	struct:AVSubtitle
end_frame	include/libavcodec/avcodec.h	/^    int (*end_frame)(AVCodecContext *avctx);$/;"	m	struct:AVHWAccel
end_frame	include/libavcodec/avcodec.h	/^    int end_frame;$/;"	m	struct:RcOverride
end_frame	include/libavfilter/avfilter.h	/^    int (*end_frame)(AVFilterLink *link);$/;"	m	struct:AVFilterPad
end_time	include/libavformat/avformat.h	/^    int64_t end_time;$/;"	m	struct:AVProgram
enqueue_empty_packet	HLSReader.cpp	/^static void enqueue_empty_packet(HLSReader *reader)$/;"	f	file:
eof_reached	include/libavformat/avio.h	/^    int eof_reached;        \/**< true if eof reached *\/$/;"	m	struct:AVIOContext
err_recognition	include/libavcodec/avcodec.h	/^    int err_recognition;$/;"	m	struct:AVCodecContext
error	include/libavcodec/avcodec.h	/^    uint64_t error[AV_NUM_DATA_POINTERS];$/;"	m	struct:AVCodecContext
error	include/libavformat/avio.h	/^    int error;              \/**< contains the error code or 0 if no error happened *\/$/;"	m	struct:AVIOContext
error	include/libavutil/frame.h	/^    uint64_t error[AV_NUM_DATA_POINTERS];$/;"	m	struct:AVFrame
error_concealment	include/libavcodec/avcodec.h	/^    int error_concealment;$/;"	m	struct:AVCodecContext
error_rate	include/libavcodec/avcodec.h	/^    int error_rate;$/;"	m	struct:AVCodecContext
error_recognition	include/libavformat/avformat.h	/^    int error_recognition;$/;"	m	struct:AVFormatContext
event_flags	include/libavformat/avformat.h	/^    int event_flags;$/;"	m	struct:AVFormatContext
event_flags	include/libavformat/avformat.h	/^    int event_flags;$/;"	m	struct:AVStream
execute	include/libavcodec/avcodec.h	/^    int (*execute)(struct AVCodecContext *c, int (*func)(struct AVCodecContext *c2, void *arg), void *arg2, int *ret, int count, int size);$/;"	m	struct:AVCodecContext
execute	include/libavfilter/avfilter.h	/^    avfilter_execute_func *execute;$/;"	m	struct:AVFilterGraph
execute2	include/libavcodec/avcodec.h	/^    int (*execute2)(struct AVCodecContext *c, int (*func)(struct AVCodecContext *c2, void *arg, int jobnr, int threadnr), void *arg2, int *ret, int count);$/;"	m	struct:AVCodecContext
extended_buf	include/libavutil/frame.h	/^    AVBufferRef **extended_buf;$/;"	m	struct:AVFrame
extended_data	include/libavfilter/avfilter.h	/^    uint8_t **extended_data;$/;"	m	struct:AVFilterBuffer
extended_data	include/libavfilter/avfilter.h	/^    uint8_t **extended_data;$/;"	m	struct:AVFilterBufferRef
extended_data	include/libavutil/frame.h	/^    uint8_t **extended_data;$/;"	m	struct:AVFrame
extensions	include/libavformat/avformat.h	/^    const char *extensions; \/**< comma-separated filename extensions *\/$/;"	m	struct:AVOutputFormat
extensions	include/libavformat/avformat.h	/^    const char *extensions;$/;"	m	struct:AVInputFormat
extradata	include/libavcodec/avcodec.h	/^    uint8_t *extradata;$/;"	m	struct:AVCodecContext
extradata_size	include/libavcodec/avcodec.h	/^    int extradata_size;$/;"	m	struct:AVCodecContext
f	include/libavutil/intfloat.h	/^    double   f;$/;"	m	union:av_intfloat64
f	include/libavutil/intfloat.h	/^    float    f;$/;"	m	union:av_intfloat32
f32	include/libavutil/intreadwrite.h	/^    float    f32;$/;"	m	union:__anon7
f32	include/libavutil/intreadwrite.h	/^    float    f32[2];$/;"	m	union:__anon6
f64	include/libavutil/intreadwrite.h	/^    double   f64;$/;"	m	union:__anon6
fetch_timestamp	include/libavcodec/avcodec.h	/^    int fetch_timestamp;$/;"	m	struct:AVCodecParserContext
field_order	include/libavcodec/avcodec.h	/^    enum AVFieldOrder field_order;$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVFieldOrder
field_order	include/libavcodec/avcodec.h	/^    enum AVFieldOrder field_order;$/;"	m	struct:AVCodecParserContext	typeref:enum:AVCodecParserContext::AVFieldOrder
filename	include/libavformat/avformat.h	/^    char filename[1024];$/;"	m	struct:AVFormatContext
filename	include/libavformat/avformat.h	/^    const char *filename;$/;"	m	struct:AVProbeData
filled_mv_blocks_num	include/libavcodec/xvmc.h	/^    int             filled_mv_blocks_num;$/;"	m	struct:xvmc_pix_fmt
filter	include/libavcodec/avcodec.h	/^    int (*filter)(AVBitStreamFilterContext *bsfc,$/;"	m	struct:AVBitStreamFilter
filter	include/libavcodec/avcodec.h	/^    struct AVBitStreamFilter *filter;$/;"	m	struct:AVBitStreamFilterContext	typeref:struct:AVBitStreamFilterContext::AVBitStreamFilter
filter	include/libavfilter/avfilter.h	/^    const AVFilter *filter;         \/\/\/< the AVFilter of which this is an instance$/;"	m	struct:AVFilterContext
filter_count_unused	include/libavfilter/avfilter.h	/^    unsigned filter_count_unused;$/;"	m	struct:AVFilterGraph
filter_ctx	include/libavfilter/avfilter.h	/^    AVFilterContext *filter_ctx;$/;"	m	struct:AVFilterInOut
filter_frame	include/libavfilter/avfilter.h	/^    int (*filter_frame)(AVFilterLink *link, AVFrame *frame);$/;"	m	struct:AVFilterPad
filters	include/libavfilter/avfilter.h	/^    AVFilterContext **filters;$/;"	m	struct:AVFilterGraph
find_video_keyframe	HLSReader.cpp	/^static void find_video_keyframe(HLSReader *reader)$/;"	f	file:
first_discard_sample	include/libavformat/avformat.h	/^    int64_t first_discard_sample;$/;"	m	struct:AVStream
first_dts	include/libavformat/avformat.h	/^    int64_t first_dts;$/;"	m	struct:AVStream
flags	HLSExtractor.cpp	/^uint32_t HLSExtractor::flags() const {$/;"	f	class:android::HLSExtractor
flags	include/libavcodec/avcodec.h	/^    int   flags;$/;"	m	struct:AVPacket
flags	include/libavcodec/avcodec.h	/^    int flags;$/;"	m	struct:AVCodecContext
flags	include/libavcodec/avcodec.h	/^    int flags;$/;"	m	struct:AVCodecParserContext
flags	include/libavcodec/avcodec.h	/^    int flags;$/;"	m	struct:AVSubtitleRect
flags	include/libavcodec/xvmc.h	/^    unsigned int    flags;$/;"	m	struct:xvmc_pix_fmt
flags	include/libavfilter/avfilter.h	/^    int flags;$/;"	m	struct:AVFilter
flags	include/libavfilter/avfilter.h	/^    unsigned flags;$/;"	m	struct:AVFilterLink
flags	include/libavformat/avformat.h	/^    int            flags;$/;"	m	struct:AVProgram
flags	include/libavformat/avformat.h	/^    int flags:2;$/;"	m	struct:AVIndexEntry
flags	include/libavformat/avformat.h	/^    int flags;$/;"	m	struct:AVFormatContext
flags	include/libavformat/avformat.h	/^    int flags;$/;"	m	struct:AVInputFormat
flags	include/libavformat/avformat.h	/^    int flags;$/;"	m	struct:AVOutputFormat
flags	include/libavutil/frame.h	/^    int flags;$/;"	m	struct:AVFrame
flags	include/libavutil/motion_vector.h	/^    uint64_t flags;$/;"	m	struct:AVMotionVector
flags	include/libavutil/opt.h	/^    int flags;$/;"	m	struct:AVOption
flags	include/libavutil/pixdesc.h	/^    uint8_t flags;$/;"	m	struct:AVPixFmtDescriptor
flags	include/libavutil/stereo3d.h	/^    int flags;$/;"	m	struct:AVStereo3D
flags	include/libavutil/timecode.h	/^    uint32_t flags;     \/\/\/< flags such as drop frame, +24 hours support, ...$/;"	m	struct:__anon10
flags2	include/libavcodec/avcodec.h	/^    int flags2;$/;"	m	struct:AVCodecContext
flush	include/libavcodec/avcodec.h	/^    void (*flush)(AVCodecContext *);$/;"	m	struct:AVCodec
flush_packets	include/libavformat/avformat.h	/^    int flush_packets;$/;"	m	struct:AVFormatContext
format	include/libavcodec/avcodec.h	/^    uint16_t format; \/* 0 = graphics *\/$/;"	m	struct:AVSubtitle
format	include/libavcodec/vda.h	/^    int                 format;$/;"	m	struct:vda_context
format	include/libavfilter/avfilter.h	/^    int format;                 \/\/\/< agreed upon media format$/;"	m	struct:AVFilterLink
format	include/libavfilter/avfilter.h	/^    int format;                 \/\/\/< media format$/;"	m	struct:AVFilterBuffer
format	include/libavfilter/avfilter.h	/^    int format;                 \/\/\/< media format$/;"	m	struct:AVFilterBufferRef
format	include/libavutil/frame.h	/^    int format;$/;"	m	struct:AVFrame
format_probesize	include/libavformat/avformat.h	/^    int format_probesize;$/;"	m	struct:AVFormatContext
format_whitelist	include/libavformat/avformat.h	/^    char *format_whitelist;$/;"	m	struct:AVFormatContext
found_decoder	include/libavformat/avformat.h	/^        int found_decoder;$/;"	m	struct:AVStream::__anon15
fps	include/libavdevice/avdevice.h	/^    AVRational fps;$/;"	m	struct:AVDeviceCapabilitiesQuery
fps	include/libavutil/timecode.h	/^    unsigned fps;       \/\/\/< frame per second; must be consistent with the rate field$/;"	m	struct:__anon10
fps_first_dts	include/libavformat/avformat.h	/^        int64_t fps_first_dts;$/;"	m	struct:AVStream::__anon15
fps_first_dts_idx	include/libavformat/avformat.h	/^        int     fps_first_dts_idx;$/;"	m	struct:AVStream::__anon15
fps_last_dts	include/libavformat/avformat.h	/^        int64_t fps_last_dts;$/;"	m	struct:AVStream::__anon15
fps_last_dts_idx	include/libavformat/avformat.h	/^        int     fps_last_dts_idx;$/;"	m	struct:AVStream::__anon15
fps_probe_size	include/libavformat/avformat.h	/^    int fps_probe_size;$/;"	m	struct:AVFormatContext
frame_bits	include/libavcodec/avcodec.h	/^    int frame_bits;$/;"	m	struct:AVCodecContext
frame_count	include/libavfilter/avfilter.h	/^    int64_t frame_count;$/;"	m	struct:AVFilterLink
frame_height	include/libavdevice/avdevice.h	/^    int frame_height;$/;"	m	struct:AVDeviceCapabilitiesQuery
frame_number	include/libavcodec/avcodec.h	/^    int frame_number;$/;"	m	struct:AVCodecContext
frame_offset	include/libavcodec/avcodec.h	/^    int64_t frame_offset; \/* offset of the current frame *\/$/;"	m	struct:AVCodecParserContext
frame_priv_data_size	include/libavcodec/avcodec.h	/^    int frame_priv_data_size;$/;"	m	struct:AVHWAccel
frame_rate	include/libavfilter/avfilter.h	/^    AVRational frame_rate;$/;"	m	struct:AVFilterLink
frame_requested	include/libavfilter/avfilter.h	/^    unsigned frame_requested;$/;"	m	struct:AVFilterLink
frame_size	include/libavcodec/avcodec.h	/^    int frame_size;$/;"	m	struct:AVCodecContext
frame_size	include/libavcodec/dv_profile.h	/^    int              frame_size;            \/* total size of one frame in bytes *\/$/;"	m	struct:AVDVProfile
frame_skip_cmp	include/libavcodec/avcodec.h	/^    int frame_skip_cmp;$/;"	m	struct:AVCodecContext
frame_skip_exp	include/libavcodec/avcodec.h	/^    int frame_skip_exp;$/;"	m	struct:AVCodecContext
frame_skip_factor	include/libavcodec/avcodec.h	/^    int frame_skip_factor;$/;"	m	struct:AVCodecContext
frame_skip_threshold	include/libavcodec/avcodec.h	/^    int frame_skip_threshold;$/;"	m	struct:AVCodecContext
frame_width	include/libavdevice/avdevice.h	/^    int frame_width;$/;"	m	struct:AVDeviceCapabilitiesQuery
framerate	include/libavcodec/avcodec.h	/^    AVRational framerate;$/;"	m	struct:AVCodecContext
free	include/libavfilter/avfilter.h	/^    void (*free)(struct AVFilterBuffer *buf);$/;"	m	struct:AVFilterBuffer
free_device_capabilities	include/libavformat/avformat.h	/^    int (*free_device_capabilities)(struct AVFormatContext *s, struct AVDeviceCapabilitiesQuery *caps);$/;"	m	struct:AVInputFormat
free_device_capabilities	include/libavformat/avformat.h	/^    int (*free_device_capabilities)(struct AVFormatContext *s, struct AVDeviceCapabilitiesQuery *caps);$/;"	m	struct:AVOutputFormat
gHLSReader	HLSReader.cpp	/^static HLSReader *gHLSReader = NULL;$/;"	v	file:
getFormat	HLSExtractor.cpp	/^sp<MetaData> HLSSource::getFormat() {$/;"	f	class:android::HLSSource
getMetaData	HLSExtractor.cpp	/^sp<MetaData> HLSExtractor::getMetaData() {$/;"	f	class:android::HLSExtractor
getTrack	HLSExtractor.cpp	/^sp<MediaSource> HLSExtractor::getTrack(size_t index) {$/;"	f	class:android::HLSExtractor
getTrackMetaData	HLSExtractor.cpp	/^sp<MetaData> HLSExtractor::getTrackMetaData($/;"	f	class:android::HLSExtractor
get_audio_buffer	include/libavfilter/avfilter.h	/^    AVFrame *(*get_audio_buffer)(AVFilterLink *link, int nb_samples);$/;"	m	struct:AVFilterPad
get_buffer	include/libavcodec/avcodec.h	/^    int (*get_buffer)(struct AVCodecContext *c, AVFrame *pic);$/;"	m	struct:AVCodecContext
get_buffer2	include/libavcodec/avcodec.h	/^    int (*get_buffer2)(struct AVCodecContext *s, AVFrame *frame, int flags);$/;"	m	struct:AVCodecContext
get_category	include/libavutil/log.h	/^    AVClassCategory (*get_category)(void* ctx);$/;"	m	struct:AVClass
get_device_list	include/libavformat/avformat.h	/^    int (*get_device_list)(struct AVFormatContext *s, struct AVDeviceInfoList *device_list);$/;"	m	struct:AVInputFormat
get_device_list	include/libavformat/avformat.h	/^    int (*get_device_list)(struct AVFormatContext *s, struct AVDeviceInfoList *device_list);$/;"	m	struct:AVOutputFormat
get_format	include/libavcodec/avcodec.h	/^    enum AVPixelFormat (*get_format)(struct AVCodecContext *s, const enum AVPixelFormat * fmt);$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::get_format
get_output_timestamp	include/libavformat/avformat.h	/^    void (*get_output_timestamp)(struct AVFormatContext *s, int stream,$/;"	m	struct:AVOutputFormat
get_video_buffer	include/libavfilter/avfilter.h	/^    AVFrame *(*get_video_buffer)(AVFilterLink *link, int w, int h);$/;"	m	struct:AVFilterPad
global_quality	include/libavcodec/avcodec.h	/^    int global_quality;$/;"	m	struct:AVCodecContext
gop_size	include/libavcodec/avcodec.h	/^    int gop_size;$/;"	m	struct:AVCodecContext
graph	include/libavfilter/avfilter.h	/^    struct AVFilterGraph *graph;    \/\/\/< filtergraph this filter belongs to$/;"	m	struct:AVFilterContext	typeref:struct:AVFilterContext::AVFilterGraph
graph	include/libavfilter/avfilter.h	/^    struct AVFilterGraph *graph;$/;"	m	struct:AVFilterLink	typeref:struct:AVFilterLink::AVFilterGraph
h	include/libavcodec/avcodec.h	/^    int h;         \/\/\/< height           of pict, undefined when pict is not set$/;"	m	struct:AVSubtitleRect
h	include/libavfilter/avfilter.h	/^    int h;                      \/\/\/< agreed upon image height$/;"	m	struct:AVFilterLink
h	include/libavfilter/avfilter.h	/^    int h;                      \/\/\/< image height$/;"	m	struct:AVFilterBufferRefVideoProps
h	include/libavfilter/avfilter.h	/^    int w, h;                   \/\/\/< width and height of the allocated buffer$/;"	m	struct:AVFilterBuffer
h	include/libavutil/motion_vector.h	/^    uint8_t w, h;$/;"	m	struct:AVMotionVector
h264	include/libavcodec/vdpau.h	/^    VdpPictureInfoH264        h264;$/;"	m	union:AVVDPAUPictureInfo
has_b_frames	include/libavcodec/avcodec.h	/^    int has_b_frames;$/;"	m	struct:AVCodecContext
head	Queue.h	/^    struct node *head;$/;"	m	struct:Queue	typeref:struct:Queue::node
header_bits	include/libavcodec/avcodec.h	/^    int header_bits;$/;"	m	struct:AVCodecContext
height	HLSReader.cpp	/^int height(HLSReader *reader)$/;"	f
height	include/libavcodec/avcodec.h	/^    int height;$/;"	m	struct:AVPanScan
height	include/libavcodec/avcodec.h	/^    int width, height;$/;"	m	struct:AVCodecContext
height	include/libavcodec/dv_profile.h	/^    int              height;                \/* picture height in pixels *\/$/;"	m	struct:AVDVProfile
height	include/libavcodec/vda.h	/^    int                 height;$/;"	m	struct:vda_context
height	include/libavdevice/avdevice.h	/^    int height; \/**< height *\/$/;"	m	struct:AVDeviceRect
height	include/libavutil/frame.h	/^    int width, height;$/;"	m	struct:AVFrame
help	include/libavutil/opt.h	/^    const char *help;$/;"	m	struct:AVOption
hls_reader_destroy	HLSReader.cpp	/^void hls_reader_destroy(HLSReader *reader)$/;"	f
hls_reader_init	HLSReader.cpp	/^_status_t hls_reader_init(const char *url, HLSReader *reader)$/;"	f
hwaccel	include/libavcodec/avcodec.h	/^    struct AVHWAccel *hwaccel;$/;"	m	struct:AVCodecContext	typeref:struct:AVCodecContext::AVHWAccel
hwaccel_context	include/libavcodec/avcodec.h	/^    void *hwaccel_context;$/;"	m	struct:AVCodecContext
hwaccel_picture_private	include/libavutil/frame.h	/^    attribute_deprecated void *hwaccel_picture_private;$/;"	m	struct:AVFrame
i	include/libavutil/intfloat.h	/^    uint32_t i;$/;"	m	union:av_intfloat32
i	include/libavutil/intfloat.h	/^    uint64_t i;$/;"	m	union:av_intfloat64
i64	include/libavutil/opt.h	/^        int64_t i64;$/;"	m	union:AVOption::__anon11
i_count	include/libavcodec/avcodec.h	/^    int i_count;$/;"	m	struct:AVCodecContext
i_quant_factor	include/libavcodec/avcodec.h	/^    float i_quant_factor;$/;"	m	struct:AVCodecContext
i_quant_offset	include/libavcodec/avcodec.h	/^    float i_quant_offset;$/;"	m	struct:AVCodecContext
i_tex_bits	include/libavcodec/avcodec.h	/^    int i_tex_bits;$/;"	m	struct:AVCodecContext
id	include/libavcodec/avcodec.h	/^    enum AVCodecID     id;$/;"	m	struct:AVCodecDescriptor	typeref:enum:AVCodecDescriptor::AVCodecID
id	include/libavcodec/avcodec.h	/^    enum AVCodecID id;$/;"	m	struct:AVCodec	typeref:enum:AVCodec::AVCodecID
id	include/libavcodec/avcodec.h	/^    enum AVCodecID id;$/;"	m	struct:AVHWAccel	typeref:enum:AVHWAccel::AVCodecID
id	include/libavcodec/avcodec.h	/^    int id;$/;"	m	struct:AVPanScan
id	include/libavformat/avformat.h	/^    int            id;$/;"	m	struct:AVProgram
id	include/libavformat/avformat.h	/^    int id;                 \/\/\/< unique ID to identify the chapter$/;"	m	struct:AVChapter
id	include/libavformat/avformat.h	/^    int id;$/;"	m	struct:AVStream
idct	include/libavcodec/xvmc.h	/^    int             idct;$/;"	m	struct:xvmc_pix_fmt
idct_algo	include/libavcodec/avcodec.h	/^    int idct_algo;$/;"	m	struct:AVCodecContext
iformat	include/libavformat/avformat.h	/^    struct AVInputFormat *iformat;$/;"	m	struct:AVFormatContext	typeref:struct:AVFormatContext::AVInputFormat
ildct_cmp	include/libavcodec/avcodec.h	/^    int ildct_cmp;$/;"	m	struct:AVCodecContext
im	include/libavcodec/avfft.h	/^    FFTSample re, im;$/;"	m	struct:FFTComplex
in_channel_layouts	include/libavfilter/avfilter.h	/^    struct AVFilterChannelLayouts  *in_channel_layouts;$/;"	m	struct:AVFilterLink	typeref:struct:AVFilterLink::AVFilterChannelLayouts
in_formats	include/libavfilter/avfilter.h	/^    AVFilterFormats *in_formats;$/;"	m	struct:AVFilterLink
in_samplerates	include/libavfilter/avfilter.h	/^    AVFilterFormats  *in_samplerates;$/;"	m	struct:AVFilterLink
index	include/libavformat/avformat.h	/^    int index;    \/**< stream index in AVFormatContext *\/$/;"	m	struct:AVStream
index	include/libavutil/lfg.h	/^    int index;$/;"	m	struct:AVLFG
index_entries	include/libavformat/avformat.h	/^    AVIndexEntry *index_entries; \/**< Only used if the format does not$/;"	m	struct:AVStream
index_entries_allocated_size	include/libavformat/avformat.h	/^    unsigned int index_entries_allocated_size;$/;"	m	struct:AVStream
info	include/libavcodec/vdpau.h	/^    union AVVDPAUPictureInfo info;$/;"	m	struct:AVVDPAUContext	typeref:union:AVVDPAUContext::AVVDPAUPictureInfo
info	include/libavcodec/vdpau.h	/^    union AVVDPAUPictureInfo info;$/;"	m	struct:vdpau_render_state	typeref:union:vdpau_render_state::AVVDPAUPictureInfo
info	include/libavformat/avformat.h	/^    } *info;$/;"	m	struct:AVStream	typeref:struct:AVStream::__anon15
init	HLSExtractor.cpp	/^void HLSExtractor::init() {$/;"	f	class:android::HLSExtractor
init	include/libavcodec/avcodec.h	/^    int (*init)(AVCodecContext *);$/;"	m	struct:AVCodec
init	include/libavcodec/avcodec.h	/^    int (*init)(AVCodecContext *avctx);$/;"	m	struct:AVHWAccel
init	include/libavfilter/avfilter.h	/^    int (*init)(AVFilterContext *ctx);$/;"	m	struct:AVFilter
init_dict	include/libavfilter/avfilter.h	/^    int (*init_dict)(AVFilterContext *ctx, AVDictionary **options);$/;"	m	struct:AVFilter
init_opaque	include/libavfilter/avfilter.h	/^    int (*init_opaque)(AVFilterContext *ctx, void *opaque);$/;"	m	struct:AVFilter
init_reader	HLSReader.cpp	/^static void init_reader(HLSReader *reader)$/;"	f	file:
init_state	include/libavfilter/avfilter.h	/^    } init_state;$/;"	m	struct:AVFilterLink	typeref:enum:AVFilterLink::__anon3
init_static_data	include/libavcodec/avcodec.h	/^    void (*init_static_data)(struct AVCodec *codec);$/;"	m	struct:AVCodec
init_thread_copy	include/libavcodec/avcodec.h	/^    int (*init_thread_copy)(AVCodecContext *);$/;"	m	struct:AVCodec
initial_padding	include/libavcodec/avcodec.h	/^    int initial_padding;$/;"	m	struct:AVCodecContext
inject_global_side_data	include/libavformat/avformat.h	/^    int inject_global_side_data;$/;"	m	struct:AVStream
input_count	include/libavfilter/avfilter.h	/^    attribute_deprecated unsigned input_count; \/\/\/< @deprecated use nb_inputs$/;"	m	struct:AVFilterContext
input_pads	include/libavfilter/avfilter.h	/^    AVFilterPad   *input_pads;      \/\/\/< array of input pads$/;"	m	struct:AVFilterContext
inputs	include/libavfilter/avfilter.h	/^    AVFilterLink **inputs;          \/\/\/< array of pointers to input links$/;"	m	struct:AVFilterContext
inputs	include/libavfilter/avfilter.h	/^    const AVFilterPad *inputs;$/;"	m	struct:AVFilter
instance	HLSReader.cpp	/^HLSReader * instance(void)$/;"	f
inter_matrix	include/libavcodec/avcodec.h	/^    uint16_t *inter_matrix;$/;"	m	struct:AVCodecContext
inter_quant_bias	include/libavcodec/avcodec.h	/^    int inter_quant_bias;$/;"	m	struct:AVCodecContext
interlaced	include/libavfilter/avfilter.h	/^    int interlaced;             \/\/\/< is frame interlaced$/;"	m	struct:AVFilterBufferRefVideoProps
interlaced_frame	include/libavutil/frame.h	/^    int interlaced_frame;$/;"	m	struct:AVFrame
interleave_packet	include/libavformat/avformat.h	/^    int (*interleave_packet)(struct AVFormatContext *, AVPacket *out,$/;"	m	struct:AVOutputFormat
interleaver_chunk_duration	include/libavformat/avformat.h	/^    int64_t interleaver_chunk_duration;$/;"	m	struct:AVStream
interleaver_chunk_size	include/libavformat/avformat.h	/^    int64_t interleaver_chunk_size;$/;"	m	struct:AVStream
internal	include/libavcodec/avcodec.h	/^    struct AVCodecInternal *internal;$/;"	m	struct:AVCodecContext	typeref:struct:AVCodecContext::AVCodecInternal
internal	include/libavfilter/avfilter.h	/^    AVFilterGraphInternal *internal;$/;"	m	struct:AVFilterGraph
internal	include/libavfilter/avfilter.h	/^    AVFilterInternal *internal;$/;"	m	struct:AVFilterContext
internal	include/libavformat/avformat.h	/^    AVFormatInternal *internal;$/;"	m	struct:AVFormatContext
interrupt_callback	include/libavformat/avformat.h	/^    AVIOInterruptCB interrupt_callback;$/;"	m	struct:AVFormatContext
intra_dc_precision	include/libavcodec/avcodec.h	/^    int intra_dc_precision;$/;"	m	struct:AVCodecContext
intra_matrix	include/libavcodec/avcodec.h	/^    uint16_t *intra_matrix;$/;"	m	struct:AVCodecContext
intra_quant_bias	include/libavcodec/avcodec.h	/^    int intra_quant_bias;$/;"	m	struct:AVCodecContext
io_repositioned	include/libavformat/avformat.h	/^    int io_repositioned;$/;"	m	struct:AVFormatContext
iq_matrix_buf_id	include/libavcodec/vaapi.h	/^    uint32_t iq_matrix_buf_id;$/;"	m	struct:vaapi_context
isADTS	HLSReader.cpp	/^bool isADTS(HLSReader *reader)$/;"	f
is_disabled	include/libavfilter/avfilter.h	/^    int is_disabled;                \/\/\/< the enabled state from the last expression evaluation$/;"	m	struct:AVFilterContext
is_exit	Queue.h	/^    bool is_exit;$/;"	m	struct:Queue
is_mp4_section	HLSReader.h	/^    bool is_mp4_section;$/;"	m	struct:HLSReader
is_pause	HLSReader.h	/^    volatile bool is_pause;$/;"	m	struct:HLSReader
is_range	include/libavutil/opt.h	/^    int is_range;$/;"	m	struct:AVOptionRange
is_running	HLSReader.h	/^    volatile bool is_running;$/;"	m	struct:HLSReader
is_seek	HLSReader.h	/^    volatile bool is_seek;$/;"	m	struct:HLSReader
is_stop	HLSReader.h	/^    volatile bool is_stop;$/;"	m	struct:HLSReader
item_name	include/libavutil/log.h	/^    const char* (*item_name)(void* ctx);$/;"	m	struct:AVClass
kVDADecodeInfo_Asynchronous	include/libavcodec/vda.h	/^    kVDADecodeInfo_Asynchronous = 1UL << 0,$/;"	e	enum:__anon14
kVDADecodeInfo_FrameDropped	include/libavcodec/vda.h	/^    kVDADecodeInfo_FrameDropped = 1UL << 1$/;"	e	enum:__anon14
key	include/libavformat/avformat.h	/^    const uint8_t *key;$/;"	m	struct:AVFormatContext
key	include/libavutil/dict.h	/^    char *key;$/;"	m	struct:AVDictionaryEntry
key	include/libavutil/xtea.h	/^    uint32_t key[16];$/;"	m	struct:AVXTEA
key_frame	include/libavcodec/avcodec.h	/^    int key_frame;$/;"	m	struct:AVCodecParserContext
key_frame	include/libavfilter/avfilter.h	/^    int key_frame;              \/\/\/< 1 -> keyframe, 0-> not$/;"	m	struct:AVFilterBufferRefVideoProps
key_frame	include/libavutil/frame.h	/^    int key_frame;$/;"	m	struct:AVFrame
keyint_min	include/libavcodec/avcodec.h	/^    int keyint_min;$/;"	m	struct:AVCodecContext
keylen	include/libavformat/avformat.h	/^    int keylen;$/;"	m	struct:AVFormatContext
l	include/libavutil/intreadwrite.h	/^union unaligned_16 { uint16_t l; } __attribute__((packed)) av_alias;$/;"	m	union:unaligned_16
l	include/libavutil/intreadwrite.h	/^union unaligned_32 { uint32_t l; } __attribute__((packed)) av_alias;$/;"	m	union:unaligned_32
l	include/libavutil/intreadwrite.h	/^union unaligned_64 { uint64_t l; } __attribute__((packed)) av_alias;$/;"	m	union:unaligned_64
last_IP_duration	include/libavformat/avformat.h	/^    int last_IP_duration;$/;"	m	struct:AVStream
last_IP_pts	include/libavformat/avformat.h	/^    int64_t last_IP_pts;$/;"	m	struct:AVStream
last_audio_ts	HLSReader.h	/^    int64_t last_audio_ts;$/;"	m	struct:HLSReader
last_discard_sample	include/libavformat/avformat.h	/^    int64_t last_discard_sample;$/;"	m	struct:AVStream
last_dts	include/libavcodec/avcodec.h	/^    int64_t last_dts;$/;"	m	struct:AVCodecParserContext
last_dts	include/libavformat/avformat.h	/^        int64_t last_dts;$/;"	m	struct:AVStream::__anon15
last_dts_for_order_check	include/libavformat/avformat.h	/^    int64_t last_dts_for_order_check;$/;"	m	struct:AVStream
last_duration	include/libavformat/avformat.h	/^        int64_t last_duration;$/;"	m	struct:AVStream::__anon15
last_in_packet_buffer	include/libavformat/avformat.h	/^    struct AVPacketList *last_in_packet_buffer;$/;"	m	struct:AVStream	typeref:struct:AVStream::AVPacketList
last_pos	include/libavcodec/avcodec.h	/^    int64_t last_pos;$/;"	m	struct:AVCodecParserContext
last_predictor_count	include/libavcodec/avcodec.h	/^    int last_predictor_count;$/;"	m	struct:AVCodecContext
last_pts	include/libavcodec/avcodec.h	/^    int64_t last_pts;$/;"	m	struct:AVCodecParserContext
last_video_ts	HLSReader.h	/^    int64_t last_video_ts;$/;"	m	struct:HLSReader
length	include/libswscale/swscale.h	/^    int length;                 \/\/\/< number of coefficients in the vector$/;"	m	struct:SwsVector
level	include/libavcodec/avcodec.h	/^     int level;$/;"	m	struct:AVCodecContext
lfe_mix_level	include/libavutil/downmix_info.h	/^    double lfe_mix_level;$/;"	m	struct:AVDownmixInfo
linesize	include/libavcodec/avcodec.h	/^    int linesize[AV_NUM_DATA_POINTERS];     \/\/\/< number of bytes per line$/;"	m	struct:AVPicture
linesize	include/libavfilter/avfilter.h	/^    int linesize[8];            \/\/\/< number of bytes per line$/;"	m	struct:AVFilterBuffer
linesize	include/libavfilter/avfilter.h	/^    int linesize[8];            \/\/\/< number of bytes per line$/;"	m	struct:AVFilterBufferRef
linesize	include/libavutil/frame.h	/^    int linesize[AV_NUM_DATA_POINTERS];$/;"	m	struct:AVFrame
lmax	include/libavcodec/avcodec.h	/^    int lmax;$/;"	m	struct:AVCodecContext
lmin	include/libavcodec/avcodec.h	/^    int lmin;$/;"	m	struct:AVCodecContext
log2_chroma_h	include/libavutil/pixdesc.h	/^    uint8_t log2_chroma_h;$/;"	m	struct:AVPixFmtDescriptor
log2_chroma_w	include/libavutil/pixdesc.h	/^    uint8_t log2_chroma_w;  \/\/\/< chroma_width = -((-luma_width )>>log2_chroma_w)$/;"	m	struct:AVPixFmtDescriptor
log_level_offset	include/libavcodec/avcodec.h	/^    int log_level_offset;$/;"	m	struct:AVCodecContext
log_level_offset_offset	include/libavutil/log.h	/^    int log_level_offset_offset;$/;"	m	struct:AVClass
long_name	include/libavcodec/avcodec.h	/^    const char *long_name;$/;"	m	struct:AVCodec
long_name	include/libavcodec/avcodec.h	/^    const char *long_name;$/;"	m	struct:AVCodecDescriptor
long_name	include/libavformat/avformat.h	/^    const char *long_name;$/;"	m	struct:AVInputFormat
long_name	include/libavformat/avformat.h	/^    const char *long_name;$/;"	m	struct:AVOutputFormat
lowres	include/libavcodec/avcodec.h	/^     int lowres;$/;"	m	struct:AVCodecContext
ltc_divisor	include/libavcodec/dv_profile.h	/^    int              ltc_divisor;           \/* FPS from the LTS standpoint *\/$/;"	m	struct:AVDVProfile
lumH	include/libswscale/swscale.h	/^    SwsVector *lumH;$/;"	m	struct:SwsFilter
lumV	include/libswscale/swscale.h	/^    SwsVector *lumV;$/;"	m	struct:SwsFilter
lumi_masking	include/libavcodec/avcodec.h	/^    float lumi_masking;$/;"	m	struct:AVCodecContext
mDataSource	HLSExtractor.h	/^    sp<DataSource> mDataSource;$/;"	m	struct:android::HLSExtractor
mExtractor	HLSExtractor.cpp	/^    sp<HLSExtractor> mExtractor;$/;"	m	struct:android::HLSSource	file:
mHLSReader	HLSExtractor.cpp	/^    HLSReader *mHLSReader;$/;"	m	struct:android::HLSSource	file:
mHLSReader	HLSExtractor.h	/^    HLSReader *mHLSReader;$/;"	m	struct:android::HLSExtractor
mInitCheck	HLSExtractor.h	/^    status_t mInitCheck;$/;"	m	struct:android::HLSExtractor
mIsVideo	HLSExtractor.cpp	/^    bool mIsVideo;$/;"	m	struct:android::HLSSource	file:
mLock	HLSExtractor.cpp	/^    mutable Mutex mLock;$/;"	m	struct:android::HLSSource	file:
mLock	HLSExtractor.h	/^    mutable Mutex mLock;$/;"	m	struct:android::HLSExtractor
mMetaData	HLSExtractor.cpp	/^    sp<MetaData> mMetaData;$/;"	m	struct:android::HLSSource	file:
mTracks	HLSExtractor.h	/^    KeyedVector<unsigned, sp<HLSSource> > mTracks;$/;"	m	struct:android::HLSExtractor
mWithStartCode	HLSExtractor.cpp	/^    bool mWithStartCode;$/;"	m	struct:android::HLSSource	file:
make_node	Queue.cpp	/^static struct node * make_node(AVPacket *pkt)$/;"	f	file:
max	include/libavutil/opt.h	/^    double max;                 \/\/\/< maximum valid value for the option$/;"	m	struct:AVOption
max_analyze_duration	include/libavformat/avformat.h	/^    int max_analyze_duration;$/;"	m	struct:AVFormatContext
max_analyze_duration2	include/libavformat/avformat.h	/^    int64_t max_analyze_duration2;$/;"	m	struct:AVFormatContext
max_b_frames	include/libavcodec/avcodec.h	/^    int max_b_frames;$/;"	m	struct:AVCodecContext
max_chunk_duration	include/libavformat/avformat.h	/^    int max_chunk_duration;$/;"	m	struct:AVFormatContext
max_chunk_size	include/libavformat/avformat.h	/^    int max_chunk_size;$/;"	m	struct:AVFormatContext
max_delay	include/libavformat/avformat.h	/^    int max_delay;$/;"	m	struct:AVFormatContext
max_index_size	include/libavformat/avformat.h	/^    unsigned int max_index_size;$/;"	m	struct:AVFormatContext
max_interleave_delta	include/libavformat/avformat.h	/^    int64_t max_interleave_delta;$/;"	m	struct:AVFormatContext
max_lowres	include/libavcodec/avcodec.h	/^    uint8_t max_lowres;                     \/\/\/< maximum value for lowres supported by the decoder, no direct access, use av_codec_get_max_lowres()$/;"	m	struct:AVCodec
max_packet_size	include/libavformat/avio.h	/^    int max_packet_size;$/;"	m	struct:AVIOContext
max_picture_buffer	include/libavformat/avformat.h	/^    unsigned int max_picture_buffer;$/;"	m	struct:AVFormatContext
max_prediction_order	include/libavcodec/avcodec.h	/^    int max_prediction_order;$/;"	m	struct:AVCodecContext
max_qdiff	include/libavcodec/avcodec.h	/^    int max_qdiff;$/;"	m	struct:AVCodecContext
max_samples	include/libavfilter/avfilter.h	/^    int max_samples;$/;"	m	struct:AVFilterLink
max_ts_probe	include/libavformat/avformat.h	/^    int max_ts_probe;$/;"	m	struct:AVFormatContext
maxsize	include/libavformat/avio.h	/^    int64_t maxsize;$/;"	m	struct:AVIOContext
mb_cmp	include/libavcodec/avcodec.h	/^    int mb_cmp;$/;"	m	struct:AVCodecContext
mb_decision	include/libavcodec/avcodec.h	/^    int mb_decision;$/;"	m	struct:AVCodecContext
mb_lmax	include/libavcodec/avcodec.h	/^    int mb_lmax;$/;"	m	struct:AVCodecContext
mb_lmin	include/libavcodec/avcodec.h	/^    int mb_lmin;$/;"	m	struct:AVCodecContext
mb_threshold	include/libavcodec/avcodec.h	/^    int mb_threshold;$/;"	m	struct:AVCodecContext
mb_type	include/libavutil/frame.h	/^    uint32_t *mb_type;$/;"	m	struct:AVFrame
mbskip_table	include/libavutil/frame.h	/^    uint8_t *mbskip_table;$/;"	m	struct:AVFrame
me_cmp	include/libavcodec/avcodec.h	/^    int me_cmp;$/;"	m	struct:AVCodecContext
me_method	include/libavcodec/avcodec.h	/^    int me_method;$/;"	m	struct:AVCodecContext
me_penalty_compensation	include/libavcodec/avcodec.h	/^    int me_penalty_compensation;$/;"	m	struct:AVCodecContext
me_pre_cmp	include/libavcodec/avcodec.h	/^    int me_pre_cmp;$/;"	m	struct:AVCodecContext
me_range	include/libavcodec/avcodec.h	/^    int me_range;$/;"	m	struct:AVCodecContext
me_sub_cmp	include/libavcodec/avcodec.h	/^    int me_sub_cmp;$/;"	m	struct:AVCodecContext
me_subpel_quality	include/libavcodec/avcodec.h	/^    int me_subpel_quality;$/;"	m	struct:AVCodecContext
me_threshold	include/libavcodec/avcodec.h	/^    int me_threshold;$/;"	m	struct:AVCodecContext
metadata	include/libavfilter/avfilter.h	/^    AVDictionary *metadata;     \/\/\/< dictionary containing metadata key=value tags$/;"	m	struct:AVFilterBufferRef
metadata	include/libavformat/avformat.h	/^    AVDictionary *metadata;$/;"	m	struct:AVChapter
metadata	include/libavformat/avformat.h	/^    AVDictionary *metadata;$/;"	m	struct:AVFormatContext
metadata	include/libavformat/avformat.h	/^    AVDictionary *metadata;$/;"	m	struct:AVProgram
metadata	include/libavformat/avformat.h	/^    AVDictionary *metadata;$/;"	m	struct:AVStream
metadata	include/libavutil/frame.h	/^    AVDictionary *metadata;$/;"	m	struct:AVFrame
metadata	include/libavutil/frame.h	/^    AVDictionary *metadata;$/;"	m	struct:AVFrameSideData
metadata_header_padding	include/libavformat/avformat.h	/^    int metadata_header_padding;$/;"	m	struct:AVFormatContext
mime_type	include/libavformat/avformat.h	/^    const char *mime_type; \/**< mime_type, when known. *\/$/;"	m	struct:AVProbeData
mime_type	include/libavformat/avformat.h	/^    const char *mime_type;$/;"	m	struct:AVInputFormat
mime_type	include/libavformat/avformat.h	/^    const char *mime_type;$/;"	m	struct:AVOutputFormat
mime_types	include/libavcodec/avcodec.h	/^    const char *const *mime_types;$/;"	m	struct:AVCodecDescriptor
min	include/libavutil/opt.h	/^    double min;                 \/\/\/< minimum valid value for the option$/;"	m	struct:AVOption
min_distance	include/libavformat/avformat.h	/^    int min_distance;         \/**< Minimum distance between this and the previous keyframe, used to avoid unneeded searching. *\/$/;"	m	struct:AVIndexEntry
min_perms	include/libavfilter/avfilter.h	/^    attribute_deprecated int min_perms;$/;"	m	struct:AVFilterPad
min_prediction_order	include/libavcodec/avcodec.h	/^    int min_prediction_order;$/;"	m	struct:AVCodecContext
min_samples	include/libavfilter/avfilter.h	/^    int min_samples;$/;"	m	struct:AVFilterLink
misc_bits	include/libavcodec/avcodec.h	/^    int misc_bits;$/;"	m	struct:AVCodecContext
motion_subsample_log2	include/libavutil/frame.h	/^    uint8_t motion_subsample_log2;$/;"	m	struct:AVFrame
motion_val	include/libavutil/frame.h	/^    int16_t (*motion_val[2])[2];$/;"	m	struct:AVFrame
mpeg	include/libavcodec/vdpau.h	/^    VdpPictureInfoMPEG1Or2    mpeg;$/;"	m	union:AVVDPAUPictureInfo
mpeg4	include/libavcodec/vdpau.h	/^    VdpPictureInfoMPEG4Part2 mpeg4;$/;"	m	union:AVVDPAUPictureInfo
mpeg_quant	include/libavcodec/avcodec.h	/^    int mpeg_quant;$/;"	m	struct:AVCodecContext
must_flush	include/libavformat/avio.h	/^    int must_flush;         \/**< true if the next seek should flush *\/$/;"	m	struct:AVIOContext
mutex	Queue.h	/^    pthread_mutex_t mutex;$/;"	m	struct:Queue
mux_ts_offset	include/libavformat/avformat.h	/^    int64_t mux_ts_offset;$/;"	m	struct:AVStream
mv0_threshold	include/libavcodec/avcodec.h	/^    int mv0_threshold;$/;"	m	struct:AVCodecContext
mv_bits	include/libavcodec/avcodec.h	/^    int mv_bits;$/;"	m	struct:AVCodecContext
mv_blocks	include/libavcodec/xvmc.h	/^    XvMCMacroBlock* mv_blocks;$/;"	m	struct:xvmc_pix_fmt
n_difchan	include/libavcodec/dv_profile.h	/^    int              n_difchan;             \/* number of DIF channels per frame *\/$/;"	m	struct:AVDVProfile
n_slice_buf_ids	include/libavcodec/vaapi.h	/^    unsigned int n_slice_buf_ids;$/;"	m	struct:vaapi_context
name	include/libavcodec/avcodec.h	/^    const char      *name;$/;"	m	struct:AVCodecDescriptor
name	include/libavcodec/avcodec.h	/^    const char *name; \/\/\/< short name for the profile$/;"	m	struct:AVProfile
name	include/libavcodec/avcodec.h	/^    const char *name;$/;"	m	struct:AVBitStreamFilter
name	include/libavcodec/avcodec.h	/^    const char *name;$/;"	m	struct:AVCodec
name	include/libavcodec/avcodec.h	/^    const char *name;$/;"	m	struct:AVHWAccel
name	include/libavfilter/avfilter.h	/^    char *name;                     \/\/\/< name of this filter instance$/;"	m	struct:AVFilterContext
name	include/libavfilter/avfilter.h	/^    char *name;$/;"	m	struct:AVFilterInOut
name	include/libavfilter/avfilter.h	/^    const char *name;$/;"	m	struct:AVFilter
name	include/libavfilter/avfilter.h	/^    const char *name;$/;"	m	struct:AVFilterPad
name	include/libavformat/avformat.h	/^    const char *name;$/;"	m	struct:AVInputFormat
name	include/libavformat/avformat.h	/^    const char *name;$/;"	m	struct:AVOutputFormat
name	include/libavutil/opt.h	/^    const char *name;$/;"	m	struct:AVOption
name	include/libavutil/pixdesc.h	/^    const char *name;$/;"	m	struct:AVPixFmtDescriptor
nb_chapters	include/libavformat/avformat.h	/^    unsigned int nb_chapters;$/;"	m	struct:AVFormatContext
nb_colors	include/libavcodec/avcodec.h	/^    int nb_colors; \/\/\/< number of colors in pict, undefined when pict is not set$/;"	m	struct:AVSubtitleRect
nb_components	include/libavutil/opt.h	/^    int nb_components;$/;"	m	struct:AVOptionRanges
nb_components	include/libavutil/pixdesc.h	/^    uint8_t nb_components;  \/\/\/< The number of components each pixel has, (1-4)$/;"	m	struct:AVPixFmtDescriptor
nb_decoded_frames	include/libavformat/avformat.h	/^    int nb_decoded_frames;$/;"	m	struct:AVStream
nb_devices	include/libavdevice/avdevice.h	/^    int nb_devices;                      \/**< number of autodetected devices *\/$/;"	m	struct:AVDeviceInfoList
nb_extended_buf	include/libavutil/frame.h	/^    int        nb_extended_buf;$/;"	m	struct:AVFrame
nb_filters	include/libavfilter/avfilter.h	/^    unsigned nb_filters;$/;"	m	struct:AVFilterGraph
nb_frames	include/libavformat/avformat.h	/^    int64_t nb_frames;                 \/\/\/< number of frames in this stream if known or 0$/;"	m	struct:AVStream
nb_index_entries	include/libavformat/avformat.h	/^    int nb_index_entries;$/;"	m	struct:AVStream
nb_inputs	include/libavfilter/avfilter.h	/^    unsigned    nb_inputs;          \/\/\/< number of input pads$/;"	m	struct:AVFilterContext
nb_outputs	include/libavfilter/avfilter.h	/^    unsigned    nb_outputs;         \/\/\/< number of output pads$/;"	m	struct:AVFilterContext
nb_programs	include/libavformat/avformat.h	/^    unsigned int nb_programs;$/;"	m	struct:AVFormatContext
nb_ranges	include/libavutil/opt.h	/^    int nb_ranges;$/;"	m	struct:AVOptionRanges
nb_samples	include/libavfilter/avfilter.h	/^    int nb_samples;             \/\/\/< number of audio samples per channel$/;"	m	struct:AVFilterBufferRefAudioProps
nb_samples	include/libavutil/frame.h	/^    int nb_samples;$/;"	m	struct:AVFrame
nb_side_data	include/libavformat/avformat.h	/^    int            nb_side_data;$/;"	m	struct:AVStream
nb_side_data	include/libavutil/frame.h	/^    int            nb_side_data;$/;"	m	struct:AVFrame
nb_stream_indexes	include/libavformat/avformat.h	/^    unsigned int   nb_stream_indexes;$/;"	m	struct:AVProgram
nb_streams	include/libavformat/avformat.h	/^    unsigned int nb_streams;$/;"	m	struct:AVFormatContext
nb_threads	include/libavfilter/avfilter.h	/^    int nb_threads;$/;"	m	struct:AVFilterGraph
need_parsing	include/libavformat/avformat.h	/^    enum AVStreamParseType need_parsing;$/;"	m	struct:AVStream	typeref:enum:AVStream::AVStreamParseType
needs_fifo	include/libavfilter/avfilter.h	/^    int needs_fifo;$/;"	m	struct:AVFilterPad
needs_writable	include/libavfilter/avfilter.h	/^    int needs_writable;$/;"	m	struct:AVFilterPad
next	Queue.h	/^    struct node *next;$/;"	m	struct:node	typeref:struct:node::node
next	include/libavcodec/avcodec.h	/^    struct AVBitStreamFilter *next;$/;"	m	struct:AVBitStreamFilter	typeref:struct:AVBitStreamFilter::AVBitStreamFilter
next	include/libavcodec/avcodec.h	/^    struct AVBitStreamFilterContext *next;$/;"	m	struct:AVBitStreamFilterContext	typeref:struct:AVBitStreamFilterContext::AVBitStreamFilterContext
next	include/libavcodec/avcodec.h	/^    struct AVCodec *next;$/;"	m	struct:AVCodec	typeref:struct:AVCodec::AVCodec
next	include/libavcodec/avcodec.h	/^    struct AVCodecParser *next;$/;"	m	struct:AVCodecParser	typeref:struct:AVCodecParser::AVCodecParser
next	include/libavcodec/avcodec.h	/^    struct AVHWAccel *next;$/;"	m	struct:AVHWAccel	typeref:struct:AVHWAccel::AVHWAccel
next	include/libavfilter/avfilter.h	/^    struct AVFilter *next;$/;"	m	struct:AVFilter	typeref:struct:AVFilter::AVFilter
next	include/libavfilter/avfilter.h	/^    struct AVFilterInOut *next;$/;"	m	struct:AVFilterInOut	typeref:struct:AVFilterInOut::AVFilterInOut
next	include/libavformat/avformat.h	/^    struct AVInputFormat *next;$/;"	m	struct:AVInputFormat	typeref:struct:AVInputFormat::AVInputFormat
next	include/libavformat/avformat.h	/^    struct AVOutputFormat *next;$/;"	m	struct:AVOutputFormat	typeref:struct:AVOutputFormat::AVOutputFormat
next	include/libavformat/avformat.h	/^    struct AVPacketList *next;$/;"	m	struct:AVPacketList	typeref:struct:AVPacketList::AVPacketList
next_frame_offset	include/libavcodec/avcodec.h	/^    int64_t next_frame_offset; \/* offset of the next frame *\/$/;"	m	struct:AVCodecParserContext
next_free_data_block_num	include/libavcodec/xvmc.h	/^    int             next_free_data_block_num;$/;"	m	struct:xvmc_pix_fmt
node	Queue.h	/^typedef struct node {$/;"	s
node	Queue.h	/^} node;$/;"	t	typeref:struct:node
noise_reduction	include/libavcodec/avcodec.h	/^    int noise_reduction;$/;"	m	struct:AVCodecContext
notify_hls_reader_seek	HLSReader.cpp	/^void notify_hls_reader_seek(HLSReader *reader, int64_t seekTimeUs)$/;"	f
notify_queue_exit	Queue.cpp	/^void notify_queue_exit(Queue *queue)$/;"	f
nsse_weight	include/libavcodec/avcodec.h	/^     int nsse_weight;$/;"	m	struct:AVCodecContext
num	include/libavformat/avformat.h	/^    int64_t val, num, den;$/;"	m	struct:AVFrac
num	include/libavutil/rational.h	/^    int num; \/\/\/< numerator$/;"	m	struct:AVRational
num_rects	include/libavcodec/avcodec.h	/^    unsigned num_rects;$/;"	m	struct:AVSubtitle
offset	include/libavcodec/avcodec.h	/^    int64_t offset;      \/\/\/< byte offset from starting packet start$/;"	m	struct:AVCodecParserContext
offset	include/libavformat/avformat.h	/^    int64_t offset;$/;"	m	struct:AVFormatContext
offset	include/libavutil/opt.h	/^    int offset;$/;"	m	struct:AVOption
offset_plus1	include/libavutil/pixdesc.h	/^    uint16_t offset_plus1 : 3;$/;"	m	struct:AVComponentDescriptor
offset_timebase	include/libavformat/avformat.h	/^    AVRational offset_timebase;$/;"	m	struct:AVFormatContext
oformat	include/libavformat/avformat.h	/^    struct AVOutputFormat *oformat;$/;"	m	struct:AVFormatContext	typeref:struct:AVFormatContext::AVOutputFormat
opaque	include/libavcodec/avcodec.h	/^    void *opaque;$/;"	m	struct:AVCodecContext
opaque	include/libavfilter/avfilter.h	/^    void *opaque;$/;"	m	struct:AVFilterGraph
opaque	include/libavformat/avformat.h	/^    void *opaque;$/;"	m	struct:AVFormatContext
opaque	include/libavformat/avio.h	/^    void *opaque;           \/**< A private pointer, passed to the read\/write\/seek\/...$/;"	m	struct:AVIOContext
opaque	include/libavformat/avio.h	/^    void *opaque;$/;"	m	struct:AVIOInterruptCB
opaque	include/libavutil/frame.h	/^    void *opaque;$/;"	m	struct:AVFrame
option	include/libavutil/log.h	/^    const struct AVOption *option;$/;"	m	struct:AVClass	typeref:struct:AVClass::AVOption
orig_buffer_size	include/libavformat/avio.h	/^    int orig_buffer_size;$/;"	m	struct:AVIOContext
out_channel_layouts	include/libavfilter/avfilter.h	/^    struct AVFilterChannelLayouts *out_channel_layouts;$/;"	m	struct:AVFilterLink	typeref:struct:AVFilterLink::AVFilterChannelLayouts
out_formats	include/libavfilter/avfilter.h	/^    AVFilterFormats *out_formats;$/;"	m	struct:AVFilterLink
out_samplerates	include/libavfilter/avfilter.h	/^    AVFilterFormats *out_samplerates;$/;"	m	struct:AVFilterLink
output_callback	include/libavcodec/vda.h	/^    VDADecoderOutputCallback output_callback;$/;"	m	struct:AVVDAContext
output_count	include/libavfilter/avfilter.h	/^    attribute_deprecated unsigned output_count; \/\/\/< @deprecated use nb_outputs$/;"	m	struct:AVFilterContext
output_pads	include/libavfilter/avfilter.h	/^    AVFilterPad   *output_pads;     \/\/\/< array of output pads$/;"	m	struct:AVFilterContext
output_picture_number	include/libavcodec/avcodec.h	/^    int output_picture_number;$/;"	m	struct:AVCodecParserContext
output_ts_offset	include/libavformat/avformat.h	/^    int64_t output_ts_offset;$/;"	m	struct:AVFormatContext
outputs	include/libavfilter/avfilter.h	/^    AVFilterLink **outputs;         \/\/\/< array of pointers to output links$/;"	m	struct:AVFilterContext
outputs	include/libavfilter/avfilter.h	/^    const AVFilterPad *outputs;$/;"	m	struct:AVFilter
owner	include/libavutil/frame.h	/^    struct AVCodecContext *owner;$/;"	m	struct:AVFrame	typeref:struct:AVFrame::AVCodecContext
p	include/libavutil/blowfish.h	/^    uint32_t p[AV_BF_ROUNDS + 2];$/;"	m	struct:AVBlowfish
p_count	include/libavcodec/avcodec.h	/^    int p_count;$/;"	m	struct:AVCodecContext
p_future_surface	include/libavcodec/xvmc.h	/^    XvMCSurface*    p_future_surface;$/;"	m	struct:xvmc_pix_fmt
p_masking	include/libavcodec/avcodec.h	/^    float p_masking;$/;"	m	struct:AVCodecContext
p_past_surface	include/libavcodec/xvmc.h	/^    XvMCSurface*    p_past_surface;$/;"	m	struct:xvmc_pix_fmt
p_surface	include/libavcodec/xvmc.h	/^    XvMCSurface*    p_surface;$/;"	m	struct:xvmc_pix_fmt
p_tex_bits	include/libavcodec/avcodec.h	/^    int p_tex_bits;$/;"	m	struct:AVCodecContext
packet_buffer	include/libavformat/avformat.h	/^    struct AVPacketList *packet_buffer;$/;"	m	struct:AVFormatContext	typeref:struct:AVFormatContext::AVPacketList
packet_buffer_end	include/libavformat/avformat.h	/^    struct AVPacketList *packet_buffer_end;$/;"	m	struct:AVFormatContext	typeref:struct:AVFormatContext::AVPacketList
packet_size	include/libavformat/avformat.h	/^    unsigned int packet_size;$/;"	m	struct:AVFormatContext
pad_idx	include/libavfilter/avfilter.h	/^    int pad_idx;$/;"	m	struct:AVFilterInOut
palette_has_changed	include/libavutil/frame.h	/^    int palette_has_changed;$/;"	m	struct:AVFrame
pan_scan	include/libavutil/frame.h	/^    struct AVPanScan *pan_scan;$/;"	m	struct:AVFrame	typeref:struct:AVFrame::AVPanScan
parent_log_context_offset	include/libavutil/log.h	/^    int parent_log_context_offset;$/;"	m	struct:AVClass
parse_queue	include/libavformat/avformat.h	/^    struct AVPacketList *parse_queue;$/;"	m	struct:AVFormatContext	typeref:struct:AVFormatContext::AVPacketList
parse_queue_end	include/libavformat/avformat.h	/^    struct AVPacketList *parse_queue_end;$/;"	m	struct:AVFormatContext	typeref:struct:AVFormatContext::AVPacketList
parser	include/libavcodec/avcodec.h	/^    AVCodecParserContext *parser;$/;"	m	struct:AVBitStreamFilterContext
parser	include/libavcodec/avcodec.h	/^    struct AVCodecParser *parser;$/;"	m	struct:AVCodecParserContext	typeref:struct:AVCodecParserContext::AVCodecParser
parser	include/libavformat/avformat.h	/^    struct AVCodecParserContext *parser;$/;"	m	struct:AVStream	typeref:struct:AVStream::AVCodecParserContext
parser_close	include/libavcodec/avcodec.h	/^    void (*parser_close)(AVCodecParserContext *s);$/;"	m	struct:AVCodecParser
parser_init	include/libavcodec/avcodec.h	/^    int (*parser_init)(AVCodecParserContext *s);$/;"	m	struct:AVCodecParser
parser_parse	include/libavcodec/avcodec.h	/^    int (*parser_parse)(AVCodecParserContext *s,$/;"	m	struct:AVCodecParser
partial_buf	include/libavfilter/avfilter.h	/^    AVFrame *partial_buf;$/;"	m	struct:AVFilterLink
partial_buf_size	include/libavfilter/avfilter.h	/^    int partial_buf_size;$/;"	m	struct:AVFilterLink
pb	include/libavformat/avformat.h	/^    AVIOContext *pb;$/;"	m	struct:AVFormatContext
pcr_pid	include/libavformat/avformat.h	/^    int pcr_pid;$/;"	m	struct:AVProgram
perms	include/libavfilter/avfilter.h	/^    int perms;                  \/\/\/< permissions, see the AV_PERM_* flags$/;"	m	struct:AVFilterBufferRef
pic_param_buf_id	include/libavcodec/vaapi.h	/^    uint32_t pic_param_buf_id;$/;"	m	struct:vaapi_context
pict	include/libavcodec/avcodec.h	/^    AVPicture pict;$/;"	m	struct:AVSubtitleRect
pict_type	include/libavcodec/avcodec.h	/^    int pict_type; \/* XXX: Put it back in AVCodecContext. *\/$/;"	m	struct:AVCodecParserContext
pict_type	include/libavfilter/avfilter.h	/^    enum AVPictureType pict_type; \/\/\/< picture type of the frame$/;"	m	struct:AVFilterBufferRefVideoProps	typeref:enum:AVFilterBufferRefVideoProps::AVPictureType
pict_type	include/libavutil/frame.h	/^    enum AVPictureType pict_type;$/;"	m	struct:AVFrame	typeref:enum:AVFrame::AVPictureType
picture_structure	include/libavcodec/avcodec.h	/^    enum AVPictureStructure picture_structure;$/;"	m	struct:AVCodecParserContext	typeref:enum:AVCodecParserContext::AVPictureStructure
picture_structure	include/libavcodec/xvmc.h	/^    unsigned int    picture_structure;$/;"	m	struct:xvmc_pix_fmt
pix_fmt	include/libavcodec/avcodec.h	/^    enum AVPixelFormat pix_fmt;$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVPixelFormat
pix_fmt	include/libavcodec/avcodec.h	/^    enum AVPixelFormat pix_fmt;$/;"	m	struct:AVHWAccel	typeref:enum:AVHWAccel::AVPixelFormat
pix_fmt	include/libavcodec/dv_profile.h	/^    enum AVPixelFormat pix_fmt;             \/* picture pixel format *\/$/;"	m	struct:AVDVProfile	typeref:enum:AVDVProfile::AVPixelFormat
pix_fmts	include/libavcodec/avcodec.h	/^    const enum AVPixelFormat *pix_fmts;     \/\/\/< array of supported pixel formats, or NULL if unknown, array is terminated by -1$/;"	m	struct:AVCodec	typeref:enum:AVCodec::AVPixelFormat
pixel_fmts	include/libavfilter/buffersink.h	/^    const enum AVPixelFormat *pixel_fmts; \/\/\/< list of allowed pixel formats, terminated by AV_PIX_FMT_NONE$/;"	m	struct:__anon1	typeref:enum:__anon1::AVPixelFormat
pixel_format	include/libavdevice/avdevice.h	/^    enum AVPixelFormat pixel_format;$/;"	m	struct:AVDeviceCapabilitiesQuery	typeref:enum:AVDeviceCapabilitiesQuery::AVPixelFormat
pkt	Queue.h	/^    AVPacket *pkt;$/;"	m	struct:node
pkt	include/libavcodec/avcodec.h	/^    AVPacket *pkt;$/;"	m	struct:AVCodecContext
pkt	include/libavformat/avformat.h	/^    AVPacket pkt;$/;"	m	struct:AVPacketList
pkt_dts	include/libavutil/frame.h	/^    int64_t pkt_dts;$/;"	m	struct:AVFrame
pkt_duration	include/libavutil/frame.h	/^    int64_t pkt_duration;$/;"	m	struct:AVFrame
pkt_pos	include/libavutil/frame.h	/^    int64_t pkt_pos;$/;"	m	struct:AVFrame
pkt_pts	include/libavutil/frame.h	/^    int64_t pkt_pts;$/;"	m	struct:AVFrame
pkt_size	include/libavutil/frame.h	/^    int pkt_size;$/;"	m	struct:AVFrame
pkt_timebase	include/libavcodec/avcodec.h	/^    AVRational pkt_timebase;$/;"	m	struct:AVCodecContext
plane	include/libavutil/pixdesc.h	/^    uint16_t plane        : 2;$/;"	m	struct:AVComponentDescriptor
pmt_pid	include/libavformat/avformat.h	/^    int pmt_pid;$/;"	m	struct:AVProgram
poll_frame	include/libavfilter/avfilter.h	/^    int (*poll_frame)(AVFilterLink *link);$/;"	m	struct:AVFilterPad
pool	include/libavfilter/avfilter.h	/^    struct AVFilterPool *pool;$/;"	m	struct:AVFilterLink	typeref:struct:AVFilterLink::AVFilterPool
pos	include/libavcodec/avcodec.h	/^    int64_t pos;                            \/\/\/< byte position in stream, -1 if unknown$/;"	m	struct:AVPacket
pos	include/libavcodec/avcodec.h	/^    int64_t pos;$/;"	m	struct:AVCodecParserContext
pos	include/libavfilter/avfilter.h	/^    int64_t pos;                \/\/\/< byte position in stream, -1 if unknown$/;"	m	struct:AVFilterBufferRef
pos	include/libavformat/avformat.h	/^    int64_t pos;$/;"	m	struct:AVIndexEntry
pos	include/libavformat/avio.h	/^    int64_t pos;            \/**< position in the file of the current buffer *\/$/;"	m	struct:AVIOContext
position	include/libavcodec/avcodec.h	/^    int16_t position[3][2];$/;"	m	struct:AVPanScan
pp_context	include/libpostproc/postprocess.h	/^typedef void pp_context;$/;"	t
pp_context_t	include/libpostproc/postprocess.h	/^typedef pp_context pp_context_t;$/;"	t
pp_mode	include/libpostproc/postprocess.h	/^typedef void pp_mode;$/;"	t
pp_mode_t	include/libpostproc/postprocess.h	/^typedef pp_mode pp_mode_t;$/;"	t
pre_dia_size	include/libavcodec/avcodec.h	/^    int pre_dia_size;$/;"	m	struct:AVCodecContext
pre_me	include/libavcodec/avcodec.h	/^    int pre_me;$/;"	m	struct:AVCodecContext
prediction_method	include/libavcodec/avcodec.h	/^     int prediction_method;$/;"	m	struct:AVCodecContext
preferred_downmix_type	include/libavutil/downmix_info.h	/^    enum AVDownmixType preferred_downmix_type;$/;"	m	struct:AVDownmixInfo	typeref:enum:AVDownmixInfo::AVDownmixType
priv	include/libavcodec/avcodec.h	/^    void  *priv;$/;"	m	struct:AVPacket
priv	include/libavfilter/avfilter.h	/^    void *priv;                     \/\/\/< private data for use by the filter$/;"	m	struct:AVFilterContext
priv	include/libavfilter/avfilter.h	/^    void *priv;$/;"	m	struct:AVFilterBuffer
priv_allocated_size	include/libavcodec/vda.h	/^    int                 priv_allocated_size;$/;"	m	struct:vda_context
priv_bitstream	include/libavcodec/vda.h	/^    uint8_t             *priv_bitstream;$/;"	m	struct:vda_context
priv_bitstream_size	include/libavcodec/vda.h	/^    int                 priv_bitstream_size;$/;"	m	struct:vda_context
priv_class	include/libavcodec/avcodec.h	/^    const AVClass *priv_class;              \/\/\/< AVClass for the private context$/;"	m	struct:AVCodec
priv_class	include/libavfilter/avfilter.h	/^    const AVClass *priv_class;$/;"	m	struct:AVFilter
priv_class	include/libavformat/avformat.h	/^    const AVClass *priv_class; \/\/\/< AVClass for the private context$/;"	m	struct:AVInputFormat
priv_class	include/libavformat/avformat.h	/^    const AVClass *priv_class; \/\/\/< AVClass for the private context$/;"	m	struct:AVOutputFormat
priv_data	include/libavcodec/avcodec.h	/^    void *priv_data;$/;"	m	struct:AVBitStreamFilterContext
priv_data	include/libavcodec/avcodec.h	/^    void *priv_data;$/;"	m	struct:AVCodecContext
priv_data	include/libavcodec/avcodec.h	/^    void *priv_data;$/;"	m	struct:AVCodecParserContext
priv_data	include/libavformat/avformat.h	/^    void *priv_data;$/;"	m	struct:AVFormatContext
priv_data	include/libavformat/avformat.h	/^    void *priv_data;$/;"	m	struct:AVStream
priv_data_size	include/libavcodec/avcodec.h	/^    int priv_data_size;$/;"	m	struct:AVBitStreamFilter
priv_data_size	include/libavcodec/avcodec.h	/^    int priv_data_size;$/;"	m	struct:AVCodec
priv_data_size	include/libavcodec/avcodec.h	/^    int priv_data_size;$/;"	m	struct:AVCodecParser
priv_data_size	include/libavcodec/avcodec.h	/^    int priv_data_size;$/;"	m	struct:AVHWAccel
priv_data_size	include/libavformat/avformat.h	/^    int priv_data_size;$/;"	m	struct:AVInputFormat
priv_data_size	include/libavformat/avformat.h	/^    int priv_data_size;$/;"	m	struct:AVOutputFormat
priv_size	include/libavfilter/avfilter.h	/^    int priv_size;      \/\/\/< size of private data to allocate for the filter$/;"	m	struct:AVFilter
probe_data	include/libavformat/avformat.h	/^    AVProbeData probe_data;$/;"	m	struct:AVStream
probe_packets	include/libavformat/avformat.h	/^    int probe_packets;$/;"	m	struct:AVStream
probe_score	include/libavformat/avformat.h	/^    int probe_score;$/;"	m	struct:AVFormatContext
probesize	include/libavformat/avformat.h	/^    unsigned int probesize;$/;"	m	struct:AVFormatContext
probesize2	include/libavformat/avformat.h	/^    int64_t probesize2;$/;"	m	struct:AVFormatContext
process_command	include/libavfilter/avfilter.h	/^    int (*process_command)(AVFilterContext *, const char *cmd, const char *arg, char *res, int res_len, int flags);$/;"	m	struct:AVFilter
profile	include/libavcodec/avcodec.h	/^     int profile;$/;"	m	struct:AVCodecContext
profile	include/libavcodec/avcodec.h	/^    int profile;$/;"	m	struct:AVProfile
profiles	include/libavcodec/avcodec.h	/^    const AVProfile *profiles;              \/\/\/< array of recognized profiles, or NULL if unknown, array is terminated by {FF_PROFILE_UNKNOWN}$/;"	m	struct:AVCodec
program_num	include/libavformat/avformat.h	/^    int program_num;$/;"	m	struct:AVProgram
programs	include/libavformat/avformat.h	/^    AVProgram **programs;$/;"	m	struct:AVFormatContext
props	include/libavcodec/avcodec.h	/^    int             props;$/;"	m	struct:AVCodecDescriptor
ptid	HLSReader.h	/^    pthread_t ptid;$/;"	m	struct:HLSReader
pts	include/libavcodec/avcodec.h	/^    int64_t pts;     \/* pts of the current frame *\/$/;"	m	struct:AVCodecParserContext
pts	include/libavcodec/avcodec.h	/^    int64_t pts;    \/\/\/< Same as packet pts, in AV_TIME_BASE$/;"	m	struct:AVSubtitle
pts	include/libavcodec/avcodec.h	/^    int64_t pts;$/;"	m	struct:AVPacket
pts	include/libavfilter/avfilter.h	/^    int64_t pts;$/;"	m	struct:AVFilterBufferRef
pts	include/libavformat/avformat.h	/^    struct AVFrac pts;$/;"	m	struct:AVStream	typeref:struct:AVStream::AVFrac
pts	include/libavutil/frame.h	/^    int64_t pts;$/;"	m	struct:AVFrame
pts_buffer	include/libavformat/avformat.h	/^    int64_t pts_buffer[MAX_REORDER_DELAY+1];$/;"	m	struct:AVStream
pts_correction_last_dts	include/libavcodec/avcodec.h	/^    int64_t pts_correction_last_dts;       \/\/\/ DTS of the last frame$/;"	m	struct:AVCodecContext
pts_correction_last_pts	include/libavcodec/avcodec.h	/^    int64_t pts_correction_last_pts;       \/\/\/ PTS of the last frame$/;"	m	struct:AVCodecContext
pts_correction_num_faulty_dts	include/libavcodec/avcodec.h	/^    int64_t pts_correction_num_faulty_dts; \/\/\/ Number of incorrect DTS values so far$/;"	m	struct:AVCodecContext
pts_correction_num_faulty_pts	include/libavcodec/avcodec.h	/^    int64_t pts_correction_num_faulty_pts; \/\/\/ Number of incorrect PTS values so far$/;"	m	struct:AVCodecContext
pts_dts_delta	include/libavcodec/avcodec.h	/^    int pts_dts_delta;$/;"	m	struct:AVCodecParserContext
pts_reorder_error	include/libavformat/avformat.h	/^    int64_t pts_reorder_error[MAX_REORDER_DELAY+1];$/;"	m	struct:AVStream
pts_reorder_error_count	include/libavformat/avformat.h	/^    uint8_t pts_reorder_error_count[MAX_REORDER_DELAY+1];$/;"	m	struct:AVStream
pts_wrap_behavior	include/libavformat/avformat.h	/^    int pts_wrap_behavior;         \/\/\/< behavior on wrap detection$/;"	m	struct:AVProgram
pts_wrap_behavior	include/libavformat/avformat.h	/^    int pts_wrap_behavior;$/;"	m	struct:AVStream
pts_wrap_bits	include/libavformat/avformat.h	/^    int pts_wrap_bits; \/**< number of bits in pts (used for wrapping control) *\/$/;"	m	struct:AVStream
pts_wrap_reference	include/libavformat/avformat.h	/^    int64_t pts_wrap_reference;    \/\/\/< reference dts for wrap detection$/;"	m	struct:AVProgram
pts_wrap_reference	include/libavformat/avformat.h	/^    int64_t pts_wrap_reference;$/;"	m	struct:AVStream
q	include/libavutil/opt.h	/^        AVRational q;$/;"	m	union:AVOption::__anon11
qblur	include/libavcodec/avcodec.h	/^    float qblur;      \/\/\/< amount of qscale smoothing over time (0.0-1.0)$/;"	m	struct:AVCodecContext
qcompress	include/libavcodec/avcodec.h	/^    float qcompress;  \/\/\/< amount of qscale change between easy & hard scenes (0.0-1.0)$/;"	m	struct:AVCodecContext
qmax	include/libavcodec/avcodec.h	/^    int qmax;$/;"	m	struct:AVCodecContext
qmin	include/libavcodec/avcodec.h	/^    int qmin;$/;"	m	struct:AVCodecContext
qp_table	include/libavfilter/avfilter.h	/^    int8_t *qp_table;             \/\/\/< array of Quantization Parameters$/;"	m	struct:AVFilterBufferRefVideoProps
qp_table_buf	include/libavutil/frame.h	/^    AVBufferRef *qp_table_buf;$/;"	m	struct:AVFrame
qp_table_linesize	include/libavfilter/avfilter.h	/^    int qp_table_linesize;                \/\/\/< qp_table stride$/;"	m	struct:AVFilterBufferRefVideoProps
qp_table_size	include/libavfilter/avfilter.h	/^    int qp_table_size;            \/\/\/< qp_table size$/;"	m	struct:AVFilterBufferRefVideoProps
qscale	include/libavcodec/avcodec.h	/^    int qscale; \/\/ If this is 0 then quality_factor will be used instead.$/;"	m	struct:RcOverride
qscale_table	include/libavutil/frame.h	/^    int8_t *qscale_table;$/;"	m	struct:AVFrame
qscale_type	include/libavutil/frame.h	/^    int qscale_type;$/;"	m	struct:AVFrame
qstride	include/libavutil/frame.h	/^    int qstride;$/;"	m	struct:AVFrame
quality	include/libavutil/frame.h	/^    int quality;$/;"	m	struct:AVFrame
quality_factor	include/libavcodec/avcodec.h	/^    float quality_factor;$/;"	m	struct:RcOverride
query_codec	include/libavformat/avformat.h	/^    int (*query_codec)(enum AVCodecID id, int std_compliance);$/;"	m	struct:AVOutputFormat
query_formats	include/libavfilter/avfilter.h	/^    int (*query_formats)(AVFilterContext *);$/;"	m	struct:AVFilter
query_ranges	include/libavutil/log.h	/^    int (*query_ranges)(struct AVOptionRanges **, void *obj, const char *key, int flags);$/;"	m	struct:AVClass
queue_dequeue	Queue.cpp	/^AVPacket *queue_dequeue(Queue *queue)$/;"	f
queue_dequeue_head	Queue.cpp	/^AVPacket *queue_dequeue_head(Queue *queue)$/;"	f
queue_destroy	Queue.cpp	/^void queue_destroy(Queue *queue)$/;"	f
queue_enqueue	Queue.cpp	/^void queue_enqueue(Queue *queue, AVPacket *pkt)$/;"	f
queue_flush	Queue.cpp	/^void queue_flush(Queue *queue)$/;"	f
queue_head	Queue.cpp	/^AVPacket *queue_head(Queue *queue)$/;"	f
queue_init	Queue.cpp	/^void queue_init(Queue *queue)$/;"	f
queue_size	Queue.cpp	/^int queue_size(Queue *queue)$/;"	f
r_frame_rate	include/libavformat/avformat.h	/^    AVRational r_frame_rate;$/;"	m	struct:AVStream
range	include/libavutil/opt.h	/^    AVOptionRange **range;$/;"	m	struct:AVOptionRanges
rate	include/libavutil/timecode.h	/^    AVRational rate;    \/\/\/< frame rate in rational form$/;"	m	struct:__anon10
raw_codec_id	include/libavformat/avformat.h	/^    int raw_codec_id;$/;"	m	struct:AVInputFormat
raw_packet_buffer	include/libavformat/avformat.h	/^    struct AVPacketList *raw_packet_buffer;$/;"	m	struct:AVFormatContext	typeref:struct:AVFormatContext::AVPacketList
raw_packet_buffer_end	include/libavformat/avformat.h	/^    struct AVPacketList *raw_packet_buffer_end;$/;"	m	struct:AVFormatContext	typeref:struct:AVFormatContext::AVPacketList
raw_packet_buffer_remaining_size	include/libavformat/avformat.h	/^    int raw_packet_buffer_remaining_size;$/;"	m	struct:AVFormatContext
rc_buffer_aggressivity	include/libavcodec/avcodec.h	/^    float rc_buffer_aggressivity;$/;"	m	struct:AVCodecContext
rc_buffer_size	include/libavcodec/avcodec.h	/^    int rc_buffer_size;$/;"	m	struct:AVCodecContext
rc_eq	include/libavcodec/avcodec.h	/^    const char *rc_eq;$/;"	m	struct:AVCodecContext
rc_initial_buffer_occupancy	include/libavcodec/avcodec.h	/^    int rc_initial_buffer_occupancy;$/;"	m	struct:AVCodecContext
rc_initial_cplx	include/libavcodec/avcodec.h	/^    float rc_initial_cplx;$/;"	m	struct:AVCodecContext
rc_max_available_vbv_use	include/libavcodec/avcodec.h	/^    float rc_max_available_vbv_use;$/;"	m	struct:AVCodecContext
rc_max_rate	include/libavcodec/avcodec.h	/^    int rc_max_rate;$/;"	m	struct:AVCodecContext
rc_min_rate	include/libavcodec/avcodec.h	/^    int rc_min_rate;$/;"	m	struct:AVCodecContext
rc_min_vbv_overflow_use	include/libavcodec/avcodec.h	/^    float rc_min_vbv_overflow_use;$/;"	m	struct:AVCodecContext
rc_override	include/libavcodec/avcodec.h	/^    RcOverride *rc_override;$/;"	m	struct:AVCodecContext
rc_override_count	include/libavcodec/avcodec.h	/^    int rc_override_count;$/;"	m	struct:AVCodecContext
rc_qmod_amp	include/libavcodec/avcodec.h	/^    float rc_qmod_amp;$/;"	m	struct:AVCodecContext
rc_qmod_freq	include/libavcodec/avcodec.h	/^    int rc_qmod_freq;$/;"	m	struct:AVCodecContext
rc_qsquish	include/libavcodec/avcodec.h	/^    float rc_qsquish;$/;"	m	struct:AVCodecContext
rc_strategy	include/libavcodec/avcodec.h	/^    int rc_strategy;$/;"	m	struct:AVCodecContext
re	include/libavcodec/avfft.h	/^    FFTSample re, im;$/;"	m	struct:FFTComplex
read	HLSExtractor.cpp	/^status_t HLSSource::read($/;"	f	class:android::HLSSource
read_close	include/libavformat/avformat.h	/^    int (*read_close)(struct AVFormatContext *);$/;"	m	struct:AVInputFormat
read_header	include/libavformat/avformat.h	/^    int (*read_header)(struct AVFormatContext *);$/;"	m	struct:AVInputFormat
read_packet	include/libavformat/avformat.h	/^    int (*read_packet)(struct AVFormatContext *, AVPacket *pkt);$/;"	m	struct:AVInputFormat
read_packet	include/libavformat/avio.h	/^    int (*read_packet)(void *opaque, uint8_t *buf, int buf_size);$/;"	m	struct:AVIOContext
read_pause	include/libavformat/avformat.h	/^    int (*read_pause)(struct AVFormatContext *);$/;"	m	struct:AVInputFormat
read_pause	include/libavformat/avio.h	/^    int (*read_pause)(void *opaque, int pause);$/;"	m	struct:AVIOContext
read_play	include/libavformat/avformat.h	/^    int (*read_play)(struct AVFormatContext *);$/;"	m	struct:AVInputFormat
read_probe	include/libavformat/avformat.h	/^    int (*read_probe)(AVProbeData *);$/;"	m	struct:AVInputFormat
read_seek	include/libavformat/avformat.h	/^    int (*read_seek)(struct AVFormatContext *,$/;"	m	struct:AVInputFormat
read_seek	include/libavformat/avio.h	/^    int64_t (*read_seek)(void *opaque, int stream_index,$/;"	m	struct:AVIOContext
read_seek2	include/libavformat/avformat.h	/^    int (*read_seek2)(struct AVFormatContext *s, int stream_index, int64_t min_ts, int64_t ts, int64_t max_ts, int flags);$/;"	m	struct:AVInputFormat
read_timestamp	include/libavformat/avformat.h	/^    int64_t (*read_timestamp)(struct AVFormatContext *s, int stream_index,$/;"	m	struct:AVInputFormat
recommended_encoder_configuration	include/libavformat/avformat.h	/^    char *recommended_encoder_configuration;$/;"	m	struct:AVStream
rects	include/libavcodec/avcodec.h	/^    AVSubtitleRect **rects;$/;"	m	struct:AVSubtitle
ref_index	include/libavutil/frame.h	/^    int8_t *ref_index[2];$/;"	m	struct:AVFrame
refcount	include/libavfilter/avfilter.h	/^    unsigned refcount;          \/\/\/< number of references to this buffer$/;"	m	struct:AVFilterBuffer
refcounted_frames	include/libavcodec/avcodec.h	/^    int refcounted_frames;$/;"	m	struct:AVCodecContext
reference	include/libavutil/frame.h	/^    int reference;$/;"	m	struct:AVFrame
refs	include/libavcodec/avcodec.h	/^    int refs;$/;"	m	struct:AVCodecContext
reget_buffer	include/libavcodec/avcodec.h	/^    int (*reget_buffer)(struct AVCodecContext *c, AVFrame *pic);$/;"	m	struct:AVCodecContext
rej_perms	include/libavfilter/avfilter.h	/^    attribute_deprecated int rej_perms;$/;"	m	struct:AVFilterPad
release_buffer	include/libavcodec/avcodec.h	/^    void (*release_buffer)(struct AVCodecContext *c, AVFrame *pic);$/;"	m	struct:AVCodecContext
render	include/libavcodec/vdpau.h	/^    VdpDecoderRender *render;$/;"	m	struct:AVVDPAUContext
render2	include/libavcodec/vdpau.h	/^    AVVDPAU_Render2 render2;$/;"	m	struct:AVVDPAUContext
reordered_opaque	include/libavcodec/avcodec.h	/^    int64_t reordered_opaque;$/;"	m	struct:AVCodecContext
reordered_opaque	include/libavutil/frame.h	/^    int64_t reordered_opaque;$/;"	m	struct:AVFrame
repeat_pict	include/libavcodec/avcodec.h	/^    int repeat_pict; \/* XXX: Put it back in AVCodecContext. *\/$/;"	m	struct:AVCodecParserContext
repeat_pict	include/libavutil/frame.h	/^    int repeat_pict;$/;"	m	struct:AVFrame
report_id	include/libavcodec/dxva2.h	/^    unsigned report_id;$/;"	m	struct:dxva_context
request_channel_layout	include/libavcodec/avcodec.h	/^    uint64_t request_channel_layout;$/;"	m	struct:AVCodecContext
request_channels	include/libavcodec/avcodec.h	/^    attribute_deprecated int request_channels;$/;"	m	struct:AVCodecContext
request_frame	include/libavfilter/avfilter.h	/^    int (*request_frame)(AVFilterLink *link);$/;"	m	struct:AVFilterPad
request_probe	include/libavformat/avformat.h	/^    int request_probe;$/;"	m	struct:AVStream
request_sample_fmt	include/libavcodec/avcodec.h	/^    enum AVSampleFormat request_sample_fmt;$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVSampleFormat
request_samples	include/libavfilter/avfilter.h	/^    int request_samples;$/;"	m	struct:AVFilterLink
resample_lavr_opts	include/libavfilter/avfilter.h	/^    char *resample_lavr_opts;   \/\/\/< libavresample options to use for the auto-inserted resample filters$/;"	m	struct:AVFilterGraph
rfps_duration_sum	include/libavformat/avformat.h	/^        int64_t rfps_duration_sum;$/;"	m	struct:AVStream::__anon15
rndx	include/libavutil/fifo.h	/^    uint32_t rndx, wndx;$/;"	m	struct:AVFifoBuffer
rptr	include/libavutil/fifo.h	/^    uint8_t *rptr, *wptr, *end;$/;"	m	struct:AVFifoBuffer
rtp_callback	include/libavcodec/avcodec.h	/^    void (*rtp_callback)(struct AVCodecContext *avctx, void *data, int size, int mb_nb);$/;"	m	struct:AVCodecContext
rtp_payload_size	include/libavcodec/avcodec.h	/^    int rtp_payload_size;   \/* The size of the RTP payload: the coder will  *\/$/;"	m	struct:AVCodecContext
s	include/libavutil/blowfish.h	/^    uint32_t s[4][256];$/;"	m	struct:AVBlowfish
sample_aspect_ratio	include/libavcodec/avcodec.h	/^    AVRational sample_aspect_ratio;$/;"	m	struct:AVCodecContext
sample_aspect_ratio	include/libavfilter/avfilter.h	/^    AVRational sample_aspect_ratio; \/\/\/< agreed upon sample aspect ratio$/;"	m	struct:AVFilterLink
sample_aspect_ratio	include/libavfilter/avfilter.h	/^    AVRational sample_aspect_ratio; \/\/\/< sample aspect ratio$/;"	m	struct:AVFilterBufferRefVideoProps
sample_aspect_ratio	include/libavformat/avformat.h	/^    AVRational sample_aspect_ratio;$/;"	m	struct:AVStream
sample_aspect_ratio	include/libavutil/frame.h	/^    AVRational sample_aspect_ratio;$/;"	m	struct:AVFrame
sample_fmt	include/libavcodec/avcodec.h	/^    enum AVSampleFormat sample_fmt;  \/\/\/< sample format$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVSampleFormat
sample_fmts	include/libavcodec/avcodec.h	/^    const enum AVSampleFormat *sample_fmts; \/\/\/< array of supported sample formats, or NULL if unknown, array is terminated by -1$/;"	m	struct:AVCodec	typeref:enum:AVCodec::AVSampleFormat
sample_fmts	include/libavfilter/buffersink.h	/^    const enum AVSampleFormat *sample_fmts; \/\/\/< list of allowed sample formats, terminated by AV_SAMPLE_FMT_NONE$/;"	m	struct:__anon2	typeref:enum:__anon2::AVSampleFormat
sample_format	include/libavdevice/avdevice.h	/^    enum AVSampleFormat sample_format;$/;"	m	struct:AVDeviceCapabilitiesQuery	typeref:enum:AVDeviceCapabilitiesQuery::AVSampleFormat
sample_rate	include/libavcodec/avcodec.h	/^    int sample_rate; \/\/\/< samples per second$/;"	m	struct:AVCodecContext
sample_rate	include/libavdevice/avdevice.h	/^    int sample_rate;$/;"	m	struct:AVDeviceCapabilitiesQuery
sample_rate	include/libavfilter/avfilter.h	/^    int sample_rate;            \/\/\/< audio buffer sample rate$/;"	m	struct:AVFilterBufferRefAudioProps
sample_rate	include/libavfilter/avfilter.h	/^    int sample_rate;            \/\/\/< samples per second$/;"	m	struct:AVFilterLink
sample_rate	include/libavutil/frame.h	/^    int sample_rate;$/;"	m	struct:AVFrame
sample_rates	include/libavfilter/buffersink.h	/^    int *sample_rates;                      \/\/\/< list of allowed sample rates, terminated by -1$/;"	m	struct:__anon2
sar	include/libavcodec/dv_profile.h	/^    AVRational       sar[2];                \/* sample aspect ratios for 4:3 and 16:9 *\/$/;"	m	struct:AVDVProfile
scale_sws_opts	include/libavfilter/avfilter.h	/^    char *scale_sws_opts; \/\/\/< sws options to use for the auto-inserted scale filters$/;"	m	struct:AVFilterGraph
scenechange_factor	include/libavcodec/avcodec.h	/^    attribute_deprecated int scenechange_factor;$/;"	m	struct:AVCodecContext
scenechange_threshold	include/libavcodec/avcodec.h	/^    int scenechange_threshold;$/;"	m	struct:AVCodecContext
seek	include/libavformat/avio.h	/^    int64_t (*seek)(void *opaque, int64_t offset, int whence);$/;"	m	struct:AVIOContext
seek2any	include/libavformat/avformat.h	/^    int seek2any;$/;"	m	struct:AVFormatContext
seek_count	include/libavformat/avio.h	/^    int seek_count;$/;"	m	struct:AVIOContext
seek_preroll	include/libavcodec/avcodec.h	/^    int seek_preroll;$/;"	m	struct:AVCodecContext
seek_time	HLSReader.h	/^    volatile int64_t seek_time;$/;"	m	struct:HLSReader
seekable	include/libavformat/avio.h	/^    int seekable;$/;"	m	struct:AVIOContext
set_av_stream_index	HLSReader.cpp	/^static void set_av_stream_index(HLSReader *reader)$/;"	f	file:
shift	include/libavutil/pixdesc.h	/^    uint16_t shift        : 3;$/;"	m	struct:AVComponentDescriptor
side_data	include/libavcodec/avcodec.h	/^    AVPacketSideData *side_data;$/;"	m	struct:AVPacket
side_data	include/libavformat/avformat.h	/^    AVPacketSideData *side_data;$/;"	m	struct:AVStream
side_data	include/libavutil/frame.h	/^    AVFrameSideData **side_data;$/;"	m	struct:AVFrame
side_data_elems	include/libavcodec/avcodec.h	/^    int side_data_elems;$/;"	m	struct:AVPacket
side_data_only_packets	include/libavcodec/avcodec.h	/^    int side_data_only_packets;$/;"	m	struct:AVCodecContext
sink_links	include/libavfilter/avfilter.h	/^    AVFilterLink **sink_links;$/;"	m	struct:AVFilterGraph
sink_links_count	include/libavfilter/avfilter.h	/^    int sink_links_count;$/;"	m	struct:AVFilterGraph
size	Queue.h	/^    int size;$/;"	m	struct:Queue
size	include/libavcodec/avcodec.h	/^    int      size;$/;"	m	struct:AVPacketSideData
size	include/libavcodec/avcodec.h	/^    int   size;$/;"	m	struct:AVPacket
size	include/libavformat/avformat.h	/^    int size:30; \/\/Yeah, trying to keep the size of this small to reduce memory requirements (it is 24 vs. 32 bytes due to possible 8-byte alignment).$/;"	m	struct:AVIndexEntry
size	include/libavutil/buffer.h	/^    int      size;$/;"	m	struct:AVBufferRef
size	include/libavutil/frame.h	/^    int      size;$/;"	m	struct:AVFrameSideData
skip_alpha	include/libavcodec/avcodec.h	/^    int skip_alpha;$/;"	m	struct:AVCodecContext
skip_bottom	include/libavcodec/avcodec.h	/^    int skip_bottom;$/;"	m	struct:AVCodecContext
skip_count	include/libavcodec/avcodec.h	/^    int skip_count;$/;"	m	struct:AVCodecContext
skip_frame	include/libavcodec/avcodec.h	/^    enum AVDiscard skip_frame;$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVDiscard
skip_idct	include/libavcodec/avcodec.h	/^    enum AVDiscard skip_idct;$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVDiscard
skip_initial_bytes	include/libavformat/avformat.h	/^    int64_t skip_initial_bytes;$/;"	m	struct:AVFormatContext
skip_loop_filter	include/libavcodec/avcodec.h	/^    enum AVDiscard skip_loop_filter;$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVDiscard
skip_samples	include/libavformat/avformat.h	/^    int skip_samples;$/;"	m	struct:AVStream
skip_to_keyframe	include/libavformat/avformat.h	/^    int skip_to_keyframe;$/;"	m	struct:AVStream
skip_top	include/libavcodec/avcodec.h	/^    int skip_top;$/;"	m	struct:AVCodecContext
slice_buf_ids	include/libavcodec/vaapi.h	/^    uint32_t *slice_buf_ids;$/;"	m	struct:vaapi_context
slice_buf_ids_alloc	include/libavcodec/vaapi.h	/^    unsigned int slice_buf_ids_alloc;$/;"	m	struct:vaapi_context
slice_count	include/libavcodec/avcodec.h	/^    int slice_count;$/;"	m	struct:AVCodecContext
slice_count	include/libavcodec/vaapi.h	/^    unsigned int slice_count;$/;"	m	struct:vaapi_context
slice_data	include/libavcodec/vaapi.h	/^    const uint8_t *slice_data;$/;"	m	struct:vaapi_context
slice_data_size	include/libavcodec/vaapi.h	/^    uint32_t slice_data_size;$/;"	m	struct:vaapi_context
slice_flags	include/libavcodec/avcodec.h	/^    int slice_flags;$/;"	m	struct:AVCodecContext
slice_offset	include/libavcodec/avcodec.h	/^    int *slice_offset;$/;"	m	struct:AVCodecContext
slice_param_size	include/libavcodec/vaapi.h	/^    unsigned int slice_param_size;$/;"	m	struct:vaapi_context
slice_params	include/libavcodec/vaapi.h	/^    void *slice_params;$/;"	m	struct:vaapi_context
slice_params_alloc	include/libavcodec/vaapi.h	/^    unsigned int slice_params_alloc;$/;"	m	struct:vaapi_context
slices	include/libavcodec/avcodec.h	/^    int slices;$/;"	m	struct:AVCodecContext
source	include/libavutil/motion_vector.h	/^    int32_t source;$/;"	m	struct:AVMotionVector
spatial_cplx_masking	include/libavcodec/avcodec.h	/^    float spatial_cplx_masking;$/;"	m	struct:AVCodecContext
split	include/libavcodec/avcodec.h	/^    int (*split)(AVCodecContext *avctx, const uint8_t *buf, int buf_size);$/;"	m	struct:AVCodecParser
src	include/libavfilter/avfilter.h	/^    AVFilterContext *src;       \/\/\/< source filter$/;"	m	struct:AVFilterLink
src_x	include/libavutil/motion_vector.h	/^    int16_t src_x, src_y;$/;"	m	struct:AVMotionVector
src_y	include/libavutil/motion_vector.h	/^    int16_t src_x, src_y;$/;"	m	struct:AVMotionVector
srcpad	include/libavfilter/avfilter.h	/^    AVFilterPad *srcpad;        \/\/\/< output pad on the source filter$/;"	m	struct:AVFilterLink
start	HLSExtractor.cpp	/^status_t HLSSource::start(MetaData *params) {$/;"	f	class:android::HLSSource
start	include/libavformat/avformat.h	/^    int64_t start, end;     \/\/\/< chapter start\/end time in time_base units$/;"	m	struct:AVChapter
start	include/libavutil/timecode.h	/^    int start;          \/\/\/< timecode frame start (first base frame number)$/;"	m	struct:__anon10
start_display_time	include/libavcodec/avcodec.h	/^    uint32_t start_display_time; \/* relative to packet pts, in ms *\/$/;"	m	struct:AVSubtitle
start_frame	include/libavcodec/avcodec.h	/^    int (*start_frame)(AVCodecContext *avctx, const uint8_t *buf, uint32_t buf_size);$/;"	m	struct:AVHWAccel
start_frame	include/libavcodec/avcodec.h	/^    int start_frame;$/;"	m	struct:RcOverride
start_frame	include/libavfilter/avfilter.h	/^    int (*start_frame)(AVFilterLink *link, AVFilterBufferRef *picref);$/;"	m	struct:AVFilterPad
start_hls_stream_reader_thread	HLSReader.cpp	/^void start_hls_stream_reader_thread(HLSReader *reader)$/;"	f
start_mv_blocks_num	include/libavcodec/xvmc.h	/^    int             start_mv_blocks_num;$/;"	m	struct:xvmc_pix_fmt
start_time	include/libavformat/avformat.h	/^    int64_t start_time;$/;"	m	struct:AVFormatContext
start_time	include/libavformat/avformat.h	/^    int64_t start_time;$/;"	m	struct:AVProgram
start_time	include/libavformat/avformat.h	/^    int64_t start_time;$/;"	m	struct:AVStream
start_time_realtime	include/libavformat/avformat.h	/^    int64_t start_time_realtime;$/;"	m	struct:AVFormatContext
state	include/libavcodec/vdpau.h	/^    int state; \/\/\/< Holds FF_VDPAU_STATE_* values.$/;"	m	struct:vdpau_render_state
state	include/libavutil/lfg.h	/^    unsigned int state[64];$/;"	m	struct:AVLFG
stats_in	include/libavcodec/avcodec.h	/^    char *stats_in;$/;"	m	struct:AVCodecContext
stats_out	include/libavcodec/avcodec.h	/^    char *stats_out;$/;"	m	struct:AVCodecContext
step_minus1	include/libavutil/pixdesc.h	/^    uint16_t step_minus1  : 3;$/;"	m	struct:AVComponentDescriptor
stop	HLSExtractor.cpp	/^status_t HLSSource::stop() {$/;"	f	class:android::HLSSource
stop_hls_stream_reader_thread	HLSReader.cpp	/^void stop_hls_stream_reader_thread(HLSReader *reader)$/;"	f
str	include/libavutil/opt.h	/^        const char *str;$/;"	m	union:AVOption::__anon11
str	include/libavutil/opt.h	/^    const char *str;$/;"	m	struct:AVOptionRange
stream_codec_tag	include/libavcodec/avcodec.h	/^    unsigned int stream_codec_tag;$/;"	m	struct:AVCodecContext
stream_identifier	include/libavformat/avformat.h	/^    int stream_identifier;$/;"	m	struct:AVStream
stream_index	include/libavcodec/avcodec.h	/^    int   stream_index;$/;"	m	struct:AVPacket
stream_index	include/libavformat/avformat.h	/^    unsigned int   *stream_index;$/;"	m	struct:AVProgram
streams	include/libavformat/avformat.h	/^    AVStream **streams;$/;"	m	struct:AVFormatContext
strict_std_compliance	include/libavcodec/avcodec.h	/^    int strict_std_compliance;$/;"	m	struct:AVCodecContext
strict_std_compliance	include/libavformat/avformat.h	/^    int strict_std_compliance;$/;"	m	struct:AVFormatContext
sub_charenc	include/libavcodec/avcodec.h	/^    char *sub_charenc;$/;"	m	struct:AVCodecContext
sub_charenc_mode	include/libavcodec/avcodec.h	/^    int sub_charenc_mode;$/;"	m	struct:AVCodecContext
subtitle_codec	include/libavformat/avformat.h	/^    AVCodec *subtitle_codec;$/;"	m	struct:AVFormatContext
subtitle_codec	include/libavformat/avformat.h	/^    enum AVCodecID subtitle_codec; \/**< default subtitle codec *\/$/;"	m	struct:AVOutputFormat	typeref:enum:AVOutputFormat::AVCodecID
subtitle_codec_id	include/libavformat/avformat.h	/^    enum AVCodecID subtitle_codec_id;$/;"	m	struct:AVFormatContext	typeref:enum:AVFormatContext::AVCodecID
subtitle_header	include/libavcodec/avcodec.h	/^    uint8_t *subtitle_header;$/;"	m	struct:AVCodecContext
subtitle_header_size	include/libavcodec/avcodec.h	/^    int subtitle_header_size;$/;"	m	struct:AVCodecContext
supported_framerates	include/libavcodec/avcodec.h	/^    const AVRational *supported_framerates; \/\/\/< array of supported framerates, or NULL if any, array is terminated by {0,0}$/;"	m	struct:AVCodec
supported_samplerates	include/libavcodec/avcodec.h	/^    const int *supported_samplerates;       \/\/\/< array of supported audio samplerates, or NULL if unknown, array is terminated by 0$/;"	m	struct:AVCodec
surface	include/libavcodec/dxva2.h	/^    LPDIRECT3DSURFACE9 *surface;$/;"	m	struct:dxva_context
surface	include/libavcodec/vdpau.h	/^    VdpVideoSurface surface; \/\/\/< Used as rendered surface, never changed.$/;"	m	struct:vdpau_render_state
surface_count	include/libavcodec/dxva2.h	/^    unsigned surface_count;$/;"	m	struct:dxva_context
surround_mix_level	include/libavutil/downmix_info.h	/^    double surround_mix_level;$/;"	m	struct:AVDownmixInfo
surround_mix_level_ltrt	include/libavutil/downmix_info.h	/^    double surround_mix_level_ltrt;$/;"	m	struct:AVDownmixInfo
tail	Queue.h	/^    struct node *tail;$/;"	m	struct:Queue	typeref:struct:Queue::node
temporal_cplx_masking	include/libavcodec/avcodec.h	/^    float temporal_cplx_masking;$/;"	m	struct:AVCodecContext
text	include/libavcodec/avcodec.h	/^    char *text;                     \/\/\/< 0 terminated plain UTF-8 text$/;"	m	struct:AVSubtitleRect
thread_count	include/libavcodec/avcodec.h	/^    int thread_count;$/;"	m	struct:AVCodecContext
thread_opaque	include/libavcodec/avcodec.h	/^    void *thread_opaque;$/;"	m	struct:AVCodecContext
thread_opaque	include/libavutil/frame.h	/^    void *thread_opaque;$/;"	m	struct:AVFrame
thread_safe_callbacks	include/libavcodec/avcodec.h	/^    int thread_safe_callbacks;$/;"	m	struct:AVCodecContext
thread_type	include/libavcodec/avcodec.h	/^    int thread_type;$/;"	m	struct:AVCodecContext
thread_type	include/libavfilter/avfilter.h	/^    int thread_type;$/;"	m	struct:AVFilterContext
thread_type	include/libavfilter/avfilter.h	/^    int thread_type;$/;"	m	struct:AVFilterGraph
ticks_per_frame	include/libavcodec/avcodec.h	/^    int ticks_per_frame;$/;"	m	struct:AVCodecContext
time_base	include/libavcodec/avcodec.h	/^    AVRational time_base;$/;"	m	struct:AVCodecContext
time_base	include/libavcodec/dv_profile.h	/^    AVRational       time_base;             \/* 1\/framerate *\/$/;"	m	struct:AVDVProfile
time_base	include/libavfilter/avfilter.h	/^    AVRational time_base;$/;"	m	struct:AVFilterLink
time_base	include/libavformat/avformat.h	/^    AVRational time_base;   \/\/\/< time base in which the start\/end timestamps are specified$/;"	m	struct:AVChapter
time_base	include/libavformat/avformat.h	/^    AVRational time_base;$/;"	m	struct:AVStream
timecode_frame_start	include/libavcodec/avcodec.h	/^    int64_t timecode_frame_start;$/;"	m	struct:AVCodecContext
timestamp	include/libavformat/avformat.h	/^    int64_t timestamp;        \/**<$/;"	m	struct:AVIndexEntry
top_field_first	include/libavfilter/avfilter.h	/^    int top_field_first;        \/\/\/< field order$/;"	m	struct:AVFilterBufferRefVideoProps
top_field_first	include/libavutil/frame.h	/^    int top_field_first;$/;"	m	struct:AVFrame
track_gain	include/libavutil/replaygain.h	/^    int32_t track_gain;$/;"	m	struct:AVReplayGain
track_peak	include/libavutil/replaygain.h	/^    uint32_t track_peak;$/;"	m	struct:AVReplayGain
trellis	include/libavcodec/avcodec.h	/^    int trellis;$/;"	m	struct:AVCodecContext
ts_id	include/libavformat/avformat.h	/^    int ts_id;$/;"	m	struct:AVFormatContext
type	include/libavcodec/avcodec.h	/^    enum AVMediaType type;$/;"	m	struct:AVCodec	typeref:enum:AVCodec::AVMediaType
type	include/libavcodec/avcodec.h	/^    enum AVMediaType type;$/;"	m	struct:AVCodecDescriptor	typeref:enum:AVCodecDescriptor::AVMediaType
type	include/libavcodec/avcodec.h	/^    enum AVMediaType type;$/;"	m	struct:AVHWAccel	typeref:enum:AVHWAccel::AVMediaType
type	include/libavcodec/avcodec.h	/^    enum AVPacketSideDataType type;$/;"	m	struct:AVPacketSideData	typeref:enum:AVPacketSideData::AVPacketSideDataType
type	include/libavcodec/avcodec.h	/^    enum AVSubtitleType type;$/;"	m	struct:AVSubtitleRect	typeref:enum:AVSubtitleRect::AVSubtitleType
type	include/libavfilter/avfilter.h	/^    enum AVMediaType type;      \/\/\/< filter media type$/;"	m	struct:AVFilterLink	typeref:enum:AVFilterLink::AVMediaType
type	include/libavfilter/avfilter.h	/^    enum AVMediaType type;      \/\/\/< media type of buffer data$/;"	m	struct:AVFilterBufferRef	typeref:enum:AVFilterBufferRef::AVMediaType
type	include/libavfilter/avfilter.h	/^    enum AVMediaType type;$/;"	m	struct:AVFilterPad	typeref:enum:AVFilterPad::AVMediaType
type	include/libavutil/frame.h	/^    enum AVFrameSideDataType type;$/;"	m	struct:AVFrameSideData	typeref:enum:AVFrameSideData::AVFrameSideDataType
type	include/libavutil/frame.h	/^    int type;$/;"	m	struct:AVFrame
type	include/libavutil/opt.h	/^    enum AVOptionType type;$/;"	m	struct:AVOption	typeref:enum:AVOption::AVOptionType
type	include/libavutil/stereo3d.h	/^    enum AVStereo3DType type;$/;"	m	struct:AVStereo3D	typeref:enum:AVStereo3D::AVStereo3DType
u16	include/libavutil/intreadwrite.h	/^    uint16_t u16;$/;"	m	union:__anon8
u16	include/libavutil/intreadwrite.h	/^    uint16_t u16[2];$/;"	m	union:__anon7
u16	include/libavutil/intreadwrite.h	/^    uint16_t u16[4];$/;"	m	union:__anon6
u32	include/libavutil/intreadwrite.h	/^    uint32_t u32;$/;"	m	union:__anon7
u32	include/libavutil/intreadwrite.h	/^    uint32_t u32[2];$/;"	m	union:__anon6
u64	include/libavutil/intreadwrite.h	/^    uint64_t u64;$/;"	m	union:__anon6
u8	include/libavutil/intreadwrite.h	/^    uint8_t  u8 [2];$/;"	m	union:__anon8
u8	include/libavutil/intreadwrite.h	/^    uint8_t  u8 [4];$/;"	m	union:__anon7
u8	include/libavutil/intreadwrite.h	/^    uint8_t  u8 [8];$/;"	m	union:__anon6
unaligned_16	include/libavutil/intreadwrite.h	/^union unaligned_16 { uint16_t l; } __attribute__((packed)) av_alias;$/;"	u
unaligned_32	include/libavutil/intreadwrite.h	/^union unaligned_32 { uint32_t l; } __attribute__((packed)) av_alias;$/;"	u
unaligned_64	include/libavutil/intreadwrite.h	/^union unaligned_64 { uint64_t l; } __attribute__((packed)) av_alias;$/;"	u
uninit	include/libavcodec/avcodec.h	/^    int (*uninit)(AVCodecContext *avctx);$/;"	m	struct:AVHWAccel
uninit	include/libavfilter/avfilter.h	/^    void (*uninit)(AVFilterContext *ctx);$/;"	m	struct:AVFilter
unit	include/libavutil/opt.h	/^    const char *unit;$/;"	m	struct:AVOption
unsigned_intra	include/libavcodec/xvmc.h	/^    int             unsigned_intra;$/;"	m	struct:xvmc_pix_fmt
update_checksum	include/libavformat/avio.h	/^    unsigned long (*update_checksum)(unsigned long checksum, const uint8_t *buf, unsigned int size);$/;"	m	struct:AVIOContext
update_initial_durations_done	include/libavformat/avformat.h	/^    int update_initial_durations_done;$/;"	m	struct:AVStream
update_thread_context	include/libavcodec/avcodec.h	/^    int (*update_thread_context)(AVCodecContext *dst, const AVCodecContext *src);$/;"	m	struct:AVCodec
use_ref_buffer	include/libavcodec/vda.h	/^    int                 use_ref_buffer;$/;"	m	struct:vda_context
use_sync_decoding	include/libavcodec/vda.h	/^    int                 use_sync_decoding;$/;"	m	struct:vda_context
use_wallclock_as_timestamps	include/libavformat/avformat.h	/^    int use_wallclock_as_timestamps;$/;"	m	struct:AVFormatContext
vaapi_context	include/libavcodec/vaapi.h	/^struct vaapi_context {$/;"	s
val	include/libavformat/avformat.h	/^    int64_t val, num, den;$/;"	m	struct:AVFrac
value	include/libavutil/dict.h	/^    char *value;$/;"	m	struct:AVDictionaryEntry
value_max	include/libavutil/opt.h	/^    double value_min, value_max;$/;"	m	struct:AVOptionRange
value_min	include/libavutil/opt.h	/^    double value_min, value_max;$/;"	m	struct:AVOptionRange
var_values	include/libavfilter/avfilter.h	/^    double *var_values;             \/\/\/< variable values for the enable expression$/;"	m	struct:AVFilterContext
vbv_delay	include/libavcodec/avcodec.h	/^    uint64_t vbv_delay;$/;"	m	struct:AVCodecContext
vc1	include/libavcodec/vdpau.h	/^    VdpPictureInfoVC1          vc1;$/;"	m	union:AVVDPAUPictureInfo
vda_context	include/libavcodec/vda.h	/^struct vda_context {$/;"	s
vdpau_render_state	include/libavcodec/vdpau.h	/^struct vdpau_render_state {$/;"	s
version	include/libavutil/log.h	/^    int version;$/;"	m	struct:AVClass
vextradata	HLSReader.cpp	/^uint8_t *vextradata(HLSReader *reader)$/;"	f
vextradata_size	HLSReader.cpp	/^int vextradata_size(HLSReader *reader)$/;"	f
video	include/libavfilter/avfilter.h	/^    AVFilterBufferRefVideoProps *video; \/\/\/< video buffer specific properties$/;"	m	struct:AVFilterBufferRef
video_bit_rate	HLSReader.cpp	/^int video_bit_rate(HLSReader *reader)$/;"	f
video_codec	include/libavformat/avformat.h	/^    AVCodec *video_codec;$/;"	m	struct:AVFormatContext
video_codec	include/libavformat/avformat.h	/^    enum AVCodecID video_codec;    \/**< default video codec *\/$/;"	m	struct:AVOutputFormat	typeref:enum:AVOutputFormat::AVCodecID
video_codec_id	include/libavformat/avformat.h	/^    enum AVCodecID video_codec_id;$/;"	m	struct:AVFormatContext	typeref:enum:AVFormatContext::AVCodecID
video_duration	HLSReader.cpp	/^int64_t video_duration(HLSReader *reader)$/;"	f
video_mime_type	HLSReader.cpp	/^const char * video_mime_type(HLSReader *reader)$/;"	f
video_rational	HLSReader.h	/^    AVRational video_rational;$/;"	m	struct:HLSReader
video_start_time	HLSReader.cpp	/^int64_t video_start_time(HLSReader *reader)$/;"	f
video_start_time	HLSReader.h	/^    int64_t video_start_time;$/;"	m	struct:HLSReader
video_stream_index	HLSReader.h	/^    int video_stream_index;$/;"	m	struct:HLSReader
video_stype	include/libavcodec/dv_profile.h	/^    int              video_stype;           \/* stype for VAUX source pack *\/$/;"	m	struct:AVDVProfile
video_time_base	HLSReader.cpp	/^AVRational video_time_base(HLSReader *reader)$/;"	f
video_ts_base	HLSReader.h	/^    int64_t video_ts_base;$/;"	m	struct:HLSReader
videoq	HLSReader.h	/^    Queue videoq;$/;"	m	struct:HLSReader
w	include/libavcodec/avcodec.h	/^    int w;         \/\/\/< width            of pict, undefined when pict is not set$/;"	m	struct:AVSubtitleRect
w	include/libavfilter/avfilter.h	/^    int w, h;                   \/\/\/< width and height of the allocated buffer$/;"	m	struct:AVFilterBuffer
w	include/libavfilter/avfilter.h	/^    int w;                      \/\/\/< agreed upon image width$/;"	m	struct:AVFilterLink
w	include/libavfilter/avfilter.h	/^    int w;                      \/\/\/< image width$/;"	m	struct:AVFilterBufferRefVideoProps
w	include/libavutil/motion_vector.h	/^    uint8_t w, h;$/;"	m	struct:AVMotionVector
wait_seek_finish	HLSReader.cpp	/^void wait_seek_finish(HLSReader *reader)$/;"	f
width	HLSReader.cpp	/^int width(HLSReader *reader)$/;"	f
width	include/libavcodec/avcodec.h	/^    int width, height;$/;"	m	struct:AVCodecContext
width	include/libavcodec/avcodec.h	/^    int width;$/;"	m	struct:AVPanScan
width	include/libavcodec/dv_profile.h	/^    int              width;                 \/* picture width in pixels *\/$/;"	m	struct:AVDVProfile
width	include/libavcodec/vda.h	/^    int                 width;$/;"	m	struct:vda_context
width	include/libavdevice/avdevice.h	/^    int width;  \/**< width *\/$/;"	m	struct:AVDeviceRect
width	include/libavutil/frame.h	/^    int width, height;$/;"	m	struct:AVFrame
window_height	include/libavdevice/avdevice.h	/^    int window_height;$/;"	m	struct:AVDeviceCapabilitiesQuery
window_width	include/libavdevice/avdevice.h	/^    int window_width;$/;"	m	struct:AVDeviceCapabilitiesQuery
wndx	include/libavutil/fifo.h	/^    uint32_t rndx, wndx;$/;"	m	struct:AVFifoBuffer
workaround	include/libavcodec/dxva2.h	/^    uint64_t workaround;$/;"	m	struct:dxva_context
workaround_bugs	include/libavcodec/avcodec.h	/^    int workaround_bugs;$/;"	m	struct:AVCodecContext
wptr	include/libavutil/fifo.h	/^    uint8_t *rptr, *wptr, *end;$/;"	m	struct:AVFifoBuffer
write_flag	include/libavformat/avio.h	/^    int write_flag;         \/**< true if open for writing *\/$/;"	m	struct:AVIOContext
write_header	include/libavformat/avformat.h	/^    int (*write_header)(struct AVFormatContext *);$/;"	m	struct:AVOutputFormat
write_packet	include/libavformat/avformat.h	/^    int (*write_packet)(struct AVFormatContext *, AVPacket *pkt);$/;"	m	struct:AVOutputFormat
write_packet	include/libavformat/avio.h	/^    int (*write_packet)(void *opaque, uint8_t *buf, int buf_size);$/;"	m	struct:AVIOContext
write_trailer	include/libavformat/avformat.h	/^    int (*write_trailer)(struct AVFormatContext *);$/;"	m	struct:AVOutputFormat
write_uncoded_frame	include/libavformat/avformat.h	/^    int (*write_uncoded_frame)(struct AVFormatContext *, int stream_index,$/;"	m	struct:AVOutputFormat
writeout_count	include/libavformat/avio.h	/^    int writeout_count;$/;"	m	struct:AVIOContext
x	include/libavcodec/avcodec.h	/^    int x;         \/\/\/< top left corner  of pict, undefined when pict is not set$/;"	m	struct:AVSubtitleRect
x	include/libavdevice/avdevice.h	/^    int x;      \/**< x coordinate of top left corner *\/$/;"	m	struct:AVDeviceRect
xvmc_acceleration	include/libavcodec/avcodec.h	/^    attribute_deprecated int xvmc_acceleration;$/;"	m	struct:AVCodecContext
xvmc_id	include/libavcodec/xvmc.h	/^    int             xvmc_id;$/;"	m	struct:xvmc_pix_fmt
xvmc_pix_fmt	include/libavcodec/xvmc.h	/^attribute_deprecated struct xvmc_pix_fmt {$/;"	s
y	include/libavcodec/avcodec.h	/^    int y;         \/\/\/< top left corner  of pict, undefined when pict is not set$/;"	m	struct:AVSubtitleRect
y	include/libavdevice/avdevice.h	/^    int y;      \/**< y coordinate of top left corner *\/$/;"	m	struct:AVDeviceRect
